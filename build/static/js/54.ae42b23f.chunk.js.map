{"version":3,"file":"static/js/54.ae42b23f.chunk.js","mappings":"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","sources":["Global/Components/CommonComponents/TextIconStack/TextIconStack.js","Global/Components/Generators/RadioSelectionGeneratorWithGroup/RadioSelectionGeneratorWithGroup.js","Global/Components/Generators/RadioSelectionGeneratorWithGroup/Functions/RadioGroupTypeChecker.js","Routes/Protected/UploadOnCallDocs/Components/FileOrPictureSelector/components/ShowOrSendStateButton.js","Routes/Protected/UploadOnCallDocs/Components/FileOrPictureSelector/FileOrPictureSelector.js","Routes/Protected/UploadOnCallDocs/Components/FileOrPictureSelector/variables/GeneratorProps.js","Routes/Protected/UploadOnCallDocs/Components/FileOrPictureSelector/variables/FileOrPictureDataArray.js","Routes/Protected/UploadOnCallDocs/Components/DocumentViewer/components/InformationOverview/InformationOverview.js","Routes/Protected/UploadOnCallDocs/Components/DocumentViewer/components/ImageViewer/components/ResponsiveContentInitializer.js","Routes/Protected/UploadOnCallDocs/Components/DocumentViewer/components/ImageViewer/components/ImageDownloader.js","Routes/Protected/UploadOnCallDocs/Components/DocumentViewer/components/ImageViewer/ContentViewer.js","Routes/Protected/UploadOnCallDocs/Components/DocumentViewer/DocumentViewer.js","Routes/Protected/UploadOnCallDocs/Adapters/GetDocumentType.js","Routes/Protected/UploadOnCallDocs/Functions/SubmitOnCallUpload.js","Routes/Protected/UploadOnCallDocs/Adapters/UploadDoctorDocument.js","Global/Components/CommonComponents/CheckBoxWithText/CheckBoxWithText.js","Routes/Protected/UploadOnCallDocs/Variables/DocumentUploaderDataArray.js","Routes/Protected/UploadOnCallDocs/Variables/DocumentUploaderDefaultValues.js","Routes/Protected/UploadOnCallDocs/Components/DocumentUploader/DocumentUploader.js","Routes/Protected/UploadOnCallDocs/Adapters/GetOnCallDocuments.js","utils/ReturnItemValuePairs.js","Routes/Protected/UploadOnCallDocs/StateBank/useStateBank.js","Routes/Protected/UploadOnCallDocs/UploadOnCallDocs.js","../node_modules/@mui/icons-material/esm/Add.js","../node_modules/@mui/icons-material/esm/FindInPage.js"],"sourcesContent":["import { Stack } from \"@mui/material\";\r\nimport { themeColors } from \"Global/JsxThemeColor/JsxThemeColor\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst TextIconStack = ({ Icon, Gap, Text, isIconElement }) => {\r\n  const { t, i18n } = useTranslation();\r\n  return (\r\n    <Stack\r\n      spacing={Gap}\r\n      direction={i18n?.language === \"en\" ? \"row\" : \"row-reverse\"}\r\n    >\r\n      {isIconElement ? (\r\n        isIconElement\r\n      ) : (\r\n        <img width={20} height={20} src={Icon} alt={Text} />\r\n      )}\r\n\r\n      <p\r\n        style={{\r\n          color: `${themeColors.ColorPrimary} !important`,\r\n        }}\r\n      >\r\n        {Text}\r\n      </p>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default TextIconStack;\r\n","import {\r\n  FormControl,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n  Stack,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { GlobalContext } from \"Global/Context/GlobalContextProvider\";\r\nimport React, { useContext, useMemo, useState } from \"react\";\r\nimport { typeCheck } from \"./Functions/RadioGroupTypeChecker\";\r\n\r\nconst RadioSelectionGeneratorWithGroup = ({\r\n  ElementArray,\r\n  // eg. [\r\n  //     {\r\n  //         \"RadioValue\": \"file\",\r\n  //         \"RadioLabel\": \"فایل\"\r\n  //     },\r\n  //     {\r\n  //         \"RadioValue\": \"picture\",\r\n  //         \"RadioLabel\": \"تصویر\"\r\n  //     }\r\n  // ]\r\n  defaultValue,\r\n  GetFinalRadioValue,\r\n  onChange,\r\n  small,\r\n  spacing,\r\n  indexPosition,\r\n  radioRightMargin,\r\n  disabled,\r\n  getInitialValue,\r\n  UiChangeFunction,\r\n  onClickFunction,\r\n  fontSize,\r\n}) => {\r\n  const [uiValue, setUiValue] = useState(defaultValue ?? \"\");\r\n  const GlobalConstants = useContext(GlobalContext);\r\n  React.useEffect(() => {\r\n    GetFinalRadioValue && GetFinalRadioValue(uiValue);\r\n    getInitialValue && onChange(uiValue);\r\n  }, []);\r\n  React.useEffect(() => {\r\n    UiChangeFunction && UiChangeFunction();\r\n  }, [uiValue]);\r\n  const MemoFormControlLabel = useMemo(() => {\r\n    return ElementArray?.map((element, index) => (\r\n      <FormControlLabel\r\n        dir=\"rtl\"\r\n        value={element.RadioValue ?? \"\"}\r\n        control={\r\n          <Radio\r\n            disabled={disabled ?? false}\r\n            color=\"colorPrimer\"\r\n            onClick={(event) => {\r\n              if (onClickFunction) {\r\n                onClickFunction(event.target);\r\n              }\r\n            }}\r\n            sx={{\r\n              fontSize: fontSize || \"\",\r\n              p: 0,\r\n              marginRight:\r\n                !indexPosition || ElementArray.length === indexPosition\r\n                  ? index === ElementArray.length - 1 && \"-1em\"\r\n                  : index === indexPosition && radioRightMargin,\r\n            }}\r\n          />\r\n        }\r\n        label={\r\n          small ? (\r\n            <Typography variant=\"body2\" color=\"textSecondary\">\r\n              {element.RadioLabel ?? \"\"}\r\n            </Typography>\r\n          ) : (\r\n            <>{element.RadioLabel ?? \"\"}</>\r\n          )\r\n        }\r\n        key={GlobalConstants.uuidV4()}\r\n      />\r\n    ));\r\n  }, [ElementArray, GlobalConstants, small, disabled]);\r\n  return (\r\n    <>\r\n      <FormControl sx={{ width: \"100%\" }}>\r\n        <RadioGroup\r\n          aria-labelledby=\"demo-radio-buttons-group-label\"\r\n          value={uiValue ?? \"\"}\r\n          name=\"radio-buttons-group\"\r\n          row\r\n          onChange={(e, val) => {\r\n            setUiValue(val);\r\n            GetFinalRadioValue && GetFinalRadioValue(val);\r\n            onChange && onChange(typeCheck(val));\r\n          }}\r\n        >\r\n          <Stack\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            width=\"100%\"\r\n            gap={spacing ?? \".4em\"}\r\n          >\r\n            {MemoFormControlLabel}\r\n          </Stack>\r\n        </RadioGroup>\r\n      </FormControl>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RadioSelectionGeneratorWithGroup;\r\n","export const typeCheck = (val) => {\r\n  if (val === \"true\") {\r\n    return true;\r\n  } else if (val === \"false\") {\r\n    return false;\r\n  } else if (isNaN(val)) {\r\n    return val;\r\n  } else {\r\n    return Number(val);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Add, FindInPage, Home } from \"@mui/icons-material\";\r\nimport { Button } from \"@mui/material\";\r\nimport FindLangKey from \"Global/Functions/FindLangKey/FindLangKey\";\r\nimport AccessControl from \"Global/security/AccessControl\";\r\n\r\nconst ShowOrSendStateButton = ({\r\n  setShowOrUpload,\r\n  ShowOrUpload,\r\n  StateBank,\r\n  languageArray,\r\n}) => {\r\n  const btnText = FindLangKey(\r\n    !ShowOrUpload\r\n      ? \"upload-oncall-documents-btn-send-documents\"\r\n      : \"upload-oncall-documents-btn-show-documents\",\r\n    languageArray,\r\n    ShowOrUpload\r\n  );\r\n  return (\r\n    <React.Fragment>\r\n      <Button\r\n        disabled={\r\n          !StateBank?.gatheredData ||\r\n          StateBank?.loadingState ||\r\n          AccessControl(\"send-doctor-document-btn-send\")\r\n        }\r\n        fullWidth\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        onClick={() => setShowOrUpload((prev) => !prev)}\r\n        startIcon={!ShowOrUpload ? <Add /> : <FindInPage />}\r\n      >\r\n        {btnText}\r\n      </Button>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ShowOrSendStateButton;\r\n","import { Button, Container, Stack } from '@mui/material';\r\nimport RadioSelectionGeneratorWithGroup from 'Global/Components/Generators/RadioSelectionGeneratorWithGroup/RadioSelectionGeneratorWithGroup';\r\nimport React from 'react';\r\nimport ShowOrSendStateButton from './components/ShowOrSendStateButton';\r\nimport { FileOrPictureDataArray } from './variables/FileOrPictureDataArray';\r\nimport { GeneratorProps } from './variables/GeneratorProps';\r\n\r\nconst FileOrPictureSelector = ({\r\n  setShowOrUpload,\r\n  ShowOrUpload,\r\n  setRadioValue,\r\n  StateBank,\r\n  languageArray,\r\n}) => {\r\n  const props = GeneratorProps(\r\n    FileOrPictureDataArray(languageArray),\r\n    setRadioValue,\r\n    ShowOrUpload\r\n  );\r\n  return (\r\n    <React.Fragment>\r\n      <Stack gap=\".5em\">\r\n        <RadioSelectionGeneratorWithGroup {...props} />\r\n        <ShowOrSendStateButton\r\n          setShowOrUpload={setShowOrUpload}\r\n          ShowOrUpload={ShowOrUpload}\r\n          StateBank={StateBank}\r\n          languageArray={languageArray}\r\n        />\r\n      </Stack>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default FileOrPictureSelector;\r\n","export const GeneratorProps = (\r\n  FileOrPictureDataArray,\r\n  setRadioValue,\r\n  ShowOrUpload\r\n) => {\r\n  const props = {\r\n    ElementArray: FileOrPictureDataArray,\r\n    defaultValue: \"picture\",\r\n    GetFinalRadioValue: setRadioValue,\r\n    spacing: \"11em\",\r\n    indexPosition: 1,\r\n    radioRightMargin: \"-2em\",\r\n    disabled: ShowOrUpload,\r\n  };\r\n  return props;\r\n};\r\n","import FindLangKey from \"Global/Functions/FindLangKey/FindLangKey\";\r\n\r\nexport const FileOrPictureDataArray = (languageArray) => [\r\n  {\r\n    RadioValue: \"file\",\r\n    RadioLabel: FindLangKey('upload-oncall-documents-radio-file',languageArray),\r\n  },\r\n  {\r\n    RadioValue: \"picture\",\r\n    RadioLabel: FindLangKey('upload-oncall-documents-radio-picture',languageArray),\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport TextIconStack from \"Global/Components/CommonComponents/TextIconStack/TextIconStack\";\r\nimport { Stack } from \"@mui/material\";\r\nimport { ArabicToPersian } from \"utils/ConvertToPersianTextFromArabic\";\r\n\r\nconst InformationOverview = ({ element }) => {\r\n  const cachedIcons = JSON.parse(localStorage.getItem(\"icons\"));\r\n  const imgHeader = \"data:image/svg+xml;base64,\";\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Stack alignItems=\"end\" marginBottom=\"1em\" spacing={1}>\r\n        <TextIconStack\r\n          Icon={imgHeader + cachedIcons?.GeneralIcon[\"DocumentTypeIcon.svg\"]}\r\n          Gap=\"1em\"\r\n          Text={ArabicToPersian(element?.ItemContent?.nameType)}\r\n        />\r\n        {element?.ItemContent?.expireDate !== \"\" ? (\r\n          <TextIconStack\r\n            Icon={\r\n              imgHeader + cachedIcons?.GeneralIcon[\"DateExpiryDocument.svg\"]\r\n            }\r\n            Gap=\"1em\"\r\n            Text={element?.expireDate}\r\n          />\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <p>\r\n          {element?.ItemContent?.deaription?.length > 15\r\n            ? element?.ItemContent?.deaription?.substring(0, 15) + \"...\"\r\n            : element?.ItemContent?.deaription}\r\n        </p>\r\n        <TextIconStack\r\n          Icon={imgHeader + cachedIcons?.GeneralIcon[\"PictureFileName.svg\"]}\r\n          Gap=\"1em\"\r\n          Text={\r\n            ArabicToPersian(element?.ItemContent?.fileName).length > 15\r\n              ? ArabicToPersian(element?.ItemContent?.fileName).substring(\r\n                  0,\r\n                  15\r\n                ) + \"...\"\r\n              : ArabicToPersian(element?.ItemContent?.fileName)\r\n          }\r\n        />\r\n      </Stack>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default InformationOverview;\r\n","import { Download, Visibility } from \"@mui/icons-material\";\r\nimport { LinearProgress, Button } from \"@mui/material\";\r\nimport FindLangKey from \"Global/Functions/FindLangKey/FindLangKey\";\r\nimport React from \"react\";\r\nimport { ToBlob } from \"utils/ToBlob\";\r\n\r\nconst ResponsiveContentInitializer = ({ element, RadioValue }) => {\r\n  const show_preview_msg = FindLangKey(\"general-public-preview\");\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {RadioValue === \"picture\" ? (\r\n        <img\r\n          src={`data:image/*;base64,${element?.ItemContent?.imageArrayContent?.image}`}\r\n          alt={element?.ItemContent?.nameType}\r\n          style={{\r\n            maxWidth: \"50%\",\r\n            maxHeight: \"50%\",\r\n            display: \"block\",\r\n            borderRadius: \"5px\",\r\n          }}\r\n        />\r\n      ) : element?.ItemContent?.base64Extention !== \"data:image/*\" ? (\r\n        <Button\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          sx={{ mt: \"1em\" }}\r\n          onClick={() => {\r\n            // window.open(\r\n            //   `data:application/pdf;base64,${element?.ItemContent?.imageArrayContent?.image}`\r\n            // );\r\n            window.open(\r\n              ToBlob(\r\n                `${element?.ItemContent?.base64Extention}${element?.ItemContent?.imageArrayContent?.image}`\r\n              ),\r\n              \"_blank\"\r\n            );\r\n          }}\r\n        >\r\n          {show_preview_msg}\r\n        </Button>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ResponsiveContentInitializer;\r\n","import { Download } from \"@mui/icons-material\";\r\nimport { Button } from \"@mui/material\";\r\nimport FindLangKey from \"Global/Functions/FindLangKey/FindLangKey\";\r\nimport React from \"react\";\r\nimport { Base64Downloader } from \"utils/Base64Downloader\";\r\n\r\nconst ImageDownloader = ({ element, languageArray }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Button\r\n        fullWidth\r\n        variant=\"outlined\"\r\n        sx={{ mt: \"1em\" }}\r\n        onClick={() => {\r\n          Base64Downloader(\r\n            `${element.base64Extention}${element.imageArrayContent?.image}`,\r\n            element.fileName\r\n          );\r\n        }}\r\n      >\r\n        {FindLangKey(\"general-public-btn-download\", languageArray)}\r\n      </Button>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ImageDownloader;\r\n","import { Card, Stack } from \"@mui/material\";\r\nimport React, { useContext } from \"react\";\r\nimport InformationOverview from \"../InformationOverview/InformationOverview\";\r\nimport ResponsiveContentInitializer from \"./components/ResponsiveContentInitializer\";\r\nimport ImageDownloader from \"./components/ImageDownloader\";\r\nimport { GlobalContext } from \"Global/Context/GlobalContextProvider\";\r\n\r\nconst ContentViewer = ({ contentData, RadioValue, languageArray }) => {\r\n  const GlobalConstants = useContext(GlobalContext);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {contentData?.map((element) => (\r\n        <Card sx={{ p: \".2em\" }} key={GlobalConstants.uuidV4()}>\r\n          <InformationOverview element={element} />\r\n\r\n          {RadioValue === \"picture\" ? (\r\n            <Stack alignItems={\"center\"}>\r\n              <ResponsiveContentInitializer\r\n                element={element}\r\n                RadioValue={RadioValue}\r\n                GlobalConstants={GlobalConstants}\r\n              />\r\n              <ImageDownloader\r\n                element={element?.ItemContent}\r\n                languageArray={languageArray}\r\n              />\r\n            </Stack>\r\n          ) : (\r\n            <Stack direction=\"row\" gap=\".5em\">\r\n              <ResponsiveContentInitializer\r\n                element={element}\r\n                RadioValue={RadioValue}\r\n                GlobalConstants={GlobalConstants}\r\n              />\r\n              <ImageDownloader\r\n                element={element?.ItemContent}\r\n                languageArray={languageArray}\r\n              />\r\n            </Stack>\r\n          )}\r\n        </Card>\r\n      ))}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ContentViewer;\r\n","import { Container, Stack } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport ContentViewer from \"./components/ImageViewer/ContentViewer\";\r\n\r\nconst DocumentViewer = ({ contentData, RadioValue, languageArray }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Container>\r\n        <Stack spacing={2}>\r\n          <ContentViewer\r\n            contentData={contentData}\r\n            RadioValue={RadioValue}\r\n            languageArray={languageArray}\r\n          />\r\n        </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DocumentViewer;\r\n","import SwalAlert from 'Global/Components/CommonComponents/SwalAlert/SwalAlert';\r\nimport Cookies from 'js-cookie';\r\nimport { env } from 'env';\r\n\r\nimport { ArabicToPersian } from 'utils/ConvertToPersianTextFromArabic';\r\nimport { ReturnItemValuePairs } from 'utils/ReturnItemValuePairs';\r\nimport { Post } from 'Xhr/Xhr';\r\n\r\nexport const GetDocumentType = async (setGatheredData) => {\r\n  Post(\r\n    'POST',\r\n    `${process.env.REACT_APP_API_URL_API_DOCTOR_GET_MADRAK_TYPE_LIST}`,\r\n    true,\r\n    {\r\n      clause: '',\r\n    }\r\n  ).then((response) => {\r\n    if (response.data.resCode === 1) {\r\n      setGatheredData(\r\n        response?.data?.Data?.list?.map((element) => {\r\n          return {\r\n            ItemValue: element?.id,\r\n            ItemContent: ArabicToPersian(element?.name),\r\n          };\r\n        })\r\n      );\r\n    } else\r\n      SwalAlert('error', response.data.resMessage, false);\r\n  });\r\n};\r\n","import { UploadDoctorDocument } from \"../Adapters/UploadDoctorDocument\";\r\n\r\nexport const SubmitOnCallUpload = (data, StateBank) => {\r\n  if (!data?.HasExpireDate) data.expireDate = \"\";\r\n  data.imageOrFile = data.base64Content.fileContent.includes(\"image\")\r\n    ? true\r\n    : false;\r\n  data.fileName = data.base64Content.fileName;\r\n  data.base64Content = data.base64Content.fileContent.replace(\r\n    /^data:(image|application)\\/(pdf|.+);base64,/,\r\n    \"\"\r\n  );\r\n  UploadDoctorDocument(data, null, StateBank);\r\n};\r\n","import SwalAlert from 'Global/Components/CommonComponents/SwalAlert/SwalAlert';\r\nimport Cookies from 'js-cookie';\r\nimport { Post } from 'Xhr/Xhr';\r\nimport { env } from 'env';\r\n\r\nexport const UploadDoctorDocument = async (\r\n  data,\r\n  isEditParam,\r\n  StateBank\r\n) => {\r\n  const idPerson = JSON.parse(Cookies.get('user'));\r\n  SwalAlert('info', 'در حال ارسال', false);\r\n  Post(\r\n    'POST',\r\n    `${process.env.REACT_APP_API_URL_API_DOCTOR_ADD_DOCTOR_MADRAK}`,\r\n    true,\r\n    {\r\n      idPerson: idPerson.IdPerson,\r\n      id: isEditParam ? 1 : 0,\r\n      ...data,\r\n      nameType: '',\r\n    }\r\n  ).then((response) => {\r\n    if (response.data.resCode === 1) {\r\n      SwalAlert('success', response.data.resMessage, false);\r\n    } else\r\n      SwalAlert('error', response.data.resMessage, false);\r\n    StateBank?.setForceRender((prev) => !prev);\r\n  });\r\n};\r\n","import { Box, Checkbox, Stack } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport ErrorSupportForAllMui from \"../ErrorSupportForAllMui/ErrorSupportForAllMui\";\r\n\r\nconst CheckBoxWithText = ({\r\n  onChange,\r\n  errors,\r\n  name,\r\n  label,\r\n  gap,\r\n  direction = \"rtl\",\r\n  disableRightPadding = true,\r\n  StateLift,\r\n  getInitialValue,\r\n}) => {\r\n  const [UiValue, setUiValue] = React.useState(false);\r\n  React.useEffect(() => {\r\n    if (getInitialValue) {\r\n      onChange(UiValue);\r\n    }\r\n  }, []);\r\n  return (\r\n    <React.Fragment>\r\n      <Stack alignItems=\"flex-end\">\r\n        <Stack\r\n          direction=\"row\"\r\n          spacing={gap ?? 0}\r\n          alignItems=\"center\"\r\n          justifyContent={direction === \"rtl\" ? \"flex-end\" : \"initial\"}\r\n        >\r\n          <p>{label}</p>\r\n          <Checkbox\r\n            color=\"colorPrimer\"\r\n            onChange={(event) => {\r\n              setUiValue(event.target.checked);\r\n              StateLift && StateLift(event.target.checked);\r\n              onChange(event.target.checked);\r\n            }}\r\n            checked={UiValue}\r\n            sx={{ pr: disableRightPadding ? 0 : \"\", paddingY: 0 }}\r\n          />\r\n        </Stack>\r\n        {errors && !!errors[name] ? (\r\n          <Box sx={{ pb: \"1em\", pr: 0, mr: \"-.4em\", mt: \"-.4em\" }}>\r\n            <ErrorSupportForAllMui label={label} />\r\n          </Box>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Stack>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CheckBoxWithText;\r\n","import React from \"react\";\r\nimport CheckBoxWithText from \"Global/Components/CommonComponents/CheckBoxWithText/CheckBoxWithText\";\r\nimport FileUploaderDropZone from \"Global/Components/CommonComponents/FileUploaderDropDown/FileUploaderDropZone\";\r\nimport MuiDatePicker from \"Global/Components/UnEditableComponents/MuiDatePicker/MuiDatePicker\";\r\nimport RadioSelectionGeneratorWithGroup from \"Global/Components/Generators/RadioSelectionGeneratorWithGroup/RadioSelectionGeneratorWithGroup\";\r\nimport { ImageOrFileRadioDataArray } from \"./ImageOrFileRadioDataArray\";\r\nimport CustomizableSelect from \"Global/Components/CommonComponents/CustomizableSelect/CustomizableSelect\";\r\nimport PersianSupportTextField from \"Global/Components/UnEditableComponents/PersianSupportTextField/PersianSupportTextField\";\r\nimport FindLangKey from \"Global/Functions/FindLangKey/FindLangKey\";\r\n\r\nexport const DocumentUploaderDataArray = (gatheredData, languageArray) => {\r\n  const [hasExpireDate, setHasExpireDate] = React.useState(false);\r\n  const DataArray = [\r\n    {\r\n      element: (\r\n        <FileUploaderDropZone\r\n          label={FindLangKey(\r\n            \"upload-oncall-documents-btn-document-select\",\r\n            languageArray\r\n          )}\r\n        />\r\n      ),\r\n      name: \"base64Content\",\r\n      required: true,\r\n    },\r\n    {\r\n      element: (\r\n        <CheckBoxWithText\r\n          label={FindLangKey(\r\n            \"general-public-check-select-expiry-date\",\r\n            languageArray\r\n          )}\r\n          StateLift={setHasExpireDate}\r\n          getInitialValue={true}\r\n        />\r\n      ),\r\n      name: \"HasExpireDate\",\r\n      // required: true,\r\n    },\r\n    {\r\n      element: (\r\n        <MuiDatePicker\r\n          Placeholder={FindLangKey(\r\n            \"general-public-check-select-expiry-date\",\r\n            languageArray\r\n          )}\r\n          Disabled={!hasExpireDate}\r\n        />\r\n      ),\r\n      name: \"expireDate\",\r\n      // required: true,\r\n    },\r\n    // {\r\n    //   element: (\r\n    //     <RadioSelectionGeneratorWithGroup\r\n    //       ElementArray={ImageOrFileRadioDataArray}\r\n    //       defaultValue={false}\r\n    //       spacing=\"11em\"\r\n    //       indexPosition={1}\r\n    //       radioRightMargin=\"-2em\"\r\n    //       getInitialValue={true}\r\n    //     />\r\n    //   ),\r\n    //   name: \"imageOrFile\",\r\n    //   // required: true,\r\n    // },\r\n    {\r\n      element: (\r\n        <CustomizableSelect\r\n          SelectableDataArray={gatheredData}\r\n          label={FindLangKey(\r\n            \"upload-oncall-documents-select-document-type-select\",\r\n            languageArray\r\n          )}\r\n          isSingle={true}\r\n        />\r\n      ),\r\n      name: \"idType\",\r\n      required: true,\r\n    },\r\n    {\r\n      element: (\r\n        <PersianSupportTextField\r\n          label={FindLangKey(\"general-public-description\", languageArray)}\r\n          isPassword={false}\r\n        />\r\n      ),\r\n      name: \"deaription\",\r\n    },\r\n  ];\r\n  return DataArray;\r\n};\r\n","import { GetCurrentDateInJalai } from \"utils/GetCurrentDateInJalai\";\r\n\r\nexport const DocumentUploaderDefaultValues = {\r\n  imageOrFile: \"\",\r\n  expireDate: GetCurrentDateInJalai(),\r\n  HasExpireDate: \"\",\r\n  fileName: \"\",\r\n  deaription: \"\",\r\n  base64Content: \"\",\r\n  idType: \"\",\r\n  nameType: \"\",\r\n};\r\n","import { Container, Stack } from '@mui/material';\r\nimport SubmitButton from 'Global/Components/UnEditableComponents/SubmitButton/SubmitButton';\r\nimport useGatherDataFromApi from 'Global/Hooks/useGatherDataFromApi';\r\nimport ReactHookFormGenerator from 'Global/ReactHookFormGenerator/ReactHookFormGenerator';\r\nimport React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { GetDocumentType } from '../../Adapters/GetDocumentType';\r\nimport { SubmitOnCallUpload } from '../../Functions/SubmitOnCallUpload';\r\nimport { DocumentUploaderDataArray } from '../../Variables/DocumentUploaderDataArray';\r\nimport { DocumentUploaderDefaultValues } from '../../Variables/DocumentUploaderDefaultValues';\r\nimport FindLangKey from 'Global/Functions/FindLangKey/FindLangKey';\r\n\r\nconst DocumentUploader = ({ StateBank, languageArray }) => {\r\n  const { control, formState, handleSubmit } = useForm({\r\n    defaultValues: DocumentUploaderDefaultValues,\r\n  });\r\n  const { gatheredData } =\r\n    useGatherDataFromApi(GetDocumentType);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form\r\n        onSubmit={handleSubmit((data) =>\r\n          SubmitOnCallUpload(data, StateBank)\r\n        )}\r\n      >\r\n        <Stack gap=\".5em\">\r\n          <ReactHookFormGenerator\r\n            control={control}\r\n            formState={formState}\r\n            DataArray={DocumentUploaderDataArray(\r\n              gatheredData,\r\n              languageArray\r\n            )}\r\n          />\r\n          <SubmitButton\r\n            label={FindLangKey(\r\n              'upload-oncall-documents-btn-send-documents',\r\n              languageArray\r\n            )}\r\n          />\r\n        </Stack>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DocumentUploader;\r\n","import SwalAlert from 'Global/Components/CommonComponents/SwalAlert/SwalAlert';\r\nimport Cookies from 'js-cookie';\r\nimport { ReturnItemValuePairs } from 'utils/ReturnItemValuePairs';\r\nimport { Post } from 'Xhr/Xhr';\r\nimport { env } from 'env';\r\n\r\nexport const GetOnCallDocuments = async (\r\n  setOnCallDocument,\r\n  fileReqParam\r\n) => {\r\n  fileReqParam.setLoadingState(true);\r\n  const idPerson = JSON.parse(Cookies.get('user'));\r\n\r\n  Post(\r\n    'POST',\r\n    `${process.env.REACT_APP_API_URL_API_GET_MADRAK_LIST}`,\r\n    true,\r\n    {\r\n      idRecord: 0,\r\n      fileType:\r\n        fileReqParam?.fileReqParam !== ''\r\n          ? fileReqParam?.fileReqParam === 'file'\r\n            ? 0\r\n            : 1\r\n          : 1,\r\n      idPerson: idPerson.IdPerson,\r\n      returnFileContent: true,\r\n    }\r\n  ).then((response) => {\r\n    if (response.data.resCode === 1) {\r\n      setOnCallDocument(\r\n        ReturnItemValuePairs(\r\n          response?.data?.Data?.listMadrak,\r\n          'id',\r\n          null\r\n        )\r\n      );\r\n\r\n      fileReqParam?.setLoadingState(false);\r\n    } else\r\n      SwalAlert('error', response.data.resMessage, false);\r\n  });\r\n};\r\n","export const ReturnItemValuePairs = (ApiArray, itemValue, itemContent) => {\r\n  const resultArray = ApiArray?.map((element) => {\r\n    return {\r\n      ItemValue: element[itemValue],\r\n      ItemContent:\r\n        typeof itemContent === \"function\"\r\n          ? itemContent(element)\r\n          : typeof itemContent === \"string\"\r\n          ? element[itemContent]\r\n          : element,\r\n    };\r\n  });\r\n  return resultArray;\r\n};\r\n","import React from \"react\";\r\nimport { GetOnCallDocuments } from \"../Adapters/GetOnCallDocuments\";\r\nimport useGatherDataFromApi from \"Global/Hooks/useGatherDataFromApi\";\r\n\r\nconst useStateBank = () => {\r\n  const [forceRender, setForceRender] = React.useState(false);\r\n  const [RadioValue, setRadioValue] = React.useState();\r\n  const [StateBank, setStateBank] = React.useState();\r\n  const [FunctionArray, setFunctionArray] = React.useState([]);\r\n  const [loadingState, setLoadingState] = React.useState(true);\r\n  React.useEffect(() => {\r\n    setFunctionArray([\r\n      {\r\n        functions: GetOnCallDocuments,\r\n        parameters: {\r\n          fileReqParam: RadioValue,\r\n          setLoadingState,\r\n        },\r\n      },\r\n    ]);\r\n  }, [RadioValue]);\r\n  const { gatheredData } = useGatherDataFromApi(FunctionArray, forceRender);\r\n\r\n  React.useMemo(() => {\r\n    setStateBank((prev) => ({\r\n      ...prev,\r\n      gatheredData,\r\n      setRadioValue,\r\n      RadioValue,\r\n      setForceRender,\r\n      loadingState,\r\n    }));\r\n  }, [JSON.stringify(gatheredData), loadingState]);\r\n  return StateBank;\r\n};\r\n\r\nexport default useStateBank;\r\n// const [FunctionArray, setFunctionArray] = React.useState();\r\n// const [ShowOrUpload, setShowOrUpload] = React.useState(false);\r\n// const [RadioValue, setRadioValue] = React.useState(\"\");\r\n// const { gatheredData } = useGatherDataFromApi(\r\n//   FunctionArray && FunctionArray instanceof Array\r\n//     ? FunctionArray\r\n//     : GetOnCallDocuments,\r\n//   RadioValue\r\n// );\r\n// React.useEffect(() => {\r\n//   setFunctionArray([\r\n//     {\r\n//       functions: GetOnCallDocuments,\r\n//       parameters: {\r\n//         fileReqParam: RadioValue,\r\n//       },\r\n//     },\r\n//   ]);\r\n// }, [RadioValue]);\r\n","import React, { useContext } from \"react\";\r\nimport { Container, LinearProgress, Stack, Alert } from \"@mui/material\";\r\nimport { GlobalContext } from \"Global/Context/GlobalContextProvider\";\r\nimport FileOrPictureSelector from \"./Components/FileOrPictureSelector/FileOrPictureSelector\";\r\nimport DocumentViewer from \"./Components/DocumentViewer/DocumentViewer\";\r\nimport DocumentUploader from \"./Components/DocumentUploader/DocumentUploader\";\r\nimport useStateBank from \"./StateBank/useStateBank\";\r\nimport FindLangKey from \"Global/Functions/FindLangKey/FindLangKey\";\r\n\r\nconst UploadOnCallDocs = () => {\r\n  const StateBank = useStateBank();\r\n  const [ShowOrUpload, setShowOrUpload] = React.useState(false);\r\n  const languageArray = useContext(GlobalContext)?.LanguageArray;\r\n  const noData_msg = FindLangKey(\"general-public-flat-alert-no-data\");\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container maxWidth=\"md\" className=\"upload-oncall-docs-color-layout\">\r\n        {StateBank?.forceRender ? <></> : <></>}\r\n        <Stack marginTop=\"2em\">\r\n          <FileOrPictureSelector\r\n            setShowOrUpload={setShowOrUpload}\r\n            ShowOrUpload={ShowOrUpload}\r\n            setRadioValue={StateBank?.setRadioValue}\r\n            StateBank={StateBank}\r\n            languageArray={languageArray}\r\n          />\r\n          {ShowOrUpload ? (\r\n            <DocumentUploader\r\n              StateBank={StateBank}\r\n              imageData={StateBank?.gatheredData}\r\n              languageArray={languageArray}\r\n            />\r\n          ) : StateBank?.gatheredData === null || StateBank?.loadingState ? (\r\n            <Container>\r\n              <LinearProgress color=\"colorPrimer\" />\r\n            </Container>\r\n          ) : StateBank?.gatheredData?.length === 0 ? (\r\n            <Alert\r\n              severity=\"warning\"\r\n              variant=\"outlined\"\r\n              sx={{ display: \"flex\", justifyContent: \"center\", mt: \".5em\" }}\r\n            >\r\n              {noData_msg}\r\n            </Alert>\r\n          ) : (\r\n            <div\r\n              style={{\r\n                marginTop: \".5em\",\r\n              }}\r\n            >\r\n              <DocumentViewer\r\n                contentData={StateBank?.gatheredData}\r\n                RadioValue={StateBank?.RadioValue}\r\n                languageArray={languageArray}\r\n              />\r\n            </div>\r\n          )}\r\n        </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UploadOnCallDocs;\r\n\r\n// const [FunctionArray, setFunctionArray] = React.useState();\r\n// const [ShowOrUpload, setShowOrUpload] = React.useState(false);\r\n// const [RadioValue, setRadioValue] = React.useState(\"\");\r\n// const { gatheredData } = useGatherDataFromApi(\r\n//   FunctionArray && FunctionArray instanceof Array\r\n//     ? FunctionArray\r\n//     : GetOnCallDocuments,\r\n//   RadioValue\r\n// );\r\n// React.useEffect(() => {\r\n//   setFunctionArray([\r\n//     {\r\n//       functions: GetOnCallDocuments,\r\n//       parameters: {\r\n//         fileReqParam: RadioValue,\r\n//       },\r\n//     },\r\n//   ]);\r\n// }, [RadioValue]);\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 19.59V8l-6-6H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c.45 0 .85-.15 1.19-.4l-4.43-4.43c-.8.52-1.74.83-2.76.83-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5c0 1.02-.31 1.96-.83 2.75L20 19.59zM9 13c0 1.66 1.34 3 3 3s3-1.34 3-3-1.34-3-3-3-3 1.34-3 3z\"\n}), 'FindInPage');"],"names":["_ref","Icon","Gap","Text","isIconElement","t","i18n","useTranslation","_jsxs","Stack","spacing","direction","language","children","_jsx","width","height","src","alt","style","color","concat","themeColors","ElementArray","defaultValue","GetFinalRadioValue","onChange","small","indexPosition","radioRightMargin","disabled","getInitialValue","UiChangeFunction","onClickFunction","fontSize","uiValue","setUiValue","useState","GlobalConstants","useContext","GlobalContext","React","MemoFormControlLabel","useMemo","map","element","index","_element$RadioValue","_element$RadioLabel","_element$RadioLabel2","FormControlLabel","dir","value","RadioValue","control","Radio","onClick","event","target","sx","p","marginRight","length","label","Typography","variant","RadioLabel","_Fragment","uuidV4","FormControl","RadioGroup","name","row","e","val","isNaN","Number","typeCheck","alignItems","justifyContent","gap","setShowOrUpload","ShowOrUpload","StateBank","languageArray","btnText","FindLangKey","Button","gatheredData","loadingState","AccessControl","fullWidth","prev","startIcon","FindInPage","Add","setRadioValue","props","GeneratorProps","FileOrPictureDataArray","RadioSelectionGeneratorWithGroup","ShowOrSendStateButton","_element$ItemContent","_element$ItemContent2","_element$ItemContent3","_element$ItemContent4","_element$ItemContent5","_element$ItemContent6","_element$ItemContent7","_element$ItemContent8","_element$ItemContent9","_element$ItemContent10","cachedIcons","JSON","parse","localStorage","getItem","imgHeader","marginBottom","TextIconStack","GeneralIcon","ArabicToPersian","ItemContent","nameType","expireDate","deaription","substring","fileName","_element$ItemContent$","show_preview_msg","imageArrayContent","image","maxWidth","maxHeight","display","borderRadius","base64Extention","mt","window","open","ToBlob","_element$imageArrayCo","Base64Downloader","contentData","Card","InformationOverview","ResponsiveContentInitializer","ImageDownloader","Container","ContentViewer","GetDocumentType","async","Post","process","clause","then","response","_response$data","_response$data$Data","_response$data$Data$l","data","resCode","setGatheredData","Data","list","ItemValue","id","SwalAlert","resMessage","SubmitOnCallUpload","HasExpireDate","imageOrFile","base64Content","fileContent","includes","replace","isEditParam","idPerson","Cookies","IdPerson","setForceRender","UploadDoctorDocument","errors","disableRightPadding","StateLift","UiValue","Checkbox","checked","pr","paddingY","Box","pb","mr","ErrorSupportForAllMui","DocumentUploaderDataArray","hasExpireDate","setHasExpireDate","FileUploaderDropZone","required","CheckBoxWithText","MuiDatePicker","Placeholder","Disabled","CustomizableSelect","SelectableDataArray","isSingle","PersianSupportTextField","isPassword","DocumentUploaderDefaultValues","GetCurrentDateInJalai","idType","formState","handleSubmit","useForm","defaultValues","useGatherDataFromApi","onSubmit","ReactHookFormGenerator","DataArray","SubmitButton","GetOnCallDocuments","setOnCallDocument","fileReqParam","setLoadingState","idRecord","fileType","returnFileContent","ApiArray","itemValue","itemContent","listMadrak","useStateBank","forceRender","setStateBank","FunctionArray","setFunctionArray","functions","parameters","stringify","UploadOnCallDocs","_useContext","_StateBank$gatheredDa","LanguageArray","noData_msg","className","marginTop","FileOrPictureSelector","DocumentUploader","imageData","LinearProgress","Alert","severity","DocumentViewer","createSvgIcon","d"],"sourceRoot":""}