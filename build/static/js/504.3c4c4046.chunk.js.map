{"version":3,"file":"static/js/504.3c4c4046.chunk.js","mappings":"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","sources":["Routes/Public/Test/Adapters/VerifySamanKishToken.js","Routes/Public/Test/Test.js","Routes/Public/Test/Adapters/GetSamanKishToken.js","utils/getQueryParams.js"],"sourcesContent":["import SwalAlert from 'Global/Components/CommonComponents/SwalAlert/SwalAlert';\r\nimport { SaveAppointment } from 'Routes/Public/GetNewTurn/adapaters/SaveAppointment';\r\nimport { Post } from 'Xhr/Xhr';\r\n\r\nexport const VerifySamanKishToken = async (\r\n  receipt,\r\n  navigate\r\n) => {\r\n  receipt.Wage = 0;\r\n  const payredirect_info =\r\n    localStorage.getItem('pay_redirect') &&\r\n    JSON.parse(localStorage.getItem('pay_redirect'));\r\n\r\n  const generalPayment =\r\n    localStorage.getItem('general_payment') &&\r\n    JSON.parse(localStorage.getItem('general_payment'));\r\n\r\n  Post(\r\n    'POST',\r\n    `${process.env.REACT_APP_API_URL_API_VERIFY_SAMAN_KISH_TOKEN}`,\r\n    true,\r\n    {\r\n      ...receipt,\r\n    }\r\n  ).then((response) => {\r\n    if (response.data.resCode === 1) {\r\n      if (!generalPayment) {\r\n        SaveAppointment({\r\n          idPatient: payredirect_info?.idPatient,\r\n          idNobat: payredirect_info?.idNobat,\r\n        });\r\n      } else {\r\n        SwalAlert(\r\n          'success',\r\n          response.data.resMessage,\r\n          false\r\n        ).then(() => {\r\n          location.href = '/main';\r\n        });\r\n      }\r\n    } else {\r\n      SwalAlert(\r\n        'error',\r\n        response.data.resMessage,\r\n        false\r\n      ).then(() => (location.href = '/main'));\r\n    }\r\n    return response;\r\n  });\r\n};\r\n","import React, { useRef, useState } from 'react';\r\nimport { Button } from '@mui/material';\r\nimport { themeColors } from 'Global/JsxThemeColor/JsxThemeColor';\r\nimport { GetSamanKishToken } from './Adapters/GetSamanKishToken';\r\nimport { VerifySamanKishToken } from './Adapters/VerifySamanKishToken';\r\n\r\nimport { getQueryParams } from 'utils/getQueryParams';\r\nimport { useLocation } from 'react-router-dom';\r\nimport SamanKishTokenForm from 'Global/Components/CommonComponents/SamanKishTokenForm/SamanKishTokenForm';\r\n\r\nconst Test = () => {\r\n  let currentUrl = window.location.href;\r\n  currentUrl = document.URL;\r\n  currentUrl = new URL(window.location);\r\n  currentUrl = currentUrl.origin;\r\n\r\n  const location = useLocation();\r\n  const receipt = getQueryParams(location.search, '&');\r\n\r\n  const [token, setToken] = useState('');\r\n\r\n  console.log(\r\n    'currentUrl currentUrl =>',\r\n    `${currentUrl}/verifysamankish`\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <SamanKishTokenForm token={token} />\r\n\r\n      <Button\r\n        variant=\"contained\"\r\n        sx={{\r\n          color: `${themeColors.ColorPrimary} !important`,\r\n          mt: '1em',\r\n        }}\r\n        fullWidth\r\n        onClick={() => {\r\n          GetSamanKishToken(setToken);\r\n        }}\r\n      >\r\n        دریافت توکن\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        sx={{\r\n          color: `${themeColors.ColorPrimary} !important`,\r\n          mt: '1em',\r\n        }}\r\n        fullWidth\r\n        onClick={() => {\r\n          VerifySamanKishToken(receipt);\r\n        }}\r\n      >\r\n        وریفای توکن\r\n      </Button>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n","import SwalAlert from 'Global/Components/CommonComponents/SwalAlert/SwalAlert';\r\nimport { Post } from 'Xhr/Xhr';\r\nimport Cookies from 'js-cookie';\r\n\r\nexport const GetSamanKishToken = async (\r\n  setToken,\r\n  amount\r\n) => {\r\n  const idPatient = JSON.parse(\r\n    Cookies.get('user') || ''\r\n  )?.IdPatient;\r\n\r\n  let currentUrl = window.location.href;\r\n  currentUrl = document.URL;\r\n  currentUrl = new URL(window.location);\r\n  currentUrl = currentUrl.origin;\r\n\r\n  Post(\r\n    'POST',\r\n    `${process.env.REACT_APP_API_URL_API_GET_SAMAN_KISH_TOKEN}`,\r\n    true,\r\n    {\r\n      Action: 'Token',\r\n      TerminalId: '14051683',\r\n      RedirectUrl: `${currentUrl}/verifysamankish`,\r\n      ResNum: '',\r\n      Amount: `${amount}`,\r\n      CellNumber: '09194191204',\r\n      GetMethod: true,\r\n      idPatient: idPatient,\r\n    }\r\n  ).then((response) => {\r\n    setToken(response.data.Data.token);\r\n  });\r\n};\r\n","export function getQueryParams(url, search) {\r\n  // Extract the query string from the URL\r\n  let queryString = url?.split('?')[1];\r\n\r\n  // Split the query string into key-value pairs\r\n  let pairs = queryString?.split(`${search}`);\r\n\r\n  // Initialize an empty object to hold the query parameters\r\n  let queryParams = {};\r\n\r\n  // Iterate over the pairs and populate the queryParams object\r\n  for (let i = 0; i < pairs?.length; i++) {\r\n    let pair = pairs[i]?.split('=');\r\n    queryParams[decodeURIComponent(pair[0])] =\r\n      decodeURIComponent(pair[1] || '');\r\n  }\r\n\r\n  // Return the populated queryParams object\r\n  return queryParams;\r\n}\r\n"],"names":["VerifySamanKishToken","async","receipt","navigate","Wage","payredirect_info","localStorage","getItem","JSON","parse","generalPayment","Post","concat","process","then","response","data","resCode","SwalAlert","resMessage","location","href","SaveAppointment","idPatient","idNobat","Test","currentUrl","window","document","URL","origin","useLocation","getQueryParams","search","token","setToken","useState","console","log","_jsxs","React","children","_jsx","SamanKishTokenForm","Button","variant","sx","color","themeColors","mt","fullWidth","onClick","amount","_JSON$parse","Cookies","IdPatient","Action","TerminalId","RedirectUrl","ResNum","Amount","CellNumber","GetMethod","Data","GetSamanKishToken","url","queryString","split","pairs","queryParams","i","length","_pairs$i","pair","decodeURIComponent"],"sourceRoot":""}