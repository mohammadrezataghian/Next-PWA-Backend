{"version":3,"file":"static/js/718.754e2c11.chunk.js","mappings":"gRAYA,MA6EA,EA7EeA,KAAO,IAADC,EACnBC,QAAQC,IAAI,gBAEZ,MAAOC,EAAaC,IAAiBC,EAAAA,EAAAA,UAAS,IAE9CJ,QAAQC,IAAI,eAAgBC,GAE5B,MAAMG,GAAWC,EAAAA,EAAAA,MAEXC,GAAOC,EAAAA,EAAAA,GAAY,aAAa,IAEhC,UACJC,EAAS,SACTC,EAAQ,OACRC,EAAM,OACNC,EAAM,cACNC,IACEC,EAAAA,EAAAA,GACgB,QADDf,GACjBgB,EAAAA,EAAAA,GAAOR,GAAM,UAAK,IAAAR,OAAA,EAAlBA,EAAoBiB,MAAM,cAAc,IAGpCC,GAAYC,EAAAA,EAAAA,GAChBT,EACAC,EACAC,EACAC,EACAC,IAWFM,EAAAA,EAAAA,YAAU,KACJjB,EAAYkB,OAAS,IACvBC,EAAAA,EAAAA,GACE,CAAEZ,YAAWC,WAAUC,SAAQC,UAC/BV,EACAG,EAEJ,GACC,CAACH,IAEJ,MAAM,aAAEoB,IAAiBC,EAAAA,EAAAA,GAAqBN,GAExCO,GAAeC,EAAAA,EAAAA,UACnB,IAAMH,GACN,CAACI,KAAKC,UAAUL,KAGZM,GACJC,EAAAA,EAAAA,GAAuBL,GAEzB,OACEM,EAAAA,EAAAA,KAACC,EAAAA,SAAc,CAAAC,UACbF,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CAAAD,UACRF,EAAAA,EAAAA,KAACI,EAAAA,EAAK,CAACC,GAAG,OAAOC,IAAI,OAAMJ,UACzBF,EAAAA,EAAAA,KAACO,EAAAA,EAAe,CACdC,UAAW,IACNd,EACHe,OAAQ3B,EACR4B,MAAO,QAETC,eAAgB,uBAChBC,cAAed,EACfe,UAAWxC,SAIF,C","sources":["Routes/Public/Survey/Survey.js"],"sourcesContent":["import { Container, Stack } from '@mui/material';\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport { GetURLQuery } from 'utils/GetURLQuery';\r\nimport { formInformation } from './functions/formInformation';\r\nimport { functionArray } from './variables/functionArray';\r\nimport useGatherDataFromApi from 'Global/Hooks/useGatherDataFromApi';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { SaveSurveyForm } from './adapters/SaveSurveyForm';\r\nimport { EditFormValueNormlizer } from 'Global/Components/Generators/FormElementCreatorByType/Functions/EditFormValueNormlizer';\r\nimport EditGroupedView from 'Global/Components/EditableComponents/EditableGroupedView/EditGroupedView';\r\nimport { hwndjs } from 'utils/hwnd';\r\nconst Survey = () => {\r\n  console.log('render is =>');\r\n\r\n  const [surveryData, setSurveyData] = useState([]);\r\n\r\n  console.log('form data =>', surveryData);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const data = GetURLQuery('keyConfer', true);\r\n\r\n  const {\r\n    patientID,\r\n    idConfer,\r\n    idType,\r\n    formID,\r\n    patientFormID,\r\n  } = formInformation(\r\n    hwndjs(data, true)?.split('keyConfer=')[1]\r\n  );\r\n\r\n  const dataArray = functionArray(\r\n    patientID,\r\n    idConfer,\r\n    idType,\r\n    formID,\r\n    patientFormID\r\n  );\r\n\r\n  // console.log('-->', {\r\n  //   patientID,\r\n  //   idConfer,\r\n  //   idType,\r\n  //   formID,\r\n  //   patientFormID,\r\n  // });\r\n\r\n  useEffect(() => {\r\n    if (surveryData.length > 0) {\r\n      SaveSurveyForm(\r\n        { patientID, idConfer, idType, formID },\r\n        surveryData,\r\n        navigate\r\n      );\r\n    }\r\n  }, [surveryData]);\r\n\r\n  const { gatheredData } = useGatherDataFromApi(dataArray);\r\n\r\n  const memoFormData = useMemo(\r\n    () => gatheredData,\r\n    [JSON.stringify(gatheredData)]\r\n  );\r\n\r\n  const NazarSanjiDefaultValues =\r\n    EditFormValueNormlizer(memoFormData);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container>\r\n        <Stack mt=\".5em\" gap=\".5em\">\r\n          <EditGroupedView\r\n            StateBank={{\r\n              ...memoFormData,\r\n              formId: formID,\r\n              title: 'test',\r\n            }}\r\n            fieldArrayName={'MedicalDefaultValues'}\r\n            DefaultValues={NazarSanjiDefaultValues}\r\n            liftState={setSurveyData}\r\n          />\r\n        </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Survey;\r\n"],"names":["Survey","_hwndjs","console","log","surveryData","setSurveyData","useState","navigate","useNavigate","data","GetURLQuery","patientID","idConfer","idType","formID","patientFormID","formInformation","hwndjs","split","dataArray","functionArray","useEffect","length","SaveSurveyForm","gatheredData","useGatherDataFromApi","memoFormData","useMemo","JSON","stringify","NazarSanjiDefaultValues","EditFormValueNormlizer","_jsx","React","children","Container","Stack","mt","gap","EditGroupedView","StateBank","formId","title","fieldArrayName","DefaultValues","liftState"],"sourceRoot":""}