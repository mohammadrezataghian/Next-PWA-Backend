{"version":3,"file":"static/js/241.4c88b453.chunk.js","mappings":"iGAE0BA,E,QAAAA,IAAK,K,sHCAxB,MAAMC,GAAgBD,EAAAA,EAAAA,KAAK,G,qECG3B,MAAME,EAAQA,CAACC,EAAaC,KAAmB,IAADC,EACnD,MAAOC,IAASC,EAAAA,EAAAA,IAAQC,EAAAA,GAClBC,EACJH,GAASI,KAAKC,MAAMC,aAAaC,QAAQ,UAIrCC,EAAYC,EAAAA,EAAAA,IAAY,QAC1BL,KAAKC,MAAMI,EAAAA,EAAAA,IAAY,SAASD,UAChC,GAEEE,GAAkBC,EAAAA,EAAAA,GACtB,oCAEIC,GAAeD,EAAAA,EAAAA,GACnB,iCAEIE,GAAkBF,EAAAA,EAAAA,GACtB,oCAGIG,GAAiBH,EAAAA,EAAAA,GACrB,yCAEII,GAAoBJ,EAAAA,EAAAA,GACxB,yCAEIK,GAAwBL,EAAAA,EAAAA,GAC5B,sCAGIM,GAAaN,EAAAA,EAAAA,GACjB,gCAGIO,GAAuBP,EAAAA,EAAAA,GAC3B,oCAGIQ,GAAoBR,EAAAA,EAAAA,GACxB,gCAGIS,GAAoBT,EAAAA,EAAAA,GACxB,+BAGIU,GAAsBV,EAAAA,EAAAA,GAC1B,qCAGIW,GAAmBX,EAAAA,EAAAA,GACvB,gCAGIY,GAAcZ,EAAAA,EAAAA,GAAY,yBAiB1Ba,IAfuBb,EAAAA,EAAAA,GAC3B,qCAGuBA,EAAAA,EAAAA,GACvB,0BAGkBA,EAAAA,EAAAA,GAClB,iCAGiBA,EAAAA,EAAAA,GACjB,8BAE8BA,EAAAA,EAAAA,GAC9B,4BAGIc,GAAwBd,EAAAA,EAAAA,GAC5B,iCAEIe,GAAwBf,EAAAA,EAAAA,GAC5B,mCAGIgB,GAA6BhB,EAAAA,EAAAA,GACjC,wCAGIiB,EAAanB,EAAAA,EAAAA,IAAY,QAEzBoB,EACJD,IAAoC,QAA1B7B,EAAIK,KAAKC,MAAMuB,UAAW,IAAA7B,OAAA,EAAtBA,EAAwB+B,YAElCC,GACU,OAAdF,QAAc,IAAdA,OAAc,EAAdA,EAAgBG,SAAS,aACE,KAAb,OAAdH,QAAc,IAAdA,OAAc,EAAdA,EAAgBI,SAChBpC,EAAc,KAsNhB,MApNc,CACE,IAAdW,EACI,KACA,CACE0B,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,oBACzBC,MAAOL,EACH,aACA,cACJM,MAAO3B,EACPF,aAEQ,IAAdA,EACI,KACA,CACE0B,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,cACzBC,MAAOL,EAAgB,WAAa,YACpCM,MAAOzB,EACPJ,aAEQ,IAAdA,EACI,KACA,CACE0B,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,kBACzBC,MAAOL,EACH,gBACA,iBACJM,MAAOxB,EACPL,aAGQ,IAAdA,EACI,KACA,CACE0B,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,uBACzBC,MAAOL,EACH,iBACA,kBACJM,MAAOvB,EACPN,aAGQ,IAAdA,EACI,KACA,CACE0B,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,sBACzBC,MAAOL,EACH,aACA,cACJM,MAAOpB,EACPT,aAEQ,IAAdA,EACI,KACA,CACE0B,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,qBACzBC,MAAOL,EACH,cACA,eACJM,MAAOtB,EACPP,aAEQ,IAAdA,EACI,KACA,CACE0B,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,iBACzBC,MAAOL,EACH,kBACA,mBACJM,MAAOrB,EACPR,aAEQ,IAAdA,EACI,KACA,CACE0B,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,aACzBC,MAAOL,EACH,oBACA,qBACJM,MAAOb,EACPhB,aAEQ,IAAdA,EACI,KACA,CACE0B,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,mBACzBC,MAAOL,EAAgB,WAAa,YACpCM,MAAOZ,EACPjB,aAGN,CACE0B,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,uBAEzBC,MAAOL,EACH,kBACA,mBACJM,MAAOnB,GAET,CACEgB,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,oBACzBC,MAAOL,EAAgB,cAAgB,eACvCM,MAAOlB,GAET,CACEe,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,wBACzBC,MAAOL,EACH,uBACA,wBACJM,MAAOjB,GAET,CACEc,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,0BACzBC,MAAOL,EACH,uBACA,wBACJM,MAAOhB,GAET,CACEa,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,eACzBC,MAAO,GACPC,MAAOf,GAET,CACEY,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,aACzBC,MAAO,GACPC,MAAOd,GAmCT,CACEW,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,oBACzBC,MAAOL,EACH,mBACA,oBACJM,MAAOX,GAET,CACEQ,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,kBACzBC,MAAOL,EACH,uBACA,wBACJM,MAAOV,IAIiBW,QAAQC,GAAc,OAAPA,GAEvB,E,eCxTf,MAAMC,GAAe9C,EAAAA,EAAAA,IAAK,M,eCDjC,QAA2B,+B,0BCY3B,MAyKA,EAzK4B+C,IAC1B,MAAM,YACJ5C,EAAW,MACXD,EAAK,YACL8C,EAAW,cACX5C,EAAa,cACb6C,GACEF,EAEEG,GAAWC,EAAAA,EAAAA,MAcXC,EAAqB,OAALlD,QAAK,IAALA,OAAK,EAALA,EAAO0C,QAC1BS,GAbmBC,KAAW,IAADC,EAC9B,MAAMC,EAA6B,OAAXR,QAAW,IAAXA,OAAW,EAAXA,EAAaS,KAAKC,GACxCA,EAAKC,gBAEP,OACiB,OAAfH,QAAe,IAAfA,OAAe,EAAfA,EAAiBlB,SAASgB,EAAMK,kBACjB,OAAfH,QAAe,IAAfA,GACoC,QADrBD,EAAfC,EACIC,KAAKC,GAASA,EAAKE,UAAU,YAAG,IAAAL,OADrB,EAAfA,EAEIjB,SAASgB,EAAMK,eAAc,EAMjCE,CAAaR,EAAOX,SAAgB,OAANW,QAAM,IAANA,OAAM,EAANA,EAAQvC,aAQpCgD,EAAqBC,GAGlBA,EAAQN,KAAI,CAACJ,EAAQW,KACpB,OAANX,QAAM,IAANA,OAAM,EAANA,EAAQvC,aACRmD,EAAAA,EAAAA,KAAA,OAEEC,QAASA,KAEL,CAAC,YAAa,eAAe5B,SAC3Be,EAAOX,SAERtC,GAED+D,EAAAA,EAAAA,GACE,UACAC,wBACA,GACA,GACA,GACA,GACA,GACA,GAGFlB,EAASmB,EAAahB,GACxB,EAEFiB,MAAO,CACLC,OAAQ,GACRC,UAEFC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAgBH,SAAA,EAC9BP,EAAAA,EAAAA,KAAA,OACEW,IAAKvB,EAAOb,QACZqC,IAAKxB,EAAOV,MACZmC,QAAQ,MACRJ,UAAWK,EAAc1B,GACzB2B,MAAOC,EACL9E,EACA8C,GACA,GAEFiC,OAAQD,EACN9E,EACA8C,GACA,MAIJgB,EAAAA,EAAAA,KAAA,KAAGK,MAAO,CAAEa,SAAU,YAAaX,SAChCnB,EAAOV,YA7CPqB,KAoDLK,EAAgBhB,GAElB,CAAC,YAAa,eAAef,SAASe,EAAOX,OAErCtC,EAAqBiD,EAAOX,MAAZ,GAEnBW,EAAOX,MAGVqC,EAAiB1B,IACrB,MAAMiB,EAAQ,CACZc,WAAY/B,EAAOb,QACnB6C,OAAQ,UACRC,mBAAoB,gBACpBC,eAAgB,SAWlB,MAPE,CAAC,YAAa,eAAejD,SAASe,EAAOX,SAE7C4B,EAAM1B,OAAUxC,EAEZ,QADA,gBAICkE,CAAK,EAGRW,EAAeA,CACnB9E,EACA8C,EACAuC,IAEIrF,GAAe,MAAQ8C,EACR,GAEXA,EAAqB,GAAL,GAe1B,OACEgB,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,CAAAjB,SACGrE,EAAc,MACb8D,EAAAA,EAAAA,KAAA,OAAKK,MAAO,CAAEoB,WAAY,KAAMlB,UAC9BP,EAAAA,EAAAA,KAAC0B,EAAAA,EAAiB,CAChBC,QAAS9B,EAAkBV,GAC3ByC,YAAa,CACXjF,aAAaC,QAAQ,SACrBT,QAKN6D,EAAAA,EAAAA,KAAC0B,EAAAA,EAAiB,CAChBC,QAAS9B,EAzBH,OAAL5D,QAAK,IAALA,OAAK,EAALA,EAAO0C,QACXS,IAAM,IAAAyC,EAAAC,EAAA,OACM,OAAX/C,QAAW,IAAXA,GAEC,QAFU8C,EAAX9C,EAAaS,KAAKC,GAChBA,EAAKC,uBACN,IAAAmC,OAFU,EAAXA,EAEGxD,SAASe,EAAOX,MAAMiB,kBACd,OAAXX,QAAW,IAAXA,GAEC,QAFU+C,EAAX/C,EAAaS,KAAKC,GAChBA,EAAKC,cAAcC,UAAU,YAC9B,IAAAmC,OAFU,EAAXA,EAEGzD,SAASe,EAAOX,MAAMiB,eAAc,KAqBrCkC,YAAa,CACXjF,aAAaC,QAAQ,SACrBT,MAIL,E,eCxKP,MA4SA,EA5S6B2C,IAC3B,MAAM,YACJ5C,EAAW,MACXD,EAAK,YACL8C,EAAW,cACX5C,EAAa,cACb6C,GACEF,EAYJ,OACEkB,EAAAA,EAAAA,KAAC+B,EAAAA,SAAc,CAAAxB,SACZrE,EAAc,MACb8D,EAAAA,EAAAA,KAAA,OACEK,MAAO,CACLoB,WAAY,KACZlB,UAEFP,EAAAA,EAAAA,KAAC0B,EAAAA,EAAiB,CAChBC,QAAc,OAAL1F,QAAK,IAALA,OAAK,EAALA,EAAOuD,KACd,CAACJ,EAAQW,KAAC,IAAA8B,EAAAC,EAAA,QACI,OAAX/C,QAAW,IAAXA,GAEA,QAFW8C,EAAX9C,EAAaS,KAAKC,GACjBA,EAAKC,uBACN,IAAAmC,OAFW,EAAXA,EAEExD,SAASe,EAAOX,MAAMiB,kBACZ,OAAXX,QAAW,IAAXA,GAEC,QAFU+C,EAAX/C,EAAaS,KAAKC,GAChBA,EAAKC,cAAcC,UAAU,YAC9B,IAAAmC,OAFU,EAAXA,EAEGzD,SACDe,EAAOX,MAAMiB,mBAEX,OAANN,QAAM,IAANA,OAAM,EAANA,EAAQvC,aACNmD,EAAAA,EAAAA,KAAC+B,EAAAA,SAAc,CAAAxB,UACbP,EAAAA,EAAAA,KAACgC,EAAAA,GAAI,CACHC,GACE,CACE,YACA,eACA5D,SAASe,EAAOX,OACbtC,EAECiD,EAAOX,MADP,GAEFW,EAAOX,MAEbyD,SAAO,EACP7B,MAAO,CACL8B,eAAgB,QAChB5B,UAEFP,EAAAA,EAAAA,KAACoC,EAAAA,EAAS,CACRC,UAAW,CACTC,EAAG,OACHC,aAAc,OACdC,SAAU,kBACVC,QAAS,OACTC,eAAgB,cAElBC,KACEnC,EAAAA,EAAAA,MAAA,WAQEH,MAAO,CACLuC,gBAAiB,QACjBL,aAAc,OACdxB,MAAO,OACP0B,QAAS,OACTC,eAAgB,SAChBG,UAAW,MACX3B,SAAU,QACV4B,WAAY,SACZC,IAAK,QAEPtC,UAAWC,EACXT,QAASA,KAEL,CACE,YACA,eACA5B,SAASe,EAAOX,SACjBtC,IAED+D,EAAAA,EAAAA,GACE,UACAC,wBACA,GACA,GACA,GACA,GACA,GACA,EAEJ,EACAI,SAAA,EAEFP,EAAAA,EAAAA,KAAA,OACEW,IAAKvB,EAAOb,QACZqC,IAAKxB,EAAOV,MACZmC,QAAQ,MACRR,MAAO,CACLc,WAAY/B,EAAOb,QACnB6C,OAAQ,UACRC,mBACE,gBACFC,eAAgB,QAChB3C,OAAQ,CACN,YACA,eACAN,SAASe,EAAOX,OACbtC,EAEC,QADA,eAEF,SAEN4E,MACE7E,GAAe,MACf8C,EACI,GACCA,EAED,GADA,GAGNiC,OACE/E,GAAe,MACf8C,EACI,GACCA,EAED,GADA,MAKRgB,EAAAA,EAAAA,KAAA,KACEK,MAAO,CACLa,SAAU,YACVX,SAEDnB,EAAOV,gBA7GCqB,EAoHtB,IAEL6B,YAAa,CACXjF,aAAaC,QAAQ,SACrBT,QAKN6D,EAAAA,EAAAA,KAAC0B,EAAAA,EAAiB,CAChBC,QAAc,OAAL1F,QAAK,IAALA,OAAK,EAALA,EAAOuD,KACd,CAACJ,EAAQW,KAAC,IAAAiD,EAAAC,EAAA,QACI,OAAXlE,QAAW,IAAXA,GAEA,QAFWiE,EAAXjE,EAAaS,KAAKC,GACjBA,EAAKC,uBACN,IAAAsD,OAFW,EAAXA,EAEE3E,SAASe,EAAOX,MAAMiB,kBACZ,OAAXX,QAAW,IAAXA,GAEC,QAFUkE,EAAXlE,EAAaS,KAAKC,GAChBA,EAAKC,cAAcC,UAAU,YAC9B,IAAAsD,OAFU,EAAXA,EAEG5E,SAASe,EAAOX,MAAMiB,mBACrB,OAANN,QAAM,IAANA,OAAM,EAANA,EAAQvC,aACNmD,EAAAA,EAAAA,KAAC+B,EAAAA,SAAc,CAAAxB,UACbP,EAAAA,EAAAA,KAACgC,EAAAA,GAAI,CACHC,GACE,CAAC,YAAa,eAAe5D,SAC3Be,EAAOX,OAEJtC,EAECiD,EAAOX,MADP,GAEFW,EAAOX,MAEbyD,SAAO,EACP7B,MAAO,CACL8B,eAAgB,QAChB5B,UAEFP,EAAAA,EAAAA,KAACoC,EAAAA,EAAS,CACRC,UAAW,CACTC,EAAG,OACHC,aAAc,OACdC,SAAU,kBACVC,QAAS,OACTC,eAAgB,cAElBC,KACEnC,EAAAA,EAAAA,MAAA,WASEH,MAAO,CACLuC,gBAAiB,QACjBL,aAAc,OACdxB,MAAO,OACP0B,QAAS,OACTC,eAAgB,SAChBG,UAAW,MACX3B,SAAU,QACV4B,WAAY,SACZC,IAAK,QAEPtC,UAAWC,EACXT,QAASA,KAEL,CACE,YACA,eACA5B,SAASe,EAAOX,SACjBtC,IAED+D,EAAAA,EAAAA,GACE,UACAC,wBACA,GACA,GACA,GACA,GACA,GACA,EAEJ,EACAI,SAAA,EAEFP,EAAAA,EAAAA,KAAA,OACEW,IAAKvB,EAAOb,QACZqC,IAAKxB,EAAOV,MACZmC,QAAQ,MACRR,MAAO,CACLc,WAAY/B,EAAOb,QACnB6C,OAAQ,UACRC,mBACE,gBACFC,eAAgB,QAChB3C,OAAQ,CACN,YACA,eACAN,SAASe,EAAOX,OACbtC,EAEC,QADA,eAEF,SAEN4E,MACE7E,GAAe,MACf8C,EACI,GACCA,EAED,GADA,GAGNiC,OACE/E,GAAe,MACf8C,EACI,GACCA,EAED,GADA,MAKRgB,EAAAA,EAAAA,KAAA,KACEK,MAAO,CAAEa,SAAU,YAAaX,SAE/BnB,EAAOV,gBA3GCqB,EAkHtB,IAEL6B,YAAa,CACXjF,aAAaC,QAAQ,SACrBT,MAIS,EChQrB,EAvCsB2C,IACpB,MAAM,YACJ5C,EAAW,MACXD,EAAK,YACL8C,EAAW,cACX5C,EAAa,cACb6C,GACEF,EAUJ,OACEkB,EAAAA,EAAAA,KAAC+B,EAAAA,SAAc,CAAAxB,SACZrE,EAAc,MACb8D,EAAAA,EAAAA,KAACkD,EAAmB,CAClBjH,MAAOA,EACP8C,YAAaA,EACb5C,cAAeA,EACf6C,cAAeA,KAGjBgB,EAAAA,EAAAA,KAACmD,EAAkB,CACjBlH,MAAOA,EACP8C,YAAaA,EACb5C,cAAeA,EACf6C,cAAeA,EACf9C,YAAaA,KAGF,ECuKrB,EAxM2B4C,IACzB,MAAM,YACJ5C,EAAW,MACXD,EAAK,YACL8C,EAAW,cACX5C,EAAa,cACb6C,GACEF,EAEEG,GAAWC,EAAAA,EAAAA,MAEXkE,EAAc/D,IAClBJ,EAASI,EAAM,EAGjB,OACEW,EAAAA,EAAAA,KAAC+B,EAAAA,SAAc,CAAAxB,SACZrE,EAAc,MACb8D,EAAAA,EAAAA,KAAA,OACEK,MAAO,CACLoB,WAAY,KAEZlB,UAEFP,EAAAA,EAAAA,KAAC0B,EAAAA,EAAiB,CAChBC,QAAc,OAAL1F,QAAK,IAALA,OAAK,EAALA,EAAOuD,KACd,CAACJ,EAAQW,KAAC,IAAA8B,EAAAC,EAAA,QACI,OAAX/C,QAAW,IAAXA,GAEA,QAFW8C,EAAX9C,EAAaS,KAAKC,GACjBA,EAAKC,uBACN,IAAAmC,OAFW,EAAXA,EAEExD,SAASe,EAAOX,MAAMiB,kBACZ,OAAXX,QAAW,IAAXA,GAEC,QAFU+C,EAAX/C,EAAaS,KAAKC,GAChBA,EAAKC,cAAcC,UAAU,YAC9B,IAAAmC,OAFU,EAAXA,EAEGzD,SACDe,EAAOX,MAAMiB,oBAEV,OAANN,QAAM,IAANA,GAAAA,EAAQvC,aACPmD,EAAAA,EAAAA,KAAC+B,EAAAA,SAAc,CAAAxB,UACbC,EAAAA,EAAAA,MAAA,WACEC,UAAWC,EACXT,QAASA,KAEL,CACE,YACA,eACA5B,SAASe,EAAOX,SACjBtC,GAED+D,EAAAA,EAAAA,GACE,UACAC,wBACA,GACA,GACA,GACA,GACA,GACA,GAGFiD,EAAWhE,EAAOX,MACpB,EACA8B,SAAA,EAEFP,EAAAA,EAAAA,KAAA,OACEW,IAAKvB,EAAOb,QACZqC,IAAKxB,EAAOV,MACZmC,QAAQ,MACRR,MAAO,CACLc,WAAY/B,EAAOb,QACnB6C,OAAQ,UACRC,mBACE,gBACFC,eAAgB,QAChB3C,OAAQ,CACN,YACA,eACAN,SAASe,EAAOX,OACbtC,EAEC,QADA,eAEF,SAEN4E,MACE7E,GAAe,MACf8C,EACI,GACCA,EAED,GADA,GAGNiC,OACE/E,GAAe,MACf8C,EACI,GACCA,EAED,GADA,MAKRgB,EAAAA,EAAAA,KAAA,KAAGK,MAAO,CAAEa,SAAU,YAAaX,SAChCnB,EAAOV,YAhEOqB,EAoEtB,IAEL6B,YAAa,CACXjF,aAAaC,QAAQ,SACrBT,QAKN6D,EAAAA,EAAAA,KAAC0B,EAAAA,EAAiB,CAChBC,QAAc,OAAL1F,QAAK,IAALA,OAAK,EAALA,EAAOuD,KACd,CAACJ,EAAQW,KAAC,IAAAiD,EAAAC,EAAA,QACI,OAAXlE,QAAW,IAAXA,GAEA,QAFWiE,EAAXjE,EAAaS,KAAKC,GACjBA,EAAKC,uBACN,IAAAsD,OAFW,EAAXA,EAEE3E,SAASe,EAAOX,MAAMiB,kBACZ,OAAXX,QAAW,IAAXA,GAEC,QAFUkE,EAAXlE,EAAaS,KAAKC,GAChBA,EAAKC,cAAcC,UAAU,YAC9B,IAAAsD,OAFU,EAAXA,EAEG5E,SAASe,EAAOX,MAAMiB,oBACpB,OAANN,QAAM,IAANA,GAAAA,EAAQvC,aACPmD,EAAAA,EAAAA,KAAC+B,EAAAA,SAAc,CAAAxB,UACbC,EAAAA,EAAAA,MAAA,WACEC,UAAWC,EACXT,QAASA,KAEL,CACE,YACA,eACA5B,SAASe,EAAOX,SACjBtC,GAED+D,EAAAA,EAAAA,GACE,UACAC,wBACA,GACA,GACA,GACA,GACA,GACA,GAGFiD,EAAWhE,EAAOX,MACpB,EACA8B,SAAA,EAEFP,EAAAA,EAAAA,KAAA,OACEW,IAAKvB,EAAOb,QACZqC,IAAKxB,EAAOV,MACZmC,QAAQ,MACRR,MAAO,CACLc,WAAY/B,EAAOb,QACnB6C,OAAQ,UACRC,mBAAoB,gBACpBC,eAAgB,QAChB3C,OAAQ,CACN,YACA,eACAN,SAASe,EAAOX,OACbtC,EAEC,QADA,eAEF,SAEN4E,MACE7E,GAAe,MAAQ8C,EACnB,GACCA,EAED,GADA,GAGNiC,OACE/E,GAAe,MAAQ8C,EACnB,GACCA,EAED,GADA,MAKRgB,EAAAA,EAAAA,KAAA,KAAGK,MAAO,CAAEa,SAAU,YAAaX,SAChCnB,EAAOV,YA7DOqB,EAiEtB,IAEL6B,YAAa,CACXjF,aAAaC,QAAQ,SACrBT,MAIS,EC4ErB,EAnR4B2C,IAC1B,MAAM,YACJ5C,EAAW,MACXD,EAAK,YACL8C,EAAW,cACX5C,EAAa,cACb6C,GACEF,EAEJ,OACEkB,EAAAA,EAAAA,KAAC+B,EAAAA,SAAc,CAAAxB,SACZrE,EAAc,MACb8D,EAAAA,EAAAA,KAAA,OACEK,MAAO,CACLoB,WAAY,KACZlB,UAEFP,EAAAA,EAAAA,KAAC0B,EAAAA,EAAiB,CAChBC,QAAc,OAAL1F,QAAK,IAALA,OAAK,EAALA,EAAOuD,KACd,CAACJ,EAAQW,KAAC,IAAA8B,EAAAC,EAAA,QACI,OAAX/C,QAAW,IAAXA,GAEA,QAFW8C,EAAX9C,EAAaS,KAAKC,GACjBA,EAAKC,uBACN,IAAAmC,OAFW,EAAXA,EAEExD,SAASe,EAAOX,MAAMiB,kBACZ,OAAXX,QAAW,IAAXA,GAEC,QAFU+C,EAAX/C,EAAaS,KAAKC,GAChBA,EAAKC,cAAcC,UAAU,YAC9B,IAAAmC,OAFU,EAAXA,EAEGzD,SACDe,EAAOX,MAAMiB,oBAEV,OAANN,QAAM,IAANA,GAAAA,EAAQvC,aACPmD,EAAAA,EAAAA,KAAC+B,EAAAA,SAAc,CAAAxB,UACbP,EAAAA,EAAAA,KAACgC,EAAAA,GAAI,CACHC,GACE,CACE,YACA,eACA5D,SAASe,EAAOX,OACbtC,EAECiD,EAAOX,MADP,GAEFW,EAAOX,MAEbyD,SAAO,EACP7B,MAAO,CACL8B,eAAgB,QAChB5B,UAEFP,EAAAA,EAAAA,KAACoC,EAAAA,EAAS,CACRC,UAAW,CACTC,EAAG,OACHC,aAAc,OACdC,SAAU,kBACVC,QAAS,OACTC,eAAgB,cAElBC,KACEnC,EAAAA,EAAAA,MAAA,WACEH,MAAO,CACLuC,gBAAiB,QACjBL,aAAc,OACdxB,MAAO,OACP0B,QAAS,OACTC,eAAgB,SAChBG,UAAW,MACX3B,SAAU,QACV4B,WAAY,SACZC,IAAK,QAEPtC,UAAWC,EACXT,QAASA,KAEL,CACE,YACA,eACA5B,SAASe,EAAOX,SACjBtC,IAED+D,EAAAA,EAAAA,GACE,UACAC,wBACA,GACA,GACA,GACA,GACA,GACA,EAEJ,EACAI,SAAA,EAEFP,EAAAA,EAAAA,KAAA,OACEW,IAAKvB,EAAOb,QACZqC,IAAKxB,EAAOV,MACZmC,QAAQ,MACRR,MAAO,CACLc,WAAY/B,EAAOb,QACnB6C,OAAQ,UACRC,mBACE,gBACFC,eAAgB,QAChB3C,OAAQ,CACN,YACA,eACAN,SAASe,EAAOX,OACbtC,EAEC,QADA,eAEF,SAEN4E,MACE7E,GAAe,MACf8C,EACI,GACCA,EAED,GADA,GAGNiC,OACE/E,GAAe,MACf8C,EACI,GACCA,EAED,GADA,MAKRgB,EAAAA,EAAAA,KAAA,KACEK,MAAO,CACLa,SAAU,YACVX,SAEDnB,EAAOV,gBAtGCqB,EA6GtB,IAEL6B,YAAa,CACXjF,aAAaC,QAAQ,SACrBT,QAKN6D,EAAAA,EAAAA,KAAC0B,EAAAA,EAAiB,CAChBC,QAAc,OAAL1F,QAAK,IAALA,OAAK,EAALA,EAAOuD,KACd,CAACJ,EAAQW,KAAC,IAAAiD,EAAAC,EAAA,QACI,OAAXlE,QAAW,IAAXA,GAEA,QAFWiE,EAAXjE,EAAaS,KAAKC,GACjBA,EAAKC,uBACN,IAAAsD,OAFW,EAAXA,EAEE3E,SAASe,EAAOX,MAAMiB,kBACZ,OAAXX,QAAW,IAAXA,GAEC,QAFUkE,EAAXlE,EAAaS,KAAKC,GAChBA,EAAKC,cAAcC,UAAU,YAC9B,IAAAsD,OAFU,EAAXA,EAEG5E,SAASe,EAAOX,MAAMiB,oBACpB,OAANN,QAAM,IAANA,GAAAA,EAAQvC,aACPmD,EAAAA,EAAAA,KAAC+B,EAAAA,SAAc,CAAAxB,UACbP,EAAAA,EAAAA,KAACgC,EAAAA,GAAI,CACHC,GACE,CAAC,YAAa,eAAe5D,SAC3Be,EAAOX,OAEJtC,EAECiD,EAAOX,MADP,GAEFW,EAAOX,MAEbyD,SAAO,EACP7B,MAAO,CACL8B,eAAgB,QAChB5B,UAEFP,EAAAA,EAAAA,KAACoC,EAAAA,EAAS,CACRC,UAAW,CACTC,EAAG,OACHC,aAAc,OACdC,SAAU,kBACVC,QAAS,OACTC,eAAgB,cAElBC,KACEnC,EAAAA,EAAAA,MAAA,WACEH,MAAO,CACLuC,gBAAiB,QACjBL,aAAc,OACdxB,MAAO,OACP0B,QAAS,OACTC,eAAgB,SAChBG,UAAW,MACX3B,SAAU,QACV4B,WAAY,SACZC,IAAK,QAEPtC,UAAWC,EACXT,QAASA,KAEL,CACE,YACA,eACA5B,SAASe,EAAOX,SACjBtC,IAED+D,EAAAA,EAAAA,GACE,UACAC,wBACA,GACA,GACA,GACA,GACA,GACA,EAEJ,EACAI,SAAA,EAEFP,EAAAA,EAAAA,KAAA,OACEW,IAAKvB,EAAOb,QACZqC,IAAKxB,EAAOV,MACZmC,QAAQ,MACRR,MAAO,CACLc,WAAY/B,EAAOb,QACnB6C,OAAQ,UACRC,mBACE,gBACFC,eAAgB,QAChB3C,OAAQ,CACN,YACA,eACAN,SAASe,EAAOX,OACbtC,EAEC,QADA,eAEF,SAEN4E,MACE7E,GAAe,MACf8C,EACI,GACCA,EAED,GADA,GAGNiC,OACE/E,GAAe,MACf8C,EACI,GACCA,EAED,GADA,MAKRgB,EAAAA,EAAAA,KAAA,KACEK,MAAO,CAAEa,SAAU,YAAaX,SAE/BnB,EAAOV,gBAnGCqB,EA0GtB,IAEL6B,YAAa,CACXjF,aAAaC,QAAQ,SACrBT,MAIS,EC/OrB,EA/BqB2C,IACnB,MAAM,YACJ5C,EAAW,MACXD,EAAK,YACL8C,EAAW,cACX5C,EAAa,cACb6C,GACEF,EAEJ,OACEkB,EAAAA,EAAAA,KAAC+B,EAAAA,SAAc,CAAAxB,SACZrE,EAAc,MACb8D,EAAAA,EAAAA,KAACqD,EAAkB,CACjBpH,MAAOA,EACP8C,YAAaA,EACb5C,cAAeA,EACf6C,cAAeA,KAGjBgB,EAAAA,EAAAA,KAACsD,EAAiB,CAChBpH,YAAaA,EACbD,MAAOA,EACP8C,YAAaA,EACb5C,cAAeA,EACf6C,cAAeA,KAGJ,ECrCrB,EAA8B,+BCkO9B,EA1NyBuE,CACvBrH,EACAD,EACA8C,EACA5C,KACI,IAADC,EACH,MAAMoH,GAAmBxG,EAAAA,EAAAA,GACvB,yBAGIyG,GAAuBzG,EAAAA,EAAAA,GAC3B,oCAGI0G,GAAc1G,EAAAA,EAAAA,GAClB,gCAGI2G,GAAa3G,EAAAA,EAAAA,GACjB,6BAGI4G,GAAkBC,EAAAA,EAAAA,YAAWC,EAAAA,GAC7B7F,EAAanB,EAAAA,EAAAA,IAAY,QAEzBoB,EACJD,IAAoC,QAA1B7B,EAAIK,KAAKC,MAAMuB,UAAW,IAAA7B,OAAA,EAAtBA,EAAwB+B,aAelC,SAAE4F,IAAaC,EAAAA,EAAAA,MAEfC,EAAYF,EAASG,MAAM,KAC3BlF,EACa,SAAjBiF,EAAU,IAAiBA,EAAU3F,OAAS,GAEzC6F,EAAMC,IAAmB9H,EAAAA,EAAAA,IAAQuC,IAMjCxC,KAJwBW,EAAAA,EAAAA,GAC7B,8CAGcV,EAAAA,EAAAA,IAAQC,EAAAA,IAClBC,EACJH,GAASI,KAAKC,MAAMC,aAAaC,QAAQ,UAErCwB,GACU,OAAdF,QAAc,IAAdA,OAAc,EAAdA,EAAgBG,SAAS,aACE,KAAb,OAAdH,QAAc,IAAdA,OAAc,EAAdA,EAAgBI,SAChBpC,EAAc,KAIVmI,EACJnI,EAAc,KACV,CACE,CACEqC,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,uBACzBC,MAAO,iBACPC,MAAO+E,GAET,CACElF,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,mBACzBC,MAAO,aACPC,MAAO8E,IAGX,CACE,CACEjF,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,uBACzBC,MAAOL,EACH,iBACA,kBACJM,MAAO+E,GAET,CACElF,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,mBACzBC,MAAOL,EACH,aACA,cACJM,MAAO8E,IAIXc,EACJpI,EAAc,KACV,CACE,CACEqC,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,sBACzBC,MAAO,MACPC,MAAOgF,GAET,CACEnF,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UACX,8BAEJC,MAAO,OACPC,MAAOiF,IAGX,CACE,CACEpF,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,sBACzBC,MAAOL,EAAgB,MAAQ,OAC/BM,MAAOgF,GAET,CACEnF,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UACX,8BAEJC,MAAOL,EAAgB,OAAS,QAChCM,MAAOiF,KAIjBY,EAAAA,EAAAA,YAAU,KACR,GAAKtI,GAIE,OAALA,QAAK,IAALA,GAAAA,EAAOuD,KACL,CAACJ,EAAQW,KAAC,IAAA8B,EAAAC,EAAA,OACG,OAAX/C,QAAW,IAAXA,GAEC,QAFU8C,EAAX9C,EAAaS,KAAKC,GAChBA,EAAKC,uBACN,IAAAmC,OAFU,EAAXA,EAEGxD,SAASe,EAAOX,MAAMiB,kBACd,OAAXX,QAAW,IAAXA,GAEC,QAFU+C,EAAX/C,EAAaS,KAAKC,GAChBA,EAAKC,cAAcC,UAAU,YAC9B,IAAAmC,OAFU,EAAXA,EAEGzD,SAASe,EAAOX,MAAMiB,eAAc,IAE3C,CACA,MAAM8E,EAAuB,OAALvI,QAAK,IAALA,OAAK,EAALA,EAAO0C,QAC7B,CAACS,EAAQW,KAAC,IAAAiD,EAAAC,EAAA,OACG,OAAXlE,QAAW,IAAXA,GAEC,QAFUiE,EAAXjE,EAAaS,KAAKC,GAChBA,EAAKC,uBACN,IAAAsD,OAFU,EAAXA,EAEG3E,SAASe,EAAOX,MAAMiB,kBACd,OAAXX,QAAW,IAAXA,GAEC,QAFUkE,EAAXlE,EAAaS,KAAKC,GAChBA,EAAKC,cAAcC,UAAU,YAC9B,IAAAsD,OAFU,EAAXA,EAEG5E,SAASe,EAAOX,MAAMiB,eAAc,IAG3C0E,EAAgBI,EAClB,IACC,CACD/H,KAAKgI,UAAUxI,GACfQ,KAAKgI,UAAU1F,GACf5C,IAkCF,MAAO,CACLuI,eAhCoB1H,EAAAA,EAAAA,GACpB,qCAgCA2H,cA9BmB3H,EAAAA,EAAAA,GACnB,oCA8BA4H,YA1BA3I,IACK,OAALA,QAAK,IAALA,OAAK,EAALA,EAAO0C,QACL,CAACS,EAAQW,KAAC,IAAA8E,EAAAC,EAAA,QACI,OAAX/F,QAAW,IAAXA,GAEA,QAFW8F,EAAX9F,EAAaS,KAAKC,GACjBA,EAAKC,uBACN,IAAAmF,OAFW,EAAXA,EAEExG,SAASe,EAAOX,MAAMiB,kBACZ,OAAXX,QAAW,IAAXA,GAEC,QAFU+F,EAAX/F,EAAaS,KAAKC,GAChBA,EAAKC,cAAcC,UAAU,YAC9B,IAAAmF,OAFU,EAAXA,EAEGzG,SAASe,EAAOX,MAAMiB,oBACpB,OAANN,QAAM,IAANA,GAAAA,EAAQvC,UAAS,KAkBtBkI,gBAtLuBC,IAAK,CAC5BC,oBACErB,EAAgBsB,YAEV,4BAEFhJ,EAAc,KACd,6BACA,4BACNwG,eAAgBxG,EAAc,KAAO,SAAW,GAChD4G,WAAY5G,EAAc,KAAO,SAAW,KA6K5C8C,gBACAmG,kBAAmBd,EACnBe,SAAUd,EACVe,aAnBApJ,IACK,OAALA,QAAK,IAALA,OAAK,EAALA,EAAO0C,QACL,CAACS,EAAQW,KAAC,IAAAuF,EAAAC,EAAA,QACI,OAAXxG,QAAW,IAAXA,GAEA,QAFWuG,EAAXvG,EAAaS,KAAKC,GACjBA,EAAKC,uBACN,IAAA4F,OAFW,EAAXA,EAEEjH,SAASe,EAAOX,MAAMiB,kBACZ,OAAXX,QAAW,IAAXA,GAEC,QAFUwG,EAAXxG,EAAaS,KAAKC,GAChBA,EAAKC,cAAcC,UAAU,YAC9B,IAAA4F,OAFU,EAAXA,EAEGlH,SAASe,EAAOX,MAAMiB,mBACrB,OAANN,QAAM,IAANA,OAAM,EAANA,EAAQvC,UAAU,KAWvB,ECYH,EA7NyB2I,IAKlB,IAADC,EAAA,IALoB,MACxBxJ,EAAK,YACL8C,EAAW,cACX5C,EAAa,YACbD,GACDsJ,EACC,MAAME,EAAYC,IAAkBC,EAAAA,EAAAA,WAAS,IACvC,cACJlB,EAAa,aACbC,EAAY,YACZC,EAAW,gBACXG,EAAe,cACf/F,EAAa,kBACbmG,EAAiB,SACjBC,EAAQ,aACRC,GACE9B,EACFrH,EACAD,EACA8C,EACA5C,GAGI0J,GAAqB7I,EAAAA,EAAAA,GACzB,yCAEI8I,GAAqB9I,EAAAA,EAAAA,GACzB,wBAGI+I,EAAqC,QAA5BN,GAAG5B,EAAAA,EAAAA,YAAWC,EAAAA,UAAc,IAAA2B,OAAA,EAAzBA,EAA2BM,UAEvCC,GACK,OAATD,QAAS,IAATA,OAAS,EAATA,EAAW1H,SAAS,qBACpB0H,EAAU1H,SAAS,cAEf4H,GACK,OAATF,QAAS,IAATA,OAAS,EAATA,EAAW1H,SAAS,UACpB0H,EAAU1H,SAAS,SAarB,OATAkG,EAAAA,EAAAA,YAAU,KACRoB,GAAeO,IAAOA,IACtBP,GAAeO,IAAOA,IACtBP,GAAeO,IAAOA,IACtBP,GAAeO,IAAOA,IACtBP,GAAeO,IAAOA,GAAK,GAC3B,KAIA1F,EAAAA,EAAAA,MAAC2F,EAAAA,EAAK,CACJC,UAAWlK,GAAe,KAAO,MAAQ,GACzCmK,YAAanK,GAAe,KAAO,SAAW,GAC9CoK,GAAI,CACFC,cAAerK,EAAc,KAAO,MAAQ,IAC5CqE,SAAA,EAEW,OAAZ8E,QAAY,IAAZA,OAAY,EAAZA,EAAc/G,QAAS,GACtB0B,EAAAA,EAAAA,KAACwG,EAAAA,EAAS,CAACF,GAAI,CAAEG,GAAI,OAAQlG,UAC3BC,EAAAA,EAAAA,MAAC2F,EAAAA,EAAK,CACJO,UAAU,MACV3D,IAAI,OACJD,WAAW,SAAQvC,SAAA,EAEnBP,EAAAA,EAAAA,KAAA,MACEK,MAAO,CACLU,MAAO,OACP4F,QAAS,EACT1F,OAAQ,UAGZjB,EAAAA,EAAAA,KAAA,KAAAO,SAAImE,UAIR1E,EAAAA,EAAAA,KAAA,SAED0F,GAAY1F,EAAAA,EAAAA,KAAA,SAAQA,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,IACpBtF,EAAc,MAAO8D,EAAAA,EAAAA,KAAA,UAASA,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,KAE/BhB,EAAAA,EAAAA,MAACoG,EAAAA,EAAG,CACFnG,UAAWC,EACX4F,GAAIvB,EAAgBxE,SAAA,EAEpBP,EAAAA,EAAAA,KAAC6G,EAAY,CACX5K,MAAOA,EACP8C,YAAaA,EACb5C,cAAeA,EACf6C,cAAeA,EACf9C,YAAaA,IAERwJ,GAAY1F,EAAAA,EAAAA,KAAA,SAAQA,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,QAIjB,OAAXoD,QAAW,IAAXA,OAAW,EAAXA,EAAatG,QAAS,GACrB0B,EAAAA,EAAAA,KAACwG,EAAAA,EAAS,CAACF,GAAI,CAAEQ,GAAI,OAAQvG,UAC3BC,EAAAA,EAAAA,MAAC2F,EAAAA,EAAK,CACJO,UAAU,MACV3D,IAAI,OACJD,WAAW,SAAQvC,SAAA,EAEnBP,EAAAA,EAAAA,KAAA,MACEK,MAAO,CACLU,MAAO,OACP4F,QAAS,EACT1F,OAAQ,UAGZjB,EAAAA,EAAAA,KAAA,KAAAO,SAAIoE,UAIR3E,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,IAEDtF,EAAc,MAAO8D,EAAAA,EAAAA,KAAA,UAASA,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,KAC/BhB,EAAAA,EAAAA,MAACoG,EAAAA,EAAG,CACFnG,UAAWC,EACX4F,GAAIvB,EAAgBxE,SAAA,EAEpBP,EAAAA,EAAAA,KAAC+G,EAAW,CACV9K,MAAOA,EACP8C,YAAaA,EACb5C,cAAeA,EACf6C,cAAeA,EACf9C,YAAaA,IAERwJ,GAAY1F,EAAAA,EAAAA,KAAA,SAAQA,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,QAIjB,OAAXoD,QAAW,IAAXA,OAAW,EAAXA,EAAatG,QAAS,GACvB0H,GACEhG,EAAAA,EAAAA,KAACwG,EAAAA,EAAS,CAACF,GAAI,CAAEQ,GAAI,OAAQvG,UAC3BC,EAAAA,EAAAA,MAAC2F,EAAAA,EAAK,CACJO,UAAU,MACV3D,IAAI,OACJD,WAAW,SAAQvC,SAAA,EAEnBP,EAAAA,EAAAA,KAAA,MACEK,MAAO,CACLU,MAAO,OACP4F,QAAS,EACT1F,OAAQ,UAGZjB,EAAAA,EAAAA,KAAA,KACEK,MAAO,CACLU,MACE7E,EAAc,KAAO,QAAU,QACjCqE,SAEDsF,UAKP7F,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,IAEDtF,EAAc,MAAO8D,EAAAA,EAAAA,KAAA,UAASA,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,KAC/BxB,EAAAA,EAAAA,KAAC4G,EAAAA,EAAG,CACFnG,UAAWC,EACX4F,GAAIvB,EAAgBxE,UAEpBP,EAAAA,EAAAA,KAAC+G,EAAW,CACV9K,MAAOkJ,EACPpG,YAAaA,EACb5C,cAAeA,EACf6C,cAAeA,EACf9C,YAAaA,OAIL,OAAX0I,QAAW,IAAXA,OAAW,EAAXA,EAAatG,QAAS,GAAK2H,GAC1BjG,EAAAA,EAAAA,KAACwG,EAAAA,EAAS,CAACF,GAAI,CAAEQ,GAAI,OAAQvG,UAC3BC,EAAAA,EAAAA,MAAC2F,EAAAA,EAAK,CACJO,UAAU,MACV3D,IAAI,OACJD,WAAW,SAAQvC,SAAA,EAEnBP,EAAAA,EAAAA,KAAA,MACEK,MAAO,CACLU,MAAO,OACP4F,QAAS,EACT1F,OAAQ,UAGZjB,EAAAA,EAAAA,KAAA,KACEK,MAAO,CACLU,MACE7E,EAAc,KAAO,QAAU,QACjCqE,SAEDuF,UAKP9F,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,IAEDtF,EAAc,MAAO8D,EAAAA,EAAAA,KAAA,UAASA,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,KAC/BxB,EAAAA,EAAAA,KAAC4G,EAAAA,EAAG,CACFnG,UAAWC,EACX4F,GAAIvB,EAAgBxE,UAEpBP,EAAAA,EAAAA,KAAC+G,EAAW,CACV9K,MAAOmJ,EACPrG,YAAaA,EACb5C,cAAeA,EACf6C,cAAeA,EACf9C,YAAaA,MAGhBwJ,GAAY1F,EAAAA,EAAAA,KAAA,SAAQA,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,MAEf,E,0BCvOZ,QAAoC,0C,eCCpC,MAgCA,EAhCiCwF,CAACC,EAAQC,KAAiB,IAADC,EAAAC,EACxD,MAAOC,EAAeC,IAAoB1B,EAAAA,EAAAA,UAAS,MAE7C2B,EAAmB,OAANN,QAAM,IAANA,GAAe,QAATE,EAANF,EAAQO,KAAK,UAAE,IAAAL,GAAW,QAAXC,EAAfD,EAAiBM,iBAAS,IAAAL,OAApB,EAANA,EAA4B9I,OA0B/C,OAZAiG,EAAAA,EAAAA,YAAU,KACR,MAAMmD,EAAUC,YAAW,KACrBN,IAAkBE,EAAa,GAfvC,SAAwBK,EAAaC,GACnC,IAAIC,EAAUF,EACd,MAAMG,EAAQC,aAAY,KACpBd,EAAYe,UACdf,EAAYe,QAAQC,KAAKJ,GACzBA,IACIA,EAAU,GACZK,cAAcJ,GAElB,GACCF,EACL,CAKMO,CAAeb,EAAa,EAAG,KACjC,GACC,KAEH,MAAO,KACLc,aAAaX,EAAQ,CACtB,GACA,CAACL,IAEG,CAACC,EAAiBD,EAAc,E,SCvBzC,MA+DA,EA/DoB7B,IAAiB,IAAhB,OAAEyB,GAAQzB,GACZtG,EAAAA,EAAAA,MAEjB,OACEsB,EAAAA,EAAAA,MAACuB,EAAAA,SAAc,CAAAxB,SAAA,EACbP,EAAAA,EAAAA,KAAA,OACEK,MAAO,CACLiI,aAAc,MAEd/H,SAEK,OAAN0G,QAAM,IAANA,OAAM,EAANA,EAAQzH,KAAI,CAAC+I,EAAOC,KAAK,IAAAC,EAAA,OACxBzI,EAAAA,EAAAA,KAACoC,EAAAA,EAAS,CAERC,UAAW,CACTE,aAAc,OACdmG,YAAa,MACb/B,QAAS,OACTpE,aAAc,QAEhBI,KACEnC,EAAAA,EAAAA,MAAA,OACEH,MAAO,CACLuC,gBAAiB,QACjBL,aAAc,QAEhBtC,QAASA,KAMP0I,OAAOC,KAAU,OAALL,QAAK,IAALA,OAAK,EAALA,EAAOM,YAAa,SAAS,EAGzCtI,SAAA,EAEFP,EAAAA,EAAAA,KAAA,OACEW,IAAU,OAAL4H,QAAK,IAALA,GAAmB,QAAdE,EAALF,EAAOd,UAAU,UAAE,IAAAgB,OAAd,EAALA,EAAqBK,YAC1BlI,IAAU,OAAL2H,QAAK,IAALA,OAAK,EAALA,EAAOQ,YACZ1I,MAAO,CACLU,MAAO,OACPE,OAAQ,UACRsB,aAAc,oBAGlBvC,EAAAA,EAAAA,KAAA,KACEK,MAAO,CACL2I,UAAW,UACXzI,UAED0I,EAAAA,EAAAA,GAAqB,OAALV,QAAK,IAALA,OAAK,EAALA,EAAOW,cAtCzBX,EAAMY,GA0CX,OAGNnJ,EAAAA,EAAAA,KAAA,OAAKK,MAAO,CAAE+I,aAAc,WACb,ECwBrB,EAnFsB5D,IAAiB,IAAD6D,EAAA,IAAf,OAAEpC,GAAQzB,EAC/B,MAAM0B,GAAcoC,EAAAA,EAAAA,QAAO,OAEpBhC,EAAkBD,GACvBL,EAAyBC,EAAQC,GAWnC,OACE1G,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAyBH,SAAA,EACvCC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBF,SAAA,CAC9B0G,GACCjH,EAAAA,EAAAA,KAACmG,EAAAA,EAAK,CAAA5F,UACJP,EAAAA,EAAAA,KAACuJ,EAAAA,EAAQ,CACPC,IAAKtC,EACLuC,mBAAoB,EACpBC,YAhBQ,CAClB,CAAE3I,MAAO,EAAG4I,YAAa,GACzB,CAAE5I,MAAO,IAAK4I,YAAa,EAAGC,cAAe,GAC7C,CAAE7I,MAAO,IAAK4I,YAAa,GAC3B,CAAE5I,MAAO,KAAM4I,YAAa,IAalBE,YAXIC,KAAM9J,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,IAYVuI,gBAAc,EACdC,cAAe,IACfC,SAAUA,CAACC,EAAK1B,KACdlB,EAAiBkB,EAAM,EACvBjI,SAEK,OAAN0G,QAAM,IAANA,GAEA,QAFMoC,EAANpC,EAAQO,KAAK7I,QACXC,GAAOA,EAAGuL,sBACZ,IAAAd,OAFM,EAANA,EAEE7J,KAAKmC,GACC,OAAPA,QAAO,IAAPA,OAAO,EAAPA,EAAS8F,UACN9I,QAAQyL,GAAOA,EAAGC,qBAClB7K,KAAKiI,IAEFjH,EAAAA,EAAAA,MAAC2F,EAAAA,EAAK,CAACmE,SAAS,WAAU/J,SAAA,EACxBP,EAAAA,EAAAA,KAAA,KACEK,MAAO,CACLiK,SAAU,WACVC,OAAQ,GACRC,MAAO,IACPjK,UAED0I,EAAAA,EAAAA,GAAuB,OAAPtH,QAAO,IAAPA,OAAO,EAAPA,EAASuH,WAE5BlJ,EAAAA,EAAAA,KAAA,OACEK,MAAO,CACLU,MAAO,SACPE,OAAQ,UACRwJ,UAAW,QACX9D,QAAS,EACT+D,OAAQ,GAEV/J,IAAK8G,EAAUqB,YACflI,IAAK6G,EAAUsB,YACf9I,QAASA,KACP0I,OAAOC,KACI,OAATnB,QAAS,IAATA,OAAS,EAATA,EAAWkD,UACX,SACD,gBAUnB3K,EAAAA,EAAAA,KAAA,OAAKK,MAAO,CAAE+I,aAAc,UAG9BpJ,EAAAA,EAAAA,KAAA,cAEFA,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,WACI,E,uCCpFV,IAAI4K,EAAK,IAAIC,EAAAA,GAAM,cACnBD,EAAGE,QAAQ,GAAGC,OAAO,CACnB9D,OAAQ,cAGV,MAgGA,EAhGgC+D,IAC9B,MAAOC,EAAcC,IAAmBtF,EAAAA,EAAAA,UAAS,MAqBjDuF,eAAeC,IAAgC,IAAjBC,EAAUC,UAAAhN,OAAA,QAAAiN,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACzC,IAEE,aADqBV,EAAG3D,OAAOuE,SAkBjC,CAhBE,MAAOC,GACP,MAAiB,wBAAbA,EAAIC,MAAkCL,EAAa,GACrDM,QAAQC,IAAI,4CACZhB,EAAK,IAAIC,EAAAA,GAAM,cACfD,EAAGE,QAAQ,GAAGC,OAAO,CACnB9D,OAAQ,oBAEJ2D,EAAGhC,OACFwC,EAAeC,EAAa,KAEnCM,QAAQE,MACN,yCACAJ,GAEK,GAEX,CACF,CAkDA,OAhDAlH,EAAAA,EAAAA,YAAU,KACoB4G,kBACMC,KACV9M,OAAS,EAC7B3B,aAAamP,QACX,iBACArP,KAAKgI,WAAU,IAInB9H,aAAamP,QACX,iBACArP,KAAKgI,WAAU,GAChB,EAGHsH,EAAqB,GACpB,KAEHxH,EAAAA,EAAAA,YAAU,KACoB4G,WAC1B,MAAMa,QAA0BZ,IAEhC,GAAIY,EAAkB1N,OAAS,EAC7B3B,aAAamP,QACX,iBACArP,KAAKgI,WAAU,IAEjByG,EAAgB,CACd1D,KAAMwE,SAEH,GAAIhB,EAAW,CACpBrO,aAAamP,QACX,iBACArP,KAAKgI,WAAU,UA5EvB0G,eAAyBlE,GACvB,MAAMgF,QAAuBrB,EAAG3D,OAAOuE,UAEjCU,EAAiBjF,EAAOtI,QAAQ4J,IAC5B0D,EAAeE,MACpBC,GAAkBA,EAAcC,MAAQ9D,EAAM8D,QAI/CH,EAAe5N,OAAS,UACpBsM,EAAG3D,OAAOqF,QAAQJ,GACxBP,QAAQC,IAAI,SAADW,OACAL,EAAe5N,OAAM,iCAKpC,CA6DYkO,CAAUxB,GAChB,MAAMyB,QACErB,IACRF,EAAgB,CACd1D,KAAMiF,GAEV,GAGFV,EAAqB,GACpB,CAACf,IAEGC,CAAY,EC1ErB,EAvB+ByB,KAC7B,MAAMC,EACJhQ,aAAaC,QAAQ,mBACrBH,KAAKC,MAAMC,aAAaC,QAAQ,oBAE3BqK,EAAQ2F,GAAqB7K,EAAAA,UAAe,IAAQpF,aAAaC,QAAQ,mBAChFH,KAAKC,MAAMC,aAAaC,QAAQ,qBAE1BqO,EAAe4B,EAA6B,OAAN5F,QAAM,IAANA,OAAM,EAANA,EAAQO,MAYpD,OARAzF,EAAAA,WAAgB,KACT4K,GCduBxB,WACvB2B,EAAAA,EAAAA,MACL,OAAO,GAADP,OACHQ,2BACH,EACA,CACEC,YAAY,EACZC,cAAc,EACdC,iBAAiB,IDOjBC,GAAmBC,MAAMC,IACvBT,EAAkBS,EAASC,KAAKC,KAAK,GAEzC,GACC,CAACZ,IAEG1B,CAAY,EEnBRuC,EAAgBrR,IAC3B,MAAOE,IAASC,EAAAA,EAAAA,IAAQC,EAAAA,GAClBC,EACJH,GAASI,KAAKC,MAAMC,aAAaC,QAAQ,UAErCC,EAAYC,EAAAA,EAAAA,IAAY,QAC1BL,KAAKC,MAAMI,EAAAA,EAAAA,IAAY,SAASD,UAChC,GAEE4Q,GAAsBzQ,EAAAA,EAAAA,GAC1B,oCAEI0Q,GAAoB1Q,EAAAA,EAAAA,GACxB,gCAEI2Q,GAAmB3Q,EAAAA,EAAAA,GACvB,+BAEI4Q,GAAyB5Q,EAAAA,EAAAA,GAC7B,qCAEI6Q,GAAkB7Q,EAAAA,EAAAA,GACtB,gCAEI8Q,GAAY9Q,EAAAA,EAAAA,GAAY,yBACxB+Q,GAAsB/Q,EAAAA,EAAAA,GAC1B,oCAEIgR,GAAoBhR,EAAAA,EAAAA,GACxB,iCAEIiR,GAAqBjR,EAAAA,EAAAA,GACzB,oCAEIkR,GAAsBlR,EAAAA,EAAAA,GAC1B,yCAcII,IAZsBJ,EAAAA,EAAAA,GAC1B,qCAEsBA,EAAAA,EAAAA,GACtB,0BAEsBA,EAAAA,EAAAA,GACtB,iCAEwBA,EAAAA,EAAAA,GACxB,8BAEwBA,EAAAA,EAAAA,GACxB,0CAEIK,GAAwBL,EAAAA,EAAAA,GAC5B,sCAEIM,GAAaN,EAAAA,EAAAA,GACjB,gCAGIa,GAA0Bb,EAAAA,EAAAA,GAC9B,2BAGIc,GAAwBd,EAAAA,EAAAA,GAC5B,iCAGIe,GAAwBf,EAAAA,EAAAA,GAC5B,mCAKImR,IAH6BnR,EAAAA,EAAAA,GACjC,yCAEsBA,EAAAA,EAAAA,GACtB,sBA+LF,MA5La,CAGG,IAAdH,EACI,KACA,CACE0B,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,oBACzBC,MAAO,aACPC,MAAOqP,EACPlR,aAEQ,IAAdA,EACI,KACA,CACE0B,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,cACzBC,MAAO,WACPC,MAAOsP,EACPnR,aAEQ,IAAdA,EACI,KACA,CACE0B,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,kBACzBC,MAAO,gBACPC,MAAOuP,EACPpR,aAEQ,IAAdA,EACI,KACA,CACE0B,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,uBACzBC,MAAO,iBACPC,MAAOwP,EACPrR,aAGQ,IAAdA,EACI,KACA,CACE0B,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,qBACzBC,MAAO,cACPC,MAAOtB,EACPP,aAGQ,IAAdA,EACI,KACA,CACE0B,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,sBACzBC,MAAO,aACPC,MAAOpB,EACPT,aAEQ,IAAdA,EACI,KACA,CACE0B,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,mBACzBC,MAAO,kBAEPC,MAAOrB,EACPR,aAGN,CACE0B,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,uBAEzBC,MAAO,kBACPC,MAAO+O,GAET,CACElP,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,oBACzBC,MAAO,cACPC,MAAOgP,GAET,CACEnP,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,wBACzBC,MAAO,uBACPC,MAAOiP,GAET,CACEpP,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,0BACzBC,MAAO,uBACPC,MAAOkP,GAET,CACErP,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,eACzBC,MAAO,GACPC,MAAOmP,GAET,CACEtP,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,aACzBC,MAAO,GACPC,MAAOoP,GAiCK,IAAdjR,EACI,KACA,CACE0B,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,aACzBC,MAAO,oBACPC,MAAOb,EACPhB,aAEQ,IAAdA,EACI,KACA,CACE0B,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,mBACzBC,MAAO,WACPC,MAAOZ,EACPjB,aAEN,CACE0B,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,oBACzBC,MAAO,mBACPC,MAAOX,GAET,CACEQ,QACE,8BACW,OAAX/B,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,kBACzBC,MAAO,uBAEPC,MAAOyP,IAICxP,QAAQC,GAAc,OAAPA,GAAY,EC3KzC,EA3FwB4G,IAA8B,IAAD4I,EAAA,IAA5B,OAAEnH,EAAM,YAAE/K,GAAasJ,EAC9C,MAAM0B,GAAcoC,EAAAA,EAAAA,QAAO,OAEpBhC,EAAkBD,GACvBL,EAAyBC,EAAQC,GAWnC,OACE1G,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAyBH,SAAA,EACvCC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBF,SAAA,CAC9B0G,GACCjH,EAAAA,EAAAA,KAACmG,EAAAA,EAAK,CAAA5F,UACJP,EAAAA,EAAAA,KAACuJ,EAAAA,EAAQ,CACPC,IAAKtC,EACLuC,mBAAoB,EACpBC,YAhBQ,CAClB,CAAE3I,MAAO,EAAG4I,YAAa,GACzB,CAAE5I,MAAO,IAAK4I,YAAa,EAAGC,cAAe,GAC7C,CAAE7I,MAAO,IAAK4I,YAAa,GAC3B,CAAE5I,MAAO,KAAM4I,YAAa,IAalBE,YAXIC,KAAM9J,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,IAYVuI,gBAAc,EACdC,cAAe,IACfC,SAAUA,CAACC,EAAK1B,KACdlB,EAAiBkB,EAAM,EACvBjI,SAEK,OAAN0G,QAAM,IAANA,GAAY,QAANmH,EAANnH,EAAQO,YAAI,IAAA4G,OAAN,EAANA,EAAc5O,KAAKmC,GACX,OAAPA,QAAO,IAAPA,OAAO,EAAPA,EAAS8F,UAAUjI,KAAKiI,IAEpBjH,EAAAA,EAAAA,MAAC2F,EAAAA,EAAK,CAACmE,SAAS,WAAU/J,SAAA,EACxBP,EAAAA,EAAAA,KAAA,KACEK,MAAO,CACLiK,SAAU,WACVC,OAAQ,GACRC,MAAO,GACP5H,gBAAiB,QACjB7B,MAAO,OACPwB,aAAc,mBACd8L,aAAc,QACd9N,UAED0I,EAAAA,EAAAA,GAAuB,OAAPtH,QAAO,IAAPA,OAAO,EAAPA,EAASuH,WAE5BlJ,EAAAA,EAAAA,KAAA,OACEK,MAAO,CACLU,MACE7E,GAAe,KACfA,GAAe,KACX,OACA,SACN+E,OACE/E,GAAe,KACfA,GAAe,KACX,SACA,UACNuO,UAAW,QACX9D,QAAS,EACT+D,OAAQ,GAEV/J,IAAK8G,EAAUqB,YACflI,IAAK6G,EAAUsB,YACf9I,QAASA,KACP0I,OAAOC,KACI,OAATnB,QAAS,IAATA,OAAS,EAATA,EAAWkD,UACX,SACD,gBAUjB3K,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,KAGFxB,EAAAA,EAAAA,KAAA,cAEFA,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,WACI,E,mCC5FK,SAASsO,EAAS9I,GAAsE,IAArE,eAACtH,EAAc,SAACqQ,EAAQ,YAACrS,EAAW,UAAC6J,EAAS,cAAC5J,EAAa,KAACqS,GAAKhJ,EAClG,OACCxF,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,CAAAjB,SACErC,GACKA,EAAeG,SAAS,YACtB2B,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,CAAAjB,SACGgO,EAAS5P,QACPC,IAAE,IAAA6P,EAAA,OACQ,OAAT1I,QAAS,IAATA,OAAS,EAATA,EAAW1H,SAASO,EAAGH,UACnB,OAAJ+P,QAAI,IAAJA,GAC6B,QADzBC,EAAJD,EACIhP,KAAKkP,GAASA,EAAKjQ,eAAM,IAAAgQ,OADzB,EAAJA,EAEIpQ,SAASO,EAAGH,OAAM,IACxBH,OAAS,GACK,OAAdJ,QAAc,IAAdA,GAAAA,EAAgBG,SAAS,YACvB2B,EAAAA,EAAAA,KAAC2O,EAAgB,CACf1S,MACEC,EAAc,KAAOsS,EAAOD,EAE9BxP,YAAagH,EACb5J,cAAeA,EACfD,YAAaA,KAMjB8D,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,MAIJtD,IACE8B,EAAAA,EAAAA,KAAC2O,EAAgB,CACf1S,MAAOC,EAAc,KAAOsS,EAAOD,EACnCxP,YAAagH,EACb5J,cAAeA,EACfD,YAAaA,KAM7B,CCdA,MA0JA,EA1JiB0S,KAAO,IAADxS,EAAAqJ,EAAAoJ,EAAAC,EAAAC,EAAAX,EACrB,MAAO1I,EAAaC,IAAkBC,EAAAA,EAAAA,WAAS,IAKxC,CAAEoJ,IAHPlS,EAAAA,EAAAA,IAAY,UACmB,QADZV,EACnBK,KAAKC,MAAMI,EAAAA,EAAAA,IAAY,gBAAQ,IAAAV,GAA/BA,EAAiC6S,WAEJ3S,EAAAA,EAAAA,IAAQ4S,EAAAA,KACvCC,EAAAA,EAAAA,GAA0BH,IAEFnL,EAAAA,EAAAA,YAAWC,EAAAA,GAAnC,MACMiC,EAAqC,QAA5BN,GAAG5B,EAAAA,EAAAA,YAAWC,EAAAA,UAAc,IAAA2B,OAAA,EAAzBA,EAA2BM,UACvC5J,EACqB,QADR0S,GACjBhL,EAAAA,EAAAA,YAAWC,EAAAA,UAAc,IAAA+K,OAAA,EAAzBA,EAA2B1S,cACvBqS,EAAOhB,EAAarR,GAEpBD,GADiC,QAA5B4S,GAAGjL,EAAAA,EAAAA,YAAWC,EAAAA,UAAc,IAAAgL,GAAzBA,EAA2BM,OACrBC,EAAAA,EAAAA,MACdd,EAAWtS,EAAMC,EAAa,GAC9B+K,EAASyF,IAKT4C,IAHWtL,EAAAA,EAAAA,MACYD,SAEZ4E,OAAO4G,SAASxL,UAM3B9F,IAJkBjB,EAAAA,EAAAA,GACtB,iCAGiBF,EAAAA,EAAAA,IAAY,SAEzBoB,EACJD,IAAoC,QAA1B8Q,EAAItS,KAAKC,MAAMuB,UAAW,IAAA8Q,OAAA,EAAtBA,EAAwB5Q,YAUxC,OARAoG,EAAAA,EAAAA,YAAU,KACS,UAAb+K,IACF3J,GAAgBO,IAAUA,IAC1BP,GAAgBO,IAAUA,IAC1BP,GAAgBO,IAAUA,IAC1BP,GAAgBO,IAAUA,IAC5B,GACC,CAACoJ,KAEF9O,EAAAA,EAAAA,MAAA,OACEH,MAAO,CACLmP,SAAU,OAEVC,WAAYvT,EAAc,KAAO,MAAQ,IACzCkK,UAAW,IACX3D,QACEvG,EAAc,KACV,GACc,OAAdgC,QAAc,IAAdA,GAAAA,EAAgBG,SAAS,YACE,KAAb,OAAdH,QAAc,IAAdA,OAAc,EAAdA,EAAgBI,SAChBpC,EAAc,KACd,OACA,GACNwG,eACExG,EAAc,KACV,GACc,OAAdgC,QAAc,IAAdA,GAAAA,EAAgBG,SAAS,YACE,KAAb,OAAdH,QAAc,IAAdA,OAAc,EAAdA,EAAgBI,SAChBpC,EAAc,KACd,eACA,GACNmK,YAAanK,EAAc,KAAO,MAAQ,GAC1CwT,cAAe,SACfC,cAAe,MACfC,UAAW,QACXrP,SAAA,EAUFP,EAAAA,EAAAA,KAACmG,EAAAA,EAAK,CACJG,GAAI,CACFD,YACEnK,EAAc,MACVA,EAAc,KACZ,OAEF,IACNqE,SAEDrE,EAAc,OAAc,OAAN+K,QAAM,IAANA,GAAY,QAANmH,EAANnH,EAAQO,YAAI,IAAA4G,OAAN,EAANA,EAAc9P,QAAS,GAC5C0B,EAAAA,EAAAA,KAAC6P,EAAe,CACd5I,OAAQA,EACR/K,YAAaA,KAGf8D,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,MAcHtF,EAAc,MACb8D,EAAAA,EAAAA,KAAC8P,EAAa,CAAC7I,OAAQA,KAEvBjH,EAAAA,EAAAA,KAAA,OAAKK,MAAO,CAAE+I,aAAc,UAE9B5I,EAAAA,EAAAA,MAAC2F,EAAAA,EAAK,CAAC1F,UAAU,iBAAgBF,SAAA,EAC/BP,EAAAA,EAAAA,KAAC4G,EAAAA,EAAG,CAAArG,UAEAP,EAAAA,EAAAA,KAACsO,EAAS,CACRpQ,eAAgBA,EAChBqQ,SAAUA,EACVrS,YAAaA,EACb6J,UAAWA,EACX5J,cAAeA,EACfqS,KAAMA,MAcXtS,EAAc,MACb8D,EAAAA,EAAAA,KAACmG,EAAAA,EAAK,CAAA5F,UAEJP,EAAAA,EAAAA,KAAC+P,EAAW,CACV9I,OAAc,OAANA,QAAM,IAANA,OAAM,EAANA,EAAQO,KAAK7I,QAClBC,IAAQA,EAAGuL,oBAKlBnK,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,QAGJxB,EAAAA,EAAAA,KAAA,WACI,E,0BCnLV,SAAgB,cAAgB,wCAAwC,cAAgB,wCAAwC,WAAa,qCAAqC,UAAY,oCAAoC,2BAA6B,qDAAqD,oCAAsC,8DAA8D,8BAAgC,wDAAwD,yBAA2B,oD,gBCE3gB,MAkCA,GAlCwBwF,IAMjB,IANkB,OACvBwK,EAAM,IACNpP,EAAG,UACHqP,EAAS,iBACTC,EAAgB,QAChBC,GACD3K,EACC,OACExF,EAAAA,EAAAA,KAAC+B,EAAAA,SAAc,CAAAxB,SACX2P,GAmBAlQ,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,KAlBAxB,EAAAA,EAAAA,KAACmG,EAAAA,EAAK,CAACO,UAAU,cAAc5D,WAAW,SAASsN,QAAS,EAAE7P,SAM1D4P,GAGAnQ,EAAAA,EAAAA,KAACqQ,GAAAA,EAAM,CACL3E,KAAK,YACL4E,MAAOL,GAAaA,EAAY,EAChCM,UAAQ,EACRC,IAAI,SANNxQ,EAAAA,EAAAA,KAAA,KAAAO,SAAI0P,GAAaA,GAAaA,EAAU/N,QAAQ,UAAM,eAa7C,E,gBC5BrB,MAiDA,GAjDuBsD,IAAmB,IAADiL,EAAAC,EAAA,IAAjB,SAAEC,GAAUnL,EAClC,MAAMhJ,EAAcC,KAAKC,MACvBC,aAAaC,QAAQ,UAGvB,OACEoD,EAAAA,EAAAA,KAAC+B,EAAAA,SAAc,CAAAxB,UACbC,EAAAA,EAAAA,MAAC2F,EAAAA,EAAK,CAACrD,WAAW,SAASsN,QAAS,EAAGQ,GAAI,EAAErQ,SAAA,EAW3CP,EAAAA,EAAAA,KAAC6Q,GAAe,CACdb,OAfU,8BAiBG,OAAXxT,QAAW,IAAXA,OAAW,EAAXA,EAAasU,YAAY,iBAE3BlQ,IAAK,2BACLqP,UAAmB,OAARU,QAAQ,IAARA,GAAwB,QAAhBF,EAARE,EAAUI,sBAAc,IAAAN,OAAhB,EAARA,EAA0BO,WACrCd,iBACES,EAASxS,aACD,OAARwS,QAAQ,IAARA,GAAoB,QAAZD,EAARC,EAAUxS,kBAAU,IAAAuS,OAAZ,EAARA,EAAsBrS,SAAS,eAGnC2B,EAAAA,EAAAA,KAAA,KACEK,MAAO,CACL4Q,MAAM,GAAD1E,OAAK2E,GAAAA,EAAAA,eACV3Q,SAEO,OAARoQ,QAAQ,IAARA,OAAQ,EAARA,EAAUQ,mBAUA,E,eCzCrB,MAmDA,GAnD0B3L,IAAiB,IAAhB,OAAE9E,GAAQ8E,EACnC,MAAMmL,OACoBpF,IAAxBzO,EAAAA,EAAAA,IAAY,SACZL,KAAKC,MAAMI,EAAAA,EAAAA,IAAY,SACnBsU,EACkC,OAAtCzU,aAAaC,QAAQ,cACrBH,KAAKC,MAAMC,aAAaC,QAAQ,cAEdH,KAAKC,MACvBC,aAAaC,QAAQ,UAIvB,OACEoD,EAAAA,EAAAA,KAAC+B,EAAAA,SAAc,CAAAxB,UACbC,EAAAA,EAAAA,MAAC2F,EAAAA,EAAK,CAACyK,GAAG,OAAMrQ,SAAA,EACdC,EAAAA,EAAAA,MAAC2F,EAAAA,EAAK,CAACrD,WAAW,SAASC,IAAI,OAAMxC,SAAA,EACzB,OAAT6Q,QAAS,IAATA,OAAS,EAATA,EAAW9S,QAAS,GACnB0B,EAAAA,EAAAA,KAAA,OACEW,IAAG,uBAAA4L,OAAyB6E,GAC5BxQ,IAAI,oDACJC,QAAQ,MACRE,MAAO,GACPE,OAAQ,GACRZ,MAAO,CAAEkC,aAAc,OAAO8O,OAAO,aAAD9E,OAAc2E,GAAAA,EAAAA,kBAGpDlR,EAAAA,EAAAA,KAACsR,GAAAA,EAAa,CACZhL,GAAI,CACFvF,MAAO,MACPE,OAAQ,MACRsQ,KAAK,GAADhF,OAAK2E,GAAAA,EAAAA,eAA0B,mBAKzClR,EAAAA,EAAAA,KAAA,KACEK,MAAO,CACL4Q,MAAM,GAAD1E,OAAK2E,GAAAA,EAAAA,eAA0B,gBACpC3Q,UAED0I,EAAAA,EAAAA,GAAwB,OAAR0H,QAAQ,IAARA,OAAQ,EAARA,EAAUa,gBAI/BxR,EAAAA,EAAAA,KAACyR,GAAc,CAACd,SAAUA,QAEb,E,gCCpDrB,MAgCA,GAhCqBnL,IAA8B,IAA7B,cAAEkM,EAAa,MAAEC,GAAMnM,EAC3C,MAAM,WAAEoM,IAAeC,EAAAA,GAAAA,GAAcH,GACrC,OACE1R,EAAAA,EAAAA,KAAC+B,EAAAA,SAAc,CAAAxB,UACbC,EAAAA,EAAAA,MAAA,QACEP,QAASA,IAAM2R,IACfvR,MAAO,CACLoC,QAAS,OACTiN,cAAe,cACf5M,WAAY,SACZC,IAAK,OACL3B,OAAQ,WACRb,SAAA,EAECP,EAAAA,EAAAA,KAAA,OACCW,IAAKgR,EACL/Q,KAAK5D,EAAAA,EAAAA,GAAY,iCACjB+D,MAAM,OACNE,OAAO,OACPZ,MAAO,CACLc,WAAYwQ,EACZvQ,OAAQ,UACRC,mBAAoB,gBACpBC,eAAgB,YAGrBtE,EAAAA,EAAAA,GAAY,qCAEA,EC3BR8U,GAAeA,CAC1BC,EACAC,EACApO,EACAqO,EACAjD,EACAkD,EACAC,IAE0BC,IACxB,MAAMC,EAAOD,EAAEE,OAAOC,MAAM,GAG5B,GAAIF,EAAKG,KAFO,QAGdtS,EAAAA,EAAAA,GAAU,QAASiS,GAAe,QAIpC,GAAIE,EAAKI,KAAKpU,SAAS,GAADkO,OAAIwF,EAAM,MAAM,CACpC,MAAMW,EAAS,IAAIC,WACnBD,EAAOE,cAAcP,GACrBK,EAAOG,OAAS,KCrBS1H,OAC7B2H,EACAd,EACApO,EACAqO,EACAjD,EACAkD,MAEAhS,EAAAA,EAAAA,GAAU,OAAQgS,GAAc,GAChC,MAAMjD,EACJnS,EAAAA,EAAAA,IAAY,SAAWL,KAAKC,MAAMI,EAAAA,EAAAA,IAAY,UACzCgQ,EAAAA,EAAAA,MACL,OAAO,GAADP,OACHQ,0BACH,EACA,CACEgG,OAAQC,SAAS/D,EAAS9F,IAC1B8J,YAAaH,IAGd1F,MAAM8F,IACkB,IAAnBA,EAAE5F,KAAK6F,SACTxW,aAAayW,WAAW,aACxBzW,aAAamP,QACX,YACArP,KAAKgI,UAAUqO,KAEjB5S,EAAAA,EAAAA,GAAU,UAAW+R,GAAkB,GAAO7E,MAC5C,KACE4E,GAAqB9L,IAAUA,IAC/B8I,GAAoB9I,IAAUA,IAC9BqJ,SAAS8D,QAAQ,MAIrBnT,EAAAA,EAAAA,GAAU,QAASgT,EAAE5F,KAAKgG,YAAY,EACxC,IAGDC,OAAO9H,GAAQE,QAAQE,MAAMJ,IAAK,EDjB/B+H,CACEd,EAAOe,OACPzB,EACApO,EACAqO,EACAjD,EACAkD,EACD,EAEHQ,EAAOgB,QAAU,KACf/H,QAAQC,IAAI,aAAa,CAE7B,MACE1L,EAAAA,EAAAA,GACE,QACA,sIACA,EAEJ,EEyDJ,GAzFsBsF,IAIf,IAJgB,oBACrBwM,EAAmB,mBACnBhD,EAAkB,YAClBxS,GACDgJ,EACC,MAAMmO,EAAe5R,EAAAA,OAAa,MAE5BkQ,IADkBpO,EAAAA,EAAAA,YAAWC,EAAAA,IACV9G,EAAAA,EAAAA,GACvB,2CAEIkV,GAAelV,EAAAA,EAAAA,GACnB,0CAEI4W,GAAuB5W,EAAAA,EAAAA,GAC3B,6CAGI6W,EAAY,8BACP,OAAXrX,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,kBAEvB,OACEgC,EAAAA,EAAAA,MAACuB,EAAAA,SAAc,CAAAxB,SAAA,EACbP,EAAAA,EAAAA,KAAA,SACEiK,SAAW6J,IACThC,GACE,QACAE,EACApO,EACAqO,EACAjD,EACAkD,EACA0B,EAPF9B,CAQEgC,GACFA,EAAMxB,OAAOhC,MAAQ,IAAI,EAE3BmC,KAAK,OACLsB,OAAO,qDACPC,QAAM,EACNxK,IAAKmK,KAGPnT,EAAAA,EAAAA,MAAA,QACEP,QAASA,IAAM0T,EAAa1L,QAAQgM,QACpC5T,MAAO,CACLoC,QAAS,OACTiN,cAAe,cACf5M,WAAY,SACZC,IAAK,OACL3B,OAAQ,WACRb,SAAA,EAEAP,EAAAA,EAAAA,KAAA,OACEW,IAAKkT,EACLjT,KAAK5D,EAAAA,EAAAA,GACH,0CAEF+D,MAAM,OACNE,OAAO,OACPZ,MAAO,CACLc,WAAY0S,EACZzS,OAAQ,UACRC,mBAAoB,gBACpBC,eAAgB,YAGrBtE,EAAAA,EAAAA,GAAY,2CAoBA,E,gBC7Fd,MC4CP,GA5C4BwI,IAAoB,IAAnB,YAAChJ,GAAYgJ,EACxC,MAAM0O,GAAuBlX,EAAAA,EAAAA,GAC3B,2CAIImX,EAAQ,8BACH,OAAX3X,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,cAEvB,OACEwB,EAAAA,EAAAA,KAAC+B,EAAAA,SAAc,CAAAxB,UACbC,EAAAA,EAAAA,MAAA,QACEP,QAASA,KDZYkL,YAG3BjL,EAAAA,EAAAA,GAAU,UAAWgU,GAAsB,IACpCpH,EAAAA,EAAAA,MACL,OAAO,GAADP,OACHQ,oBACH,EACA,CACEqH,gBAAgB,IAElBhH,MAAMC,IACwB,IAA1BA,EAASC,KAAK6F,SAChBkB,EAAAA,GAAAA,GACEhH,EAASC,KAAKC,KACd,SACA,yBAGFrN,EAAAA,EAAAA,GAAU,QAASmN,EAASC,KAAKgG,YAAY,EAC/C,GACA,ECRMgB,CAAcJ,EAAqB,EAErC7T,MAAO,CACLoC,QAAS,OACTiN,cAAe,cACf5M,WAAY,SACZC,IAAK,OACL3B,OAAQ,WACRb,SAAA,EAGVP,EAAAA,EAAAA,KAAA,OACYW,IAAKwT,EACLvT,KAAK5D,EAAAA,EAAAA,GAAY,yCACjB+D,MAAM,OACNE,OAAO,OACPZ,MAAO,CACLc,WAAYgT,EACZ/S,OAAQ,UACRC,mBAAoB,gBACpBC,eAAgB,YAKrBtE,EAAAA,EAAAA,GAAY,6CAEA,ECMrB,GAhD8BwI,IAA6B,IAADC,EAAA,IAA3B,MAAExJ,EAAK,YAAE8C,GAAayG,EACnD,MAAMvG,EAAoC,QAA5BwG,GAAG5B,EAAAA,EAAAA,YAAWC,EAAAA,UAAc,IAAA2B,OAAA,EAAzBA,EAA2BxG,SAgB5C,OACEe,EAAAA,EAAAA,KAAC+B,EAAAA,SAAc,CAAAxB,SACP,OAALtE,QAAK,IAALA,OAAK,EAALA,EAAOuD,KACN,CAACJ,EAAQW,IAjBSwU,EAACnV,EAAQgQ,KAC/B,MAAMoF,EAAiBpF,EAAM5P,KAAKC,GAChCA,EAAKC,gBAGD+U,EAAcrF,EAAM5P,KAAKC,GAAI,QAAA8M,OAAa9M,KAEhD,OACEL,EAAOsV,UACPF,EAAenW,SAASe,EAAOX,MAAMiB,gBACrC+U,EAAYpW,SAASe,EAAOX,MAAM,EAQ9B8V,CAAgBnV,EAAQL,KACtBiB,EAAAA,EAAAA,KAAC+B,EAAAA,SAAc,CAAAxB,UACbC,EAAAA,EAAAA,MAAA,QACEP,QAASA,IAAMhB,EAASG,EAAOX,OAC/B4B,MAAO,CACLoC,QAAS,OACTiN,cAAe,cACf5M,WAAY,SACZC,IAAK,OACL3B,OAAQ,WACRb,SAAA,CAEDwB,EAAAA,aAAmB3C,EAAOb,QAAS,CAClC+H,GAAI,CACFpF,SAAU,oBAEZ+P,MAAO,gBAER7R,EAAOV,UAjBSqB,MAsBZ,ECoIrB,GA9J8ByF,IAKvB,IAADC,EAAAoJ,EAAA8F,EAAAC,EAAAC,EAAA,IALyB,cAC7BnD,EAAa,oBACbM,EAAmB,mBACnBhD,EAAkB,YAClB9S,GACDsJ,EACC,MAAMsP,EAAY5Y,EAAc,KAE1B6J,EAAqC,QAA5BN,GAAG5B,EAAAA,EAAAA,YAAWC,EAAAA,UAAc,IAAA2B,OAAA,EAAzBA,EAA2BM,UACvC9G,EAAoC,QAA5B4P,GAAGhL,EAAAA,EAAAA,YAAWC,EAAAA,UAAc,IAAA+K,OAAA,EAAzBA,EAA2B5P,SAGtC8V,GAAW/X,EAAAA,EAAAA,GAAY,2BACvBgY,GAAahY,EAAAA,EAAAA,GACjB,6BAGIiY,EAAOnY,EAAAA,EAAAA,IAAY,QACrBL,KAAKC,MAAMI,EAAAA,EAAAA,IAAY,SACvB,KAEEoY,GACA,OAAJD,QAAI,IAAJA,GAAgB,QAAZN,EAAJM,EAAM9W,kBAAU,IAAAwW,GAEf,QAFeC,EAAhBD,EAAkBnV,KAAKC,GACjB,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMC,uBACP,IAAAkV,OAFG,EAAJA,EAEGvW,SAAS,aACiB,KAAzB,OAAJ4W,QAAI,IAAJA,GAAgB,QAAZJ,EAAJI,EAAM9W,kBAAU,IAAA0W,OAAZ,EAAJA,EAAkBvW,SAGTjC,IAASC,EAAAA,EAAAA,IAAQC,EAAAA,GACtBC,EACJH,GAASI,KAAKC,MAAMC,aAAaC,QAAQ,UAErCuY,EAAS,8BACJ,OAAX3Y,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,eACjB4W,EAAY,8BACP,OAAX5Y,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,kBACjBmT,EAAQ,8BACH,OAAXnV,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,cAGjB6W,GAAeC,EAAAA,EAAAA,cAAY,IC3DRC,EACzBL,EACAnP,EACA7J,EACA4Y,EACAtY,KAGA,MAAMgZ,EAAW,CACfC,iBAAiBzY,EAAAA,EAAAA,GAAY,0CAC7B0Y,YAAY1Y,EAAAA,EAAAA,GAAY,6CACxB2Y,iBAAiB3Y,EAAAA,EAAAA,GAAY,kCAC7B4Y,cAAc5Y,EAAAA,EAAAA,GAAY,kCAC1B6Y,gBAAgB7Y,EAAAA,EAAAA,GAAY,kCAC5B8Y,eAAe9Y,EAAAA,EAAAA,GAAY,+BAIvBX,EAAQ,CACZ0Z,oBACE,8BAA0C,OAAXvZ,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,8BACxDkX,WACE,8BAA0C,OAAXlZ,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,mBACxDqX,eACE,8BAA0C,OAAXrZ,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,uBACxDwX,UACE,8BAA0C,OAAXxZ,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,kBACxDyX,OACE,8BAA0C,OAAXzZ,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,eACxD0X,WACE,8BAA0C,OAAX1Z,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,mBAqH1D,MAlHc,CACZ,CACED,SACEyB,EAAAA,EAAAA,KAAA,OACEW,IAAKtE,EAAM0Z,oBACXnV,IAAK4U,EAASC,gBACd1U,MAAM,OACNE,OAAO,OACPZ,MAAO,CACLc,WAAY9E,EAAM0Z,oBAClB3U,OAAQ,UACRC,mBAAoB,gBACpBC,eAAgB,WAItB7C,MAAOqW,EAAY,4BAA8B,uBACjDpW,MAAO8W,EAASC,iBAElB,CACElX,SACEyB,EAAAA,EAAAA,KAAA,OACEW,IAAKtE,EAAMqZ,WACX9U,IAAK4U,EAASE,WACd3U,MAAM,OACNE,OAAO,OACPZ,MAAO,CACLc,WAAY9E,EAAMqZ,WAClBtU,OAAQ,UACRC,mBAAoB,gBACpBC,eAAgB,WAItB7C,MAAOqW,EAAY,yBAA2B,oBAC9CpW,MAAO8W,EAASE,YAElB,CACEnX,SACEyB,EAAAA,EAAAA,KAAA,OACEW,IAAKtE,EAAM6Z,WACXtV,IAAK4U,EAASG,gBACd5U,MAAM,OACNE,OAAO,OACPZ,MAAO,CACLc,WAAY9E,EAAM6Z,WAClB9U,OAAQ,UACRC,mBAAoB,gBACpBC,eAAgB,WAItB7C,MAAOqW,EAAY,wBAA0B,mBAC7CpW,MAAO8W,EAASG,kBAET,OAAT5P,QAAS,IAATA,OAAS,EAATA,EAAW1H,SAAS,aAAc,CAChCE,SACEyB,EAAAA,EAAAA,KAAA,OACEW,IAAKtE,EAAM4Z,OACXrV,IAAK4U,EAASI,aACd7U,MAAM,OACNE,OAAO,OACPZ,MAAO,CACLc,WAAY9E,EAAM4Z,OAClB7U,OAAQ,UACRC,mBAAoB,gBACpBC,eAAgB,WAItB7C,MAAOqW,EAAY,eAAiB,UACpCpW,MAAO8W,EAASI,aAChBlB,UAAU,GAEZ,CACEnW,SACEyB,EAAAA,EAAAA,KAAA,OACEW,IAAKtE,EAAMwZ,eACXjV,IAAK4U,EAASK,eACd9U,MAAM,OACNE,OAAO,OACPZ,MAAO,CACLc,WAAY9E,EAAMwZ,eAClBzU,OAAQ,UACRC,mBAAoB,gBACpBC,eAAgB,WAItB7C,MAAOqW,EAAY,uBAAyB,kBAC5CpW,MAAO8W,EAASK,iBAGT,OAAT9P,QAAS,IAATA,OAAS,EAATA,EAAW1H,SAAS,uBAAwB,CAC1CE,SACEyB,EAAAA,EAAAA,KAAA,OACEW,IAAKtE,EAAM2Z,UACXpV,IAAK4U,EAASM,cACd/U,MAAM,OACNE,OAAO,OACPZ,MAAO,CACLc,WAAY9E,EAAM2Z,UAClB5U,OAAQ,UACRC,mBAAoB,gBACpBC,eAAgB,WAItB7C,MAAOqW,EAAY,yBAA2B,oBAC9CpW,MAAO8W,EAASM,gBAKPnX,QAAQ+P,GAASA,GAAK,EDxFE6G,CACnCL,EACAnP,EACA7J,EACA4Y,EACAtY,IACA,CAAC0Y,EACDnP,EACA7J,EACA4Y,EACAtY,EACAG,aAAaC,QAAQ,mBAGvB,OACE4D,EAAAA,EAAAA,MAACuB,EAAAA,SAAc,CAAAxB,SAAA,EACbP,EAAAA,EAAAA,KAACmW,GAAAA,GAAW,KACZnW,EAAAA,EAAAA,KAAA,OACEK,MAAO,CACLU,MAAO,OACPkQ,MAAM,GAAD1E,OAAK2E,GAAAA,EAAAA,aAAwB,eAClCtB,UAAW1T,EAAc,KAAO,UAAY,IAC5CqE,UAEFC,EAAAA,EAAAA,MAAC2F,EAAAA,EAAK,CAACpD,IAAI,MAAKxC,SAAA,EACdP,EAAAA,EAAAA,KAACoW,GAAa,CACZpE,oBAAqBA,EACrBhD,mBAAoBA,EACpBxS,YAAaA,KAEfwD,EAAAA,EAAAA,KAACqW,GAAqB,CACpBpa,MAAOoZ,IACPtW,YAAagH,KAwBf/F,EAAAA,EAAAA,KAACsW,GAAmB,CAAC9Z,YAAaA,KAClCgE,EAAAA,EAAAA,MAAA,QACEP,QAASA,IACPhB,EAAS6V,EAAY,cAAgB,UAEvCzU,MAAO,CACLoC,QAAS,OACTiN,cAAe,cACf5M,WAAY,SACZC,IAAK,OACL3B,OAAQ,WACRb,SAAA,EAEFP,EAAAA,EAAAA,KAAA,OACAW,IAAKwU,EACLvU,IAAKmU,EACLhU,MAAM,OACNE,OAAO,OACPZ,MAAO,CACLc,WAAYgU,EACZ/T,OAAQ,UACRC,mBAAoB,gBACpBC,eAAgB,WAGjByT,MAEHvU,EAAAA,EAAAA,MAAA,QACEP,QAASA,IACPhB,EACE6V,EAAY,kBAAoB,cAGpCzU,MAAO,CACLoC,QAAS,OACTiN,cAAe,cACf5M,WAAY,SACZC,IAAK,OACL3B,OAAQ,WACRb,SAAA,EAEAP,EAAAA,EAAAA,KAAA,OACFW,IAAKyU,EACLxU,IAAKoU,EACLjU,MAAM,OACNE,OAAO,OACPZ,MAAO,CACLc,WAAYiU,EACZhU,OAAQ,UACRC,mBAAoB,gBACpBC,eAAgB,WAGjB0T,MAEHhV,EAAAA,EAAAA,KAACuW,GAAY,CAAC7E,cAAeA,EAAeC,MAAOA,WAGxC,EE5GrB,GA9DsBnM,IAKf,IALgB,YACrBtJ,EAAW,MACXmD,EAAK,MACLkJ,EAAQ,GAAE,MACViO,EAAQ,IACThR,EACC,MAAMvG,GAAWC,EAAAA,EAAAA,MAiBjB,OACEc,EAAAA,EAAAA,KAAC+B,EAAAA,SAAc,CAAAxB,UACbP,EAAAA,EAAAA,KAAA,OACEK,MAAO,CACLU,MAAO,OACPkQ,MAAM,GAAD1E,OAAK2E,GAAAA,EAAAA,aAAwB,eAClCtB,UAAW1T,EAAc,KAAO,UAAY,GAC5Cua,UAAWva,EAAc,KAAO,OAAS,IACzCqE,UAEFC,EAAAA,EAAAA,MAAA,QACEP,QAASA,IAAMhB,EAAS,GAADsN,OAAIlN,IAC3BgB,MAAO,CACLoC,QAAS,OACTiN,cAAe,cACf5M,WAAY,SACZC,IAAK,OACL3B,OAAQ,WACRb,SAAA,EAEFP,EAAAA,EAAAA,KAAA,OACEW,IAAK4H,EACL3H,IAAK4V,EACLzV,MAAM,OACNE,OAAO,OACPZ,MAAO,CACLc,WAAYoH,EACZnH,OAAQ,UACRC,mBAAoB,gBACpBC,eAAgB,YAGpBtB,EAAAA,EAAAA,KAAA,KAAAO,SAAIiW,UAGO,E,gBCpDrB,MA4CA,GA5C0ChR,IAInC,IAADpJ,EAAAqJ,EAAAoJ,EAAA,IAJqC,YACzC3S,EAAW,SACXwa,EAAQ,SACRC,GACDnR,EAEG1I,EAAAA,EAAAA,IAAY,UACmB,QADZV,EACnBK,KAAKC,MAAMI,EAAAA,EAAAA,IAAY,gBAAQ,IAAAV,GAA/BA,EAAiC6S,UAER,QADRxJ,GACjB5B,EAAAA,EAAAA,YAAWC,EAAAA,UAAc,IAAA2B,GAAzBA,EAA2BtJ,cAJ7B,MAKMF,EAAQ0a,EACVC,EAAY1a,EAAa,GACzBsR,EAAarR,GAEX4C,EAAuC,QAA5B8P,GAAGhL,EAAAA,EAAAA,YAAWC,EAAAA,UAAc,IAAA+K,OAAA,EAAzBA,EAA2B9I,UAE/C,OACEvF,EAAAA,EAAAA,MAACuB,EAAAA,SAAc,CAAAxB,SAAA,EACbP,EAAAA,EAAAA,KAACmW,GAAAA,GAAW,KACZnW,EAAAA,EAAAA,KAACmG,EAAAA,EAAK,CAACpD,IAAI,QAAOxC,SACV,OAALtE,QAAK,IAALA,OAAK,EAALA,EAAOuD,KACN,CAACJ,EAAQW,KAAC,IAAA8B,EAAAC,EAAA,QACI,OAAX/C,QAAW,IAAXA,GAEA,QAFW8C,EAAX9C,EAAaS,KAAI,CAACC,EAAMoX,IACvBpX,EAAKC,uBACN,IAAAmC,OAFW,EAAXA,EAEExD,SAASe,EAAOX,MAAMiB,kBACZ,OAAXX,QAAW,IAAXA,GAEC,QAFU+C,EAAX/C,EAAaS,KAAKC,GAChBA,EAAKC,cAAcC,UAAU,YAC9B,IAAAmC,OAFU,EAAXA,EAEGzD,SAASe,EAAOX,MAAMiB,mBAC1BgX,IACU,OAANtX,QAAM,IAANA,GAAAA,EAAQvC,WACH,OAANuC,QAAM,IAANA,OAAM,EAANA,EAAQvC,aACVmD,EAAAA,EAAAA,KAAC8W,GAAa,CACZN,MAAOpX,EAAOV,MACdW,MAAOD,EAAOX,MACd8J,MAAOnJ,EAAOb,UACTwY,EAAAA,GAAAA,KAER,QAGQ,ECsBrB,GAjEqCC,CACnCL,EACAza,KACI,IAADE,EAAAqJ,EAAAoJ,EACH,MAAMoI,GAAkBja,EAAAA,EAAAA,GACtB,+CAGI0H,GAAgB1H,EAAAA,EAAAA,GACpB,oCAGI2H,GAAe3H,EAAAA,EAAAA,GACnB,qCAGIiS,EACJnS,EAAAA,EAAAA,IAAY,UACmB,QADZV,EACnBK,KAAKC,MAAMI,EAAAA,EAAAA,IAAY,gBAAQ,IAAAV,OAAA,EAA/BA,EAAiC6S,UAC7B9S,EACqB,QADRsJ,GACjB5B,EAAAA,EAAAA,YAAWC,EAAAA,UAAc,IAAA2B,OAAA,EAAzBA,EAA2BtJ,cACvBF,EAAQ0a,EACVC,EAAY1a,EAAa,GACzBsR,EAAarR,GACX4C,EAAuC,QAA5B8P,GAAGhL,EAAAA,EAAAA,YAAWC,EAAAA,UAAc,IAAA+K,OAAA,EAAzBA,EAA2B9I,UAEzCnB,EACJ3I,IACK,OAALA,QAAK,IAALA,OAAK,EAALA,EAAO0C,QACL,CAACS,EAAQW,KAAC,IAAA8B,EAAAC,EAAA,QACI,OAAX/C,QAAW,IAAXA,GAEA,QAFW8C,EAAX9C,EAAaS,KAAKC,GACjBA,EAAKC,uBACN,IAAAmC,OAFW,EAAXA,EAEExD,SAASe,EAAOX,MAAMiB,kBACZ,OAAXX,QAAW,IAAXA,GAEC,QAFU+C,EAAX/C,EAAaS,KAAKC,GAChBA,EAAKC,cAAcC,UAAU,YAC9B,IAAAmC,OAFU,EAAXA,EAEGzD,SAASe,EAAOX,MAAMiB,oBACpB,OAANN,QAAM,IAANA,GAAAA,EAAQvC,UAAS,KAElBwI,EACJpJ,IACK,OAALA,QAAK,IAALA,OAAK,EAALA,EAAO0C,QACL,CAACS,EAAQW,KAAC,IAAAiD,EAAAC,EAAA,QACI,OAAXlE,QAAW,IAAXA,GAEA,QAFWiE,EAAXjE,EAAaS,KAAKC,GACjBA,EAAKC,uBACN,IAAAsD,OAFW,EAAXA,EAEE3E,SAASe,EAAOX,MAAMiB,kBACZ,OAAXX,QAAW,IAAXA,GAEC,QAFUkE,EAAXlE,EAAaS,KAAKC,GAChBA,EAAKC,cAAcC,UAAU,YAC9B,IAAAsD,OAFU,EAAXA,EAEG5E,SAASe,EAAOX,MAAMiB,mBACrB,OAANN,QAAM,IAANA,OAAM,EAANA,EAAQvC,UAAS,KAIvB,MAAO,CACLoa,kBACAvS,gBACAC,eACAsK,WACA9S,gBACAF,QACA8C,cACA6F,cACAS,eACD,E,+DC5DH,MAgDA,GAhDyBG,IAMlB,IANmB,SACxBjF,EAAQ,kBACR2W,EAAiB,sBACjBC,EAAqB,SACrBC,EAAW,GAAE,MACbC,EAAQ,IACT7R,EACC,OACExF,EAAAA,EAAAA,KAAC+B,EAAAA,SAAc,CAAAxB,UACbC,EAAAA,EAAAA,MAAC8W,GAAAA,EAAS,CACRC,SAAUL,IAAsBE,EAChCnN,SAAUkN,EAAsBC,GAAU7W,SAAA,EAE1CP,EAAAA,EAAAA,KAACwX,GAAAA,EAAgB,CACflR,GAAI,CACFI,UAAW,OAEb+Q,YACEzX,EAAAA,EAAAA,KAAC0X,GAAAA,EAAa,CACZpR,GAAI,CACFiL,KAAK,GAADhF,OAAK2E,GAAAA,EAAAA,aAAwB,gBAEnChQ,SAAS,UAGb,mBAAAqL,OAAkB6K,EAAQ,YAC1BO,GAAE,GAAApL,OAAK6K,EAAQ,WAAU7W,UAEzBP,EAAAA,EAAAA,KAAC4X,GAAAA,EAAU,CACTtR,GAAI,CACF2K,MAAM,GAAD1E,OAAK2E,GAAAA,EAAAA,aAAwB,gBAClC3Q,SAED8W,OAGLrX,EAAAA,EAAAA,KAAC6X,GAAAA,EAAgB,CACfvR,GAAI,CACFmQ,UAAW,eACXlW,SAEDA,QAGU,ECerB,GA9DuBiF,IAKhB,IALiB,MACtBnG,EAAK,MACLkJ,EAAK,MACLiO,EAAQ,GAAE,KACVsB,GACDtS,EACC,MAAMtJ,GAAcmT,EAAAA,EAAAA,KACdpQ,GAAWC,EAAAA,EAAAA,MACX6Y,GAAc/a,EAAAA,EAAAA,GAAYwZ,GAEhC,OACExW,EAAAA,EAAAA,KAAC+B,EAAAA,SAAc,CAAAxB,UACbP,EAAAA,EAAAA,KAAA,OACEK,MAAO,CACLU,MAAO,OACPkQ,MAAM,GAAD1E,OAAK2E,GAAAA,EAAAA,aAAwB,eAClCtB,UAAW1T,EAAc,KAAO,UAAY,GAC5Cua,UAAWva,EAAc,KAAO,OAAS,IACzCqE,UAEFC,EAAAA,EAAAA,MAAA,QACEP,QAASA,IAAMhB,EAAS,GAADsN,OAAIlN,IAC3BgB,MAAO,CACLoC,QAAS,OACTiN,cAAe,cACf5M,WAAY,SACZC,IAAK,OACL3B,OAAQ,UACR0B,WAAY,UACZvC,SAAA,CAEDgI,GACCvI,EAAAA,EAAAA,KAAA,OACEW,IAAK4H,EACL3H,IAAKmX,EACLhX,MAAM,OACNE,OAAO,OACPZ,MAAO,CACLc,WAAYoH,EACZnH,OAAQ,UACRC,mBAAoB,gBACpBC,eAAgB,WAIpBwW,GAGF9X,EAAAA,EAAAA,KAAA,KACEK,MAAO,CACLa,SAAU,mBACV+P,MAAM,GAAD1E,OAAK2E,GAAAA,EAAAA,aAAwB,gBAClC3Q,SAEDwX,UAIQ,E,uBC3CrB,MAsUA,GAtU8CvS,IAMvC,IAADC,EAAA,IANyC,YAC7CvJ,EAAW,cACXwV,EAAa,oBACbM,EAAmB,mBACnBhD,EAAkB,SAClB2H,GACDnR,EACC,MAAOnJ,IAASC,EAAAA,EAAAA,IAAQC,EAAAA,GAClBC,EACJH,GAASI,KAAKC,MAAMC,aAAaC,QAAQ,WAEpCsa,EAAmBc,GACxBjW,EAAAA,UAAe,GACXoV,EACHc,GAAU,CAACnE,EAAOoE,KACjBF,IAAqBE,GAAaD,EAAc,GAG9C,gBACJhB,EAAe,cACfvS,EAAa,aACbC,EAAY,YACZC,EAAW,aACXS,GACE2R,GAA6BL,EAAUza,GAErCic,GAAgBnb,EAAAA,EAAAA,GACpB,uCAGI8X,EAAY5Y,EAAc,KAE1B0H,GAAkBC,EAAAA,EAAAA,YAAWC,EAAAA,GAC7BsU,GAA0BC,EAAAA,GAAAA,GAC9B,6BAEItZ,EAA6B,OAAf6E,QAAe,IAAfA,OAAe,EAAfA,EAAiB7E,YAE/B8G,GAAqB7I,EAAAA,EAAAA,GACzB,yCAGIsb,GAAatb,EAAAA,EAAAA,GAAY,wBACzB+I,EAAqC,QAA5BN,GAAG5B,EAAAA,EAAAA,YAAWC,EAAAA,UAAc,IAAA2B,OAAA,EAAzBA,EAA2BM,UAEvCwS,EACJ,8BACW,OAAX/b,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,iBACnBga,EACJ,8BACW,OAAXhc,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,oBACnBia,EACJ,8BACW,OAAXjc,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UAAU,iBAIzB,OACEwB,EAAAA,EAAAA,KAAC+B,EAAAA,SAAc,CAAAxB,UACbC,EAAAA,EAAAA,MAAA,OACEH,MAAO,CACLqY,IAAK,WAEPjY,UAAU,iCAAgCF,SAAA,EAE1CP,EAAAA,EAAAA,KAAC2Y,GAAgB,CACfvB,SAAS,SACTD,sBAAuBA,EACvBD,kBAAmBA,EACnBG,MAAOJ,EAAgB1W,UAEvBP,EAAAA,EAAAA,KAAC4Y,GAAqB,CACpBlH,cAAeA,EACfM,oBAAqBA,EACrBhD,mBAAoBA,EACpB9S,YAAaA,OAIJ,OAAZmJ,QAAY,IAAZA,OAAY,EAAZA,EAAc/G,QAAS,GACtB0B,EAAAA,EAAAA,KAAC2Y,GAAgB,CACfvB,SAAS,SACTD,sBAAuBA,EACvBD,kBAAmBA,EACnBG,MAAO1S,EAAapE,UAEpBP,EAAAA,EAAAA,KAAC6Y,GAAiC,CAChC3c,YAAaA,EACbya,SAAUA,OAId3W,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,IAGuB,KAAb,OAAXoD,QAAW,IAAXA,OAAW,EAAXA,EAAatG,SACZ0B,EAAAA,EAAAA,KAAC2Y,GAAgB,CACfvB,SAAS,SACTD,sBAAuBA,EACvBD,kBAAmBA,EACnBG,MAAO3S,EAAcnE,UAErBP,EAAAA,EAAAA,KAAC6Y,GAAiC,CAChC3c,YAAaA,EACbwa,UAAU,EACVC,SAAUA,OAId3W,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,IAGuB,KAAb,OAAXoD,QAAW,IAAXA,OAAW,EAAXA,EAAatG,SACZ0B,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,CAAAjB,SACY,OAATwF,QAAS,IAATA,GAAAA,EAAW1H,SAAS,oBACrB0H,EAAU1H,SAAS,eACjB2B,EAAAA,EAAAA,KAAC2Y,GAAgB,CACfvB,SAAS,SACTD,sBACEA,EAEFD,kBAAmBA,EACnBG,MAAOxR,EAAmBtF,UAE1BC,EAAAA,EAAAA,MAAC2F,EAAAA,EAAK,CAACpD,IAAI,MAAKxC,SAAA,CACJ,OAATwF,QAAS,IAATA,GAAAA,EAAW1H,SACV,oBAEA2B,EAAAA,EAAAA,KAAC8Y,GAAc,CACbzZ,MACEyV,EACI,uBACA,kBAEN0B,MACE,mCAEFjO,MACE,8BACW,OAAX/L,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UACX,0BAKNwB,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,IAGQ,OAATuE,QAAS,IAATA,GAAAA,EAAW1H,SAAS,gBACnB2B,EAAAA,EAAAA,KAAC8Y,GAAc,CACbzZ,MACEyV,EACI,mBACA,cAEN0B,MAAO,wBACPjO,MACE,8BACW,OAAX/L,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UACX,sBAKNwB,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,UAKNxB,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,OAIJxB,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,IAGuB,KAAb,OAAXoD,QAAW,IAAXA,OAAW,EAAXA,EAAatG,SACZ0B,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,CAAAjB,SACY,OAATwF,QAAS,IAATA,GAAAA,EAAW1H,SAAS,SACrB0H,EAAU1H,SAAS,UACjB2B,EAAAA,EAAAA,KAAC2Y,GAAgB,CACfvB,SAAS,SACTD,sBACEA,EAEFD,kBAAmBA,EACnBG,MAAOiB,EAAW/X,UAElBC,EAAAA,EAAAA,MAAC2F,EAAAA,EAAK,CAACpD,IAAI,MAAKxC,SAAA,CACJ,OAATwF,QAAS,IAATA,GAAAA,EAAW1H,SAAS,SACnB2B,EAAAA,EAAAA,KAAC8Y,GAAc,CACbzZ,MACEyV,EAAY,YAAc,OAE5B0B,MAAO,+BACPjO,MACE,8BACW,OAAX/L,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UACX,yBAKNwB,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,IAEQ,OAATuE,QAAS,IAATA,GAAAA,EAAW1H,SAAS,UACnB2B,EAAAA,EAAAA,KAAC8Y,GAAc,CACbzZ,MACEyV,EAAY,aAAe,QAE7B0B,MAAO,4BACPjO,MACE,8BACW,OAAX/L,QAAW,IAAXA,OAAW,EAAXA,EAAagC,UACX,iCAKNwB,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,UAKNxB,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,OAIJxB,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,KAGFxB,EAAAA,EAAAA,KAAC2Y,GAAgB,CACfvB,SAAS,SACTD,sBAAuBA,EACvBD,kBAAmBA,EACnBG,MAAOc,EAAc5X,UAErBC,EAAAA,EAAAA,MAAC2F,EAAAA,EAAK,CAACpD,IAAI,MAAKxC,SAAA,CACb6X,GACU,OAAXrZ,QAAW,IAAXA,GAAAA,EAAaV,SAAS,UACpBmC,EAAAA,EAAAA,MAAAgB,EAAAA,SAAA,CAAAjB,SAAA,EACEP,EAAAA,EAAAA,KAAC8Y,GAAc,CACbzZ,MACEyV,EACI,uBACA,kBAEN0B,MACE,uCAEFsB,MACE9X,EAAAA,EAAAA,KAAA,OACEW,IAAK4X,EACL3X,IAAK,GACLG,MAAM,OACNE,OAAO,OACPZ,MAAO,CACLc,WAAYoX,EACZnX,OAAQ,UACRC,mBAAoB,gBACpBC,eAAgB,cAMxBtB,EAAAA,EAAAA,KAAC8Y,GAAc,CACbzZ,MACEyV,EACI,wBACA,mBAEN0B,MACE,6CAEFsB,MACE9X,EAAAA,EAAAA,KAAA,OACEW,IAAK6X,EACL5X,IAAK,GACLG,MAAM,OACNE,OAAO,OACPZ,MAAO,CACLc,WAAYqX,EACZpX,OAAQ,UACRC,mBAAoB,gBACpBC,eAAgB,iBAO1BtB,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,KAGFxB,EAAAA,EAAAA,KAAC8Y,GAAc,CACbzZ,MACEyV,EACI,wBACA,mBAEN0B,MACE,6CAEFsB,MACE9X,EAAAA,EAAAA,KAAA,OACEW,IAAK8X,EACL7X,IAAK,GACLG,MAAM,OACNE,OAAO,OACPZ,MAAO,CACLc,WAAYsX,EACZrX,OAAQ,UACRC,mBAAoB,gBACpBC,eAAgB,sBAQf,ECvPrB,GAzFuBkE,IAKhB,IALiB,aACtBuT,EAAY,cACZrH,EAAa,oBACbM,EAAmB,mBACnBhD,GACDxJ,EACC,MAAMtJ,GAAcmT,EAAAA,EAAAA,KAEpB,OACErP,EAAAA,EAAAA,KAAC+B,EAAAA,SAAc,CAAAxB,UACbC,EAAAA,EAAAA,MAACwY,EAAAA,GAAM,CACLC,QAAQ,aACRC,OAAO,QACPtQ,KAAMmQ,EACNI,QAAS,CAAEC,MAAO1Y,EAAAA,eAClB2Y,cAAY,EACZC,WAAY,CACVhT,GAAI,CACFnF,WAAW,GAADoL,OAAK2E,GAAAA,EAAAA,eAA0B,eACzCD,MAAM,GAAD1E,OAAK2E,GAAAA,EAAAA,aAAwB,eAClC5Q,OAAQ,WACRiZ,WAAW,aAADhN,OAAc2E,GAAAA,EAAAA,gBAE1B3Q,SAAA,EAEFP,EAAAA,EAAAA,KAAA,QACEK,MAAO,CACLuC,gBAAgBsO,GAAAA,EAAAA,aAChBD,MAAM,GAAD1E,OAAK2E,GAAAA,EAAAA,eAA0B,eACpC5G,SAAU,QACVvJ,MAAO,OACPyY,YAAa,OACb/J,WAAY,QAEdxP,QAASA,IAAMyR,GAAc,GAC7BjR,UAAU,mBAAkBF,UAE5BP,EAAAA,EAAAA,KAACyZ,EAAAA,EAAe,CACdnT,GAAI,CACFlF,OAAQ,UACRF,SAAU,mBACVoB,EAAG,eACHoX,EAAG,eACHzI,MAAM,GAAD1E,OAAK2E,GAAAA,EAAAA,eAA0B,qBAK1ClR,EAAAA,EAAAA,KAACwG,EAAAA,EAAS,CACRF,GAAI,CACFqT,GAAI,MACJ/I,GAAI,OACJrQ,UAEFC,EAAAA,EAAAA,MAAC2F,EAAAA,EAAK,CAACiK,QAAS,EAAE7P,SAAA,EAChBP,EAAAA,EAAAA,KAACmG,EAAAA,EAIC,CACAQ,QAAQ,IAAGpG,UAEXP,EAAAA,EAAAA,KAAC4Z,GAAiB,CAAClZ,OAAQA,OAG7BV,EAAAA,EAAAA,KAACmG,EAAAA,EAAK,CAAA5F,UACJP,EAAAA,EAAAA,KAAC6Z,GAAqC,CACpC3d,YAAaA,EACbwV,cAAeA,EACfM,oBAAqBA,EACrBhD,mBAAoBA,EACpB2H,UAAU,eAcL,E,+DC5FrB,MC+GA,GA5FuBmD,KAAO,IAADrU,EAC3B,MAEM2L,EACkC,OAAtCzU,aAAaC,QAAQ,cACrBH,KAAKC,MAAMC,aAAaC,QAAQ,eAM3B,CAAEoV,IAJWvV,KAAKC,MACvBC,aAAaC,QAAQ,WAGSN,EAAAA,EAAAA,IAAQN,KAEjC,CAAEgT,IAAsB1S,EAAAA,EAAAA,IAAQ4S,EAAAA,GAKjCwC,GAFqB,QADNjM,GACnB5B,EAAAA,EAAAA,YAAWC,EAAAA,UAAc,IAAA2B,OAAA,EAAzBA,EAA2BiM,eAESA,cAEhCf,OACoBpF,IAAxBzO,EAAAA,EAAAA,IAAY,SACZL,KAAKC,MAAMI,EAAAA,EAAAA,IAAY,SAEnBZ,GAAcmT,EAAAA,EAAAA,KAEpB,OACErP,EAAAA,EAAAA,KAAC+B,EAAAA,SAAc,CAAAxB,UACbP,EAAAA,EAAAA,KAACwG,EAAAA,EAAS,CACRF,GAAI,CACFgE,SAAU,WACVyP,UAAW,oBACXzX,EAAG,kBACHrB,OAAQ,SAERV,UAEFC,EAAAA,EAAAA,MAAC2F,EAAAA,EAAK,CAACG,GAAI,CAAEsK,GAAI,SAAY9N,WAAW,SAAQvC,SAAA,EAC9CP,EAAAA,EAAAA,KAAC0B,EAAAA,EAAiB,CAACC,SAAS3B,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,CAAAjB,UAEf,OAAT6Q,QAAS,IAATA,OAAS,EAATA,EAAW9S,QAAS,GACpB0B,EAAAA,EAAAA,KAAA,OACEW,IAAG,uBAAA4L,OAAyB6E,GAC5BxQ,IAAI,oDACJC,QAAQ,MACRE,MAAO,GACPE,OAAQ,GACRZ,MAAO,CAAEkC,aAAc,OAAO8O,OAAO,aAAD9E,OAAc2E,GAAAA,EAAAA,kBAGpDlR,EAAAA,EAAAA,KAACsR,GAAAA,EAAa,CACZhL,GAAI,CACFvF,MAAO,MACPE,OAAQ,WAKTW,YAAa,CAACwP,EAAUF,GAAAA,MAC/BlR,EAAAA,EAAAA,KAAA,KACEK,MAAO,CACL4Q,MAAM,GAAD1E,OAAK2E,GAAAA,EAAAA,cACV9K,UAAU,OACV7F,UAED0I,EAAAA,EAAAA,GAAwB,OAAR0H,QAAQ,IAARA,OAAQ,EAARA,EAAUa,aAE7BxR,EAAAA,EAAAA,KAACyR,GAAc,CAACd,SAAUA,KAE1B3Q,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,OACEK,MAAO,CACLmC,SAAU,QACVjC,UAIFP,EAAAA,EAAAA,KAACmG,EAAAA,EAAK,CAAA5F,UACJP,EAAAA,EAAAA,KAAC6Z,GAAqC,CACpC3d,YAAaA,EACbwV,cAAeA,EACfM,oBAAqBA,EACrBhD,mBAAoBA,cAMf,E,gBC1GrB,MC4KA,GAxJ8BxJ,IAGvB,IAADC,EAAAoJ,EAAAC,EAAAkL,EAAA5d,EAAA,IAHyB,cAC7BsV,EAAa,YACbxV,GACDsJ,EACC,MAAMyU,EAAmBA,KACvBvI,GAAexL,IAAUA,GAAK,EAI1B6S,GAFqC,QAA5BtT,GAAG5B,EAAAA,EAAAA,YAAWC,EAAAA,UAAc,IAAA2B,GAAzBA,EAA2BM,UAGlB,QADT8I,GAChBhL,EAAAA,EAAAA,YAAWC,EAAAA,UAAc,IAAA+K,OAAA,EAAzBA,EAA2BqL,mBAEvBC,EACqB,QADDrL,GACxBjL,EAAAA,EAAAA,YAAWC,EAAAA,UAAc,IAAAgL,OAAA,EAAzBA,EAA2BqL,qBASvBlc,GANqB,QADR+b,GACjBnW,EAAAA,EAAAA,YAAWC,EAAAA,UAAc,IAAAkW,GAAzBA,EAA2B7d,cAEhBqR,IAIM1Q,EAAAA,EAAAA,IAAY,SAE7BmB,IAAoC,QAA1B7B,EAAIK,KAAKC,MAAMuB,UAAW,IAAA7B,GAAtBA,EAAwB+B,YAQxC,OACE6B,EAAAA,EAAAA,KAACwG,EAAAA,EAAS,CACRF,GAAI,CACFgE,SAAUpO,EAAc,KAAO,WAAa,IAC5CqE,UAEFP,EAAAA,EAAAA,KAACmG,EAAAA,EAAK,CACJO,UAAU,MACV5D,WAAW,SACXsD,UAAWlK,EAAc,KAAO,IAAM,MACtCwG,eAAe,gBACf0X,SAAU,CAAEC,GAAI,SAAU9Z,UAE1BP,EAAAA,EAAAA,KAACsa,GAAAA,EAAM,CACLrJ,MAAO/U,EAAY,KAAK,iBAAiB,cACzCoK,GAAI,CACFvF,MACE7E,EAAc,KACVA,EAAc,KACZ,MACA,MACF,OACN+E,OAAQ/E,EAAc,KAAO,OAAS,UACtC+U,MAAM,GAAD1E,OAAI2E,GAAAA,EAAAA,aAAwB,eACjCqI,WAAW,aAADhN,OAAc2E,GAAAA,EAAAA,eACxB3Q,UAEFC,EAAAA,EAAAA,MAAC+Z,GAAAA,EAAO,CACNtB,QAAQ,QACR3S,GAAI,CACFzD,UAAW,mBACX6M,cACExT,EAAc,KACV,SACA,cACN+E,OACE/E,EAAc,KAAO,OAAS,UAChCqK,cACErK,EAAc,KACV,eACA,UACNwG,eAAgB,gBACfuO,MAAM,GAAD1E,OAAI2E,GAAAA,EAAAA,aAAwB,gBAClC3Q,SAAA,CAEDrE,EAAc,MACb8D,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,CAAAjB,UACEP,EAAAA,EAAAA,KAACwa,GAAAA,EAAU,CACTlU,GAAI,CAAE2K,MAAOC,GAAAA,EAAAA,gBACb,aAAW,OACXjR,QAASga,EAAiB1Z,UAE1BP,EAAAA,EAAAA,KAACya,GAAAA,EAAI,CACHnU,GAAI,CACFoU,GAAI,QACJtZ,OAAQ,UACRmQ,KAAK,GAADhF,OAAKrQ,EAAY,KAAKgV,GAAAA,EAAAA,aAAyBA,GAAAA,EAAAA,eAA0B,uBAMrF1Q,EAAAA,EAAAA,MAAC2F,EAAAA,EAAK,CAAA5F,SAAA,EACJP,EAAAA,EAAAA,KAAC8Z,GAAc,KAsBf9Z,EAAAA,EAAAA,KAAC2a,GAAAA,EAAa,CACZ5B,aAAcA,EACdrH,cAAeyI,QAKrBna,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,CAAAjB,SACGrE,EAAc,MACb8D,EAAAA,EAAAA,KAACwa,GAAAA,EAAU,CACTlU,GAAI,CACF2K,MAAOC,GAAAA,EAAAA,gBAET,aAAW,OACXjR,QAASga,EAAiB1Z,UAE1BP,EAAAA,EAAAA,KAAC4a,GAAAA,EAAM,CACLtU,GAAI,CACFoU,GAAI,QACJtZ,OAAQ,UACRmQ,KAAK,GAADhF,OAAK2E,GAAAA,EAAAA,eAA0B,qBAKzClR,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,cAMA,E,SC1JhB,MAyHA,GAzHsBgE,IAA6B,IAADpJ,EAAA,IAA3B,mBAAE4S,GAAoBxJ,EAC3C,MAAMtJ,GAAcmT,EAAAA,EAAAA,MAEbwL,EAAkB7I,IACvB1V,EAAAA,EAAAA,IAAQN,IACH8e,EAAaC,IAAkBnV,EAAAA,EAAAA,WAAS,GACzChC,GAAkBC,EAAAA,EAAAA,YAAWC,EAAAA,GAC7BiV,EAAenV,EAAgBmV,aAC/BrH,EAAgB9N,EAAgB8N,cAEhCsJ,EAAWre,aAAaC,QAAQ,aAC/B,CAAEqe,IAAc3e,EAAAA,EAAAA,IAAQ4e,EAAAA,GACzBjd,EAAanB,EAAAA,EAAAA,IAAY,QAE7BmB,IAAoC,QAA1B7B,EAAIK,KAAKC,MAAMuB,UAAW,IAAA7B,GAAtBA,EAAwB+B,YACxC4D,EAAAA,WAAgB,KACdpF,aAAayW,WAAW,gBAEjB,KACL+H,eAAe/H,WAAW,kBAC1B+H,eAAe/H,WAAW,qBAAqB,IAEhD,IAEHrR,EAAAA,WAAgB,KACd,MAAMqZ,EAAO3e,KAAKC,MAAMse,GACxBD,EAAeK,EAAK,GACnB,CAACJ,IAEJ,MACMK,GADWrX,EAAAA,EAAAA,MACYD,SAE7B,OACE/D,EAAAA,EAAAA,KAAC+B,EAAAA,SAAc,CAAAxB,UACbP,EAAAA,EAAAA,KAAA,OACES,UAAU,oBACVJ,MAAO,CAAEkG,cAAeuU,EAAc,OAAS,IAAKva,SAEnDsa,GACCra,EAAAA,EAAAA,MAAAgB,EAAAA,SAAA,CAAAjB,SAAA,EACEC,EAAAA,EAAAA,MAAC2F,EAAAA,EAAK,CAACiK,QAAS,EAAE7P,SAAA,EAChBP,EAAAA,EAAAA,KAAA,OACEK,MAAO,CACLgG,YACEnK,EAAc,KAAO,OAAS,QAChCqE,SAEDrE,EAAc,MACb8D,EAAAA,EAAAA,KAACwG,EAAAA,EAAS,CACRF,GAAI,CACFvF,MAAO,OACPR,UAEFP,EAAAA,EAAAA,KAACsb,EAAAA,GAAM,OAGTtb,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,OAGJxB,EAAAA,EAAAA,KAACub,GAAqB,CACpB7J,cAAeA,EACf1C,mBAAoBA,EACpB9S,YAAaA,KAEbA,EAAc,MACE,UAAhBmf,KAA4Brb,EAAAA,EAAAA,KAAC4O,EAAQ,QAGzC5O,EAAAA,EAAAA,KAACwb,GAAc,CACbzC,aAAcA,EACdrH,cAAeA,EACfM,oBAAqBA,EACrBhD,mBAAoBA,QAIxBxO,EAAAA,EAAAA,MAAAgB,EAAAA,SAAA,CAAAjB,SAAA,EACEC,EAAAA,EAAAA,MAAC2F,EAAAA,EAAK,CAACiK,QAAS,EAAE7P,SAAA,EAChBP,EAAAA,EAAAA,KAAA,OACEK,MAAO,CACLgG,YACEnK,EAAc,KAAO,OAAS,QAChCqE,SAEDrE,EAAc,MACb8D,EAAAA,EAAAA,KAACwG,EAAAA,EAAS,CACRF,GAAI,CACFvF,MAAO,OACPR,UAEFP,EAAAA,EAAAA,KAACsb,EAAAA,GAAM,OAGTtb,EAAAA,EAAAA,KAAAwB,EAAAA,SAAA,OAGJxB,EAAAA,EAAAA,KAACub,GAAqB,CACpB7J,cAAeA,EACfxV,YAAaA,KAEdA,EAAc,MACC,UAAhBmf,GAGEnf,EAAc,QAFd8D,EAAAA,EAAAA,KAAC4O,EAAQ,QAMb5O,EAAAA,EAAAA,KAACwb,GAAc,CACbzC,aAAcA,EACdrH,cAAeA,EACfM,oBAAqBA,EACrBhD,mBAAoBA,UAKb,EC5FrB,GAjCiByM,KACf,MAAO/V,EAAaC,IAAkBC,EAAAA,EAAAA,aAE/B8V,EAAiB1M,IACtB1S,EAAAA,EAAAA,IAAQ4S,EAAAA,GAWV,OANA3K,EAAAA,EAAAA,YAAU,KACRoB,EACElJ,KAAKC,MAAMC,aAAaC,QAAQ,kBACjC,GACA,KAGDoD,EAAAA,EAAAA,KAAC+B,EAAAA,SAAc,CAAAxB,UACbP,EAAAA,EAAAA,KAAC0B,EAAAA,EAAiB,CAChBC,SACE3B,EAAAA,EAAAA,KAAC2b,GAAa,CACZ3M,mBAAoBA,IAGxBpN,YAAa,CACXoN,EACA0M,EACAhW,MAGW,C","sources":["Global/shared/adv.page.atom.js","Routes/Protected/MainPage/InterfaceAtom.js","Routes/Protected/MainPage/Components/MainMenu/variables/Links.js","Routes/Protected/MainPage/shared/side.bar.links.js","webpack://new-ui/./src/Global/Styles/Menu.Options.module.scss?aa5f","Global/Components/Generators/MenuLinksCreator/PatientItemsMobile.js","Global/Components/Generators/MenuLinksCreator/PatientItemsDesktop.js","Global/Components/Generators/MenuLinksCreator/PatientItems.js","Global/Components/Generators/MenuLinksCreator/DoctorItemsMobile.js","Global/Components/Generators/MenuLinksCreator/DoctorItemsDesktop.js","Global/Components/Generators/MenuLinksCreator/DoctorItems.js","webpack://new-ui/./src/Routes/Protected/MainPage/Styles/Main.Menu.module.scss?c386","Global/Hooks/useLinkCreatorBl.js","Global/Components/Generators/MenuLinksCreator/MenuLinksCreator.js","webpack://new-ui/./src/Routes/Protected/MainPage/Styles/Image.Carousel.module.scss?49d5","Routes/Protected/MainPage/Hooks/useInfiniteCarouselSlide.js","Routes/Protected/MainPage/Components/NonCarousel/NonCarousel.js","Routes/Protected/MainPage/Components/ImageCarousel/ImageCarousel.js","Routes/Protected/MainPage/Hooks/useCacheCarouselImages.js","Routes/Protected/MainPage/Hooks/useCallCarouselFetcher.js","Routes/Protected/MainPage/Adapters/GetCarouselImage.js","Routes/Protected/MainPage/Components/MainTopProfileSummary/DesktopLinks.js","Routes/Protected/MainPage/Components/DesktopCarousel/DesktopCarousel.js","Routes/Protected/MainPage/Components/MainMenu/components/GridItems.js","Routes/Protected/MainPage/Components/MainMenu/MainMenu.js","webpack://new-ui/./src/Routes/Protected/MainPage/Styles/Main.Menu.Drawer.module.scss?74e6","Routes/Protected/MainPage/Components/MainMenuDrawer/components/ImageTitleStack.js","Routes/Protected/MainPage/Components/MainMenuDrawer/components/ImageTitlePack.js","Routes/Protected/MainPage/Components/MainMenuDrawer/components/MenuDrawerSummary.js","Routes/Protected/MainPage/Components/MainMenuDrawer/components/LogOutButton.js","utils/FileSelector.js","Routes/Protected/MainPage/Components/MainMenuDrawer/Functions/UploadUserImage.js","Routes/Protected/MainPage/Components/MainMenuDrawer/components/ImageUploader.js","Routes/Protected/MainPage/Adapters/GetUserManual.js","Routes/Protected/MainPage/Components/MainMenuDrawer/components/UserGuidFetchButton.js","Routes/Protected/MainPage/Components/MainMenuDrawer/components/DrawerMenuLinkCreator.js","Routes/Protected/MainPage/Components/MainMenuDrawer/components/MainMenuDrawerOptions.js","Routes/Protected/MainPage/Components/MainMenuDrawer/variables/DrawerLinks.js","Routes/Protected/MainPage/Components/MainTopProfileSummary/PatientDoctor.js","Routes/Protected/MainPage/Components/MainTopProfileSummary/PatientAndDoctorDropDownGenerator.js","Routes/Protected/MainPage/Hooks/useHandleSIdeBarAccordion_Bl.js","Global/Components/CommonComponents/SideBarAccordion/SideBarAccordion.js","Global/Components/CommonComponents/SideBarAccordion/SideBarContent.js","Routes/Protected/MainPage/Components/MainTopProfileSummary/DesktopSideBarAccordionsForNonProfile.js","Routes/Protected/MainPage/Components/MainMenuDrawer/MainMenuDrawer.js","webpack://new-ui/./src/Routes/Protected/MainPage/Components/MainTopProfileSummary/sidebar.icons.colors.module.scss?3272","Routes/Protected/MainPage/Components/MainTopProfileSummary/DesktopSideBar.js","Global/Hooks/useClock/useClock.js","Routes/Protected/MainPage/Components/MainTopProfileSummary/MainTopProfileSummary.js","Routes/Protected/MainPage/UserInterface.js","Routes/Protected/MainPage/MainPage.jsx"],"sourcesContent":["import { atom } from 'jotai';\r\n\r\nexport const pageAdAtom = atom(null);\r\n","import { atom } from \"jotai\";\r\n\r\nexport const InterfaceAtom = atom(false);\r\n","import FindLangKey from 'Global/Functions/FindLangKey/FindLangKey';\r\nimport { IconAtom } from 'Global/Hooks/useCacheIcons/IconAtom';\r\nimport { useAtom } from 'jotai';\r\nimport Cookies from 'js-cookie';\r\n\r\nexport const Links = (screenWidth, isTurnAllowed) => {\r\n  const [icons] = useAtom(IconAtom);\r\n  const cachedIcons =\r\n    icons || JSON.parse(localStorage.getItem('icons'));\r\n\r\n  // console.log('cachedIconscachedIcons--->', cachedIcons);\r\n\r\n  const IdPatient = Cookies.get('user')\r\n    ? JSON.parse(Cookies.get('user')).IdPatient\r\n    : '';\r\n\r\n  const get_appointment = FindLangKey(\r\n    'main-menu-button-get-appointment'\r\n  );\r\n  const appointments = FindLangKey(\r\n    'main-menu-button-appointments'\r\n  );\r\n  const lab_test_result = FindLangKey(\r\n    'lab-test-result-navbar-title-lab'\r\n  );\r\n\r\n  const FreezeContract = FindLangKey(\r\n    'main-menu-drawer-link-freeze-contract'\r\n  );\r\n  const fileArchive_label = FindLangKey(\r\n    'genral-public-btn-label-download-file'\r\n  );\r\n  const SendfileArchive_label = FindLangKey(\r\n    'main-menu-button-patient-send-file'\r\n  );\r\n\r\n  const pacsImages = FindLangKey(\r\n    'main-menu-button-pacs-images'\r\n  );\r\n\r\n  const CurrentPatient_label = FindLangKey(\r\n    'main-menu-button-current-patient'\r\n  );\r\n\r\n  const patientList_label = FindLangKey(\r\n    'general-public-patients-list'\r\n  );\r\n\r\n  const newReferral_label = FindLangKey(\r\n    'general-public-new-refferal'\r\n  );\r\n\r\n  const serviceReport_label = FindLangKey(\r\n    'general-public-performance-report'\r\n  );\r\n\r\n  const uploadFile_label = FindLangKey(\r\n    'main-menu-button-upload-file'\r\n  );\r\n\r\n  const wages_label = FindLangKey('main-menu-button-wage');\r\n\r\n  const invoiceReceipt_label = FindLangKey(\r\n    'main-menu-button-invoice-receipt'\r\n  );\r\n\r\n  const quartering_label = FindLangKey(\r\n    'page-title-quartering'\r\n  );\r\n\r\n  const lab_actions = FindLangKey(\r\n    'main-menu-button-lab-actions'\r\n  );\r\n\r\n  const pato_title = FindLangKey(\r\n    'patologoy-lab-route-title'\r\n  );\r\n  const PatientSurveyList_title = FindLangKey(\r\n    'user-survey-route-title'\r\n  );\r\n\r\n  const PatientCartable_label = FindLangKey(\r\n    'patient-cartable-navbar-title'\r\n  );\r\n  const patientForVisit_label = FindLangKey(\r\n    'patients-for-visit-navbar-title'\r\n  );\r\n\r\n  const savePatientsForVisit_label = FindLangKey(\r\n    'save-patients-for-visit-navbar-title'\r\n  );\r\n\r\n  const userCookie = Cookies.get('user');\r\n\r\n  const userAccessRole =\r\n    userCookie && JSON.parse(userCookie)?.AccessRole;\r\n\r\n  const isOnlyPatient =\r\n    userAccessRole?.includes('Patient') &&\r\n    userAccessRole?.length === 1 &&\r\n    screenWidth > 1024;\r\n\r\n  const links = [\r\n    IdPatient === 0\r\n      ? null\r\n      : {\r\n          Picture:\r\n            'data:image/svg+xml;base64,' +\r\n            cachedIcons?.MenueIcon['NewTurnLine.svg'],\r\n          Route: isOnlyPatient\r\n            ? 'GetNewTurn'\r\n            : '/GetNewTurn',\r\n          Title: get_appointment,\r\n          IdPatient,\r\n        },\r\n    IdPatient === 0\r\n      ? null\r\n      : {\r\n          Picture:\r\n            'data:image/svg+xml;base64,' +\r\n            cachedIcons?.MenueIcon['Turns.svg'],\r\n          Route: isOnlyPatient ? 'TurnList' : '/TurnList',\r\n          Title: appointments,\r\n          IdPatient,\r\n        },\r\n    IdPatient === 0\r\n      ? null\r\n      : {\r\n          Picture:\r\n            'data:image/svg+xml;base64,' +\r\n            cachedIcons?.MenueIcon['Seeanswer.svg'],\r\n          Route: isOnlyPatient\r\n            ? 'LabTestResult'\r\n            : '/LabTestResult',\r\n          Title: lab_test_result,\r\n          IdPatient,\r\n        },\r\n\r\n    IdPatient === 0\r\n      ? null\r\n      : {\r\n          Picture:\r\n            'data:image/svg+xml;base64,' +\r\n            cachedIcons?.MenueIcon['FreezeContract.svg'],\r\n          Route: isOnlyPatient\r\n            ? 'FreezeContract'\r\n            : '/FreezeContract',\r\n          Title: FreezeContract,\r\n          IdPatient,\r\n        },\r\n\r\n    IdPatient === 0\r\n      ? null\r\n      : {\r\n          Picture:\r\n            'data:image/svg+xml;base64,' +\r\n            cachedIcons?.MenueIcon['Medicalimages.svg'],\r\n          Route: isOnlyPatient\r\n            ? 'pacsImages'\r\n            : '/pacsImages',\r\n          Title: pacsImages,\r\n          IdPatient,\r\n        },\r\n    IdPatient === 0\r\n      ? null\r\n      : {\r\n          Picture:\r\n            'data:image/svg+xml;base64,' +\r\n            cachedIcons?.MenueIcon['DownloadFile.svg'],\r\n          Route: isOnlyPatient\r\n            ? 'FileArchive'\r\n            : '/FileArchive',\r\n          Title: fileArchive_label,\r\n          IdPatient,\r\n        },\r\n    IdPatient === 0\r\n      ? null\r\n      : {\r\n          Picture:\r\n            'data:image/svg+xml;base64,' +\r\n            cachedIcons?.MenueIcon['SendFile.svg'],\r\n          Route: isOnlyPatient\r\n            ? 'SendFileArchive'\r\n            : '/SendFileArchive',\r\n          Title: SendfileArchive_label,\r\n          IdPatient,\r\n        },\r\n    IdPatient === 0\r\n      ? null\r\n      : {\r\n          Picture:\r\n            'data:image/svg+xml;base64,' +\r\n            cachedIcons?.MenueIcon['Poll.svg'],\r\n          Route: isOnlyPatient\r\n            ? 'PatientSurveyList'\r\n            : '/PatientSurveyList',\r\n          Title: PatientSurveyList_title,\r\n          IdPatient,\r\n        },\r\n    IdPatient === 0\r\n      ? null\r\n      : {\r\n          Picture:\r\n            'data:image/svg+xml;base64,' +\r\n            cachedIcons?.MenueIcon['workReport.svg'],\r\n          Route: isOnlyPatient ? 'Cartable' : '/Cartable',\r\n          Title: PatientCartable_label,\r\n          IdPatient,\r\n        },\r\n\r\n    {\r\n      Picture:\r\n        'data:image/svg+xml;base64,' +\r\n        cachedIcons?.MenueIcon['CurrentPatient.svg'],\r\n\r\n      Route: isOnlyPatient\r\n        ? 'CurrentPatients'\r\n        : '/CurrentPatients',\r\n      Title: CurrentPatient_label,\r\n    },\r\n    {\r\n      Picture:\r\n        'data:image/svg+xml;base64,' +\r\n        cachedIcons?.MenueIcon['PatientList.svg'],\r\n      Route: isOnlyPatient ? 'PatientList' : '/PatientList',\r\n      Title: patientList_label,\r\n    },\r\n    {\r\n      Picture:\r\n        'data:image/svg+xml;base64,' +\r\n        cachedIcons?.MenueIcon['PatientReferral.svg'],\r\n      Route: isOnlyPatient\r\n        ? 'SearchPatientForErja'\r\n        : '/SearchPatientForErja',\r\n      Title: newReferral_label,\r\n    },\r\n    {\r\n      Picture:\r\n        'data:image/svg+xml;base64,' +\r\n        cachedIcons?.MenueIcon['PerformanceReport.svg'],\r\n      Route: isOnlyPatient\r\n        ? 'ServiceReportSummary'\r\n        : '/ServiceReportSummary',\r\n      Title: serviceReport_label, //title is the text goes on top bar of each section\r\n    },\r\n    {\r\n      Picture:\r\n        'data:image/svg+xml;base64,' +\r\n        cachedIcons?.MenueIcon['Upload.svg'],\r\n      Route: '',\r\n      Title: uploadFile_label,\r\n    },\r\n    {\r\n      Picture:\r\n        'data:image/svg+xml;base64,' +\r\n        cachedIcons?.MenueIcon['Wage.svg'],\r\n      Route: '',\r\n      Title: wages_label,\r\n    },\r\n\r\n    // {\r\n    //   Picture:\r\n    //     'data:image/svg+xml;base64,' +\r\n    //     cachedIcons?.MenueIcon['InvoiceReceipt.svg'],\r\n    //   Route: isOnlyPatient\r\n    //     ? 'InvoiceReceipt'\r\n    //     : '/InvoiceReceipt',\r\n    //   Title: invoiceReceipt_label,\r\n    // },\r\n    // {\r\n    //   Picture:\r\n    //     'data:image/svg+xml;base64,' +\r\n    //     cachedIcons?.MenueIcon['CheckInout.svg'],\r\n    //   Route: isOnlyPatient ? 'Quartering' : '/Quartering',\r\n    //   Title: quartering_label,\r\n    // },\r\n\r\n    // {\r\n    //   Picture:\r\n    //     'data:image/svg+xml;base64,' +\r\n    //     cachedIcons?.MenueIcon['AnswerTestLab.svg'],\r\n    //   Route: isOnlyPatient ? 'Lab' : '/Lab',\r\n    //   Title: lab_actions,\r\n    // },\r\n    // {\r\n    //   Picture:\r\n    //     'data:image/svg+xml;base64,' +\r\n    //     cachedIcons?.MenueIcon['Specializedlaboratory.svg'],\r\n    //   Route: isOnlyPatient ? 'Pato' : '/Pato',\r\n    //   Title: pato_title,\r\n    // },\r\n\r\n    {\r\n      Picture:\r\n        'data:image/svg+xml;base64,' +\r\n        cachedIcons?.MenueIcon['PatientList.svg'],\r\n      Route: isOnlyPatient\r\n        ? 'PatientsForVisit'\r\n        : '/PatientsForVisit',\r\n      Title: patientForVisit_label,\r\n    },\r\n    {\r\n      Picture:\r\n        'data:image/svg+xml;base64,' +\r\n        cachedIcons?.MenueIcon['Reception.svg'],\r\n      Route: isOnlyPatient\r\n        ? 'SavePatientsForVisit'\r\n        : '/SavePatientsForVisit',\r\n      Title: savePatientsForVisit_label,\r\n    },\r\n  ];\r\n\r\n  const filteredLinks = links.filter((fl) => fl !== null);\r\n\r\n  return filteredLinks;\r\n};\r\n","import { atom } from 'jotai';\r\n\r\nexport const sideBarLinks = atom(null);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"eachLink\":\"Menu_Options_eachLink__bTLzp\"};","import React, { useEffect } from 'react';\r\nimport {\r\n  Link,\r\n  useLocation,\r\n  useNavigate,\r\n} from 'react-router-dom';\r\nimport styles from '../../../Styles/Menu.Options.module.scss';\r\nimport ComponentMemoizer from 'Global/Components/ComponentMemoizer/ComponentMemoizer';\r\nimport { sideBarLinks } from 'Routes/Protected/MainPage/shared/side.bar.links';\r\nimport { useAtom } from 'jotai';\r\nimport SwalAlert from 'Global/Components/CommonComponents/SwalAlert/SwalAlert';\r\nimport FindLangKey from 'Global/Functions/FindLangKey/FindLangKey';\r\nimport FrameCard from 'Global/Components/CommonComponents/FrameCard/FrameCard';\r\nconst PatientItemsMobile = (props) => {\r\n  const {\r\n    screenWidth,\r\n    Links,\r\n    AccessRoles,\r\n    isTurnAllowed,\r\n    isNestedRoute,\r\n  } = props;\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const isAccessible = (route) => {\r\n    const lowerCasedRoles = AccessRoles?.map((role) =>\r\n      role.toLowerCase()\r\n    );\r\n    return (\r\n      lowerCasedRoles?.includes(route.toLowerCase()) ||\r\n      lowerCasedRoles\r\n        ?.map((role) => role.substring(1))\r\n        ?.includes(route.toLowerCase())\r\n    );\r\n  };\r\n\r\n  const filteredLinks = Links?.filter(\r\n    (option) =>\r\n      isAccessible(option.Route) && option?.IdPatient\r\n  );\r\n\r\n  // console.log(\r\n  //   'filteredLinksfilteredLinks--->',\r\n  //   filteredLinks\r\n  // );\r\n\r\n  const renderLinkSection = (options) => {\r\n\r\n \r\n    return options.map((option, i) => (\r\n      option?.IdPatient &&\r\n      <div\r\n        key={i}\r\n        onClick={() => {\r\n          if (\r\n            ['/TurnList', '/GetNewTurn'].includes(\r\n              option.Route\r\n            ) &&\r\n            !isTurnAllowed\r\n          ) {\r\n            SwalAlert(\r\n              'warning',\r\n              cant_get_newTurn_label,\r\n              false,\r\n              false,\r\n              false,\r\n              false,\r\n              false,\r\n              true\r\n            );\r\n          } else {\r\n            navigate(getLinkRoute(option));\r\n          }\r\n        }}\r\n        style={{\r\n          zIndex: 2,\r\n        }}\r\n      >\r\n        <div className={styles.eachLink}>\r\n          <img\r\n            src={option.Picture}\r\n            alt={option.Title}\r\n            loading=\"...\"\r\n            className={getImageStyle(option)}\r\n            width={getImageSize(\r\n              screenWidth,\r\n              isNestedRoute,\r\n              true\r\n            )}\r\n            height={getImageSize(\r\n              screenWidth,\r\n              isNestedRoute,\r\n              false\r\n            )}\r\n          />\r\n\r\n          <p style={{ fontSize: '0.8125em' }}>\r\n            {option.Title}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  const getLinkRoute = (option) => {\r\n    if (\r\n      ['/TurnList', '/GetNewTurn'].includes(option.Route)\r\n    ) {\r\n      return !isTurnAllowed ? '' : option.Route;\r\n    }\r\n    return option.Route;\r\n  };\r\n\r\n  const getImageStyle = (option) => {\r\n    const style = {\r\n      background: option.Picture,\r\n      cursor: 'pointer',\r\n      backgroundPosition: 'center center',\r\n      backgroundSize: 'cover',\r\n    };\r\n\r\n    if (\r\n      ['/TurnList', '/GetNewTurn'].includes(option.Route)\r\n    ) {\r\n      style.filter = !isTurnAllowed\r\n        ? 'grayscale(1)'\r\n        : 'unset';\r\n    }\r\n\r\n    return style;\r\n  };\r\n\r\n  const getImageSize = (\r\n    screenWidth,\r\n    isNestedRoute,\r\n    isWidth\r\n  ) => {\r\n    if (screenWidth >= 1440 && isNestedRoute) {\r\n      return isWidth ? 60 : 60;\r\n    }\r\n    return !isNestedRoute ? 60 : 40;\r\n  };\r\n\r\n  const filterLinksByAccessRoles = () => {\r\n    return Links?.filter(\r\n      (option) =>\r\n        AccessRoles?.map((role) =>\r\n          role.toLowerCase()\r\n        )?.includes(option.Route.toLowerCase()) ||\r\n        AccessRoles?.map((role) =>\r\n          role.toLowerCase().substring(1)\r\n        )?.includes(option.Route.toLowerCase())\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {screenWidth > 1024 ? (\r\n        <div style={{ flexShrink: '1' }}>\r\n          <ComponentMemoizer\r\n            element={renderLinkSection(filteredLinks)}\r\n            dependecies={[\r\n              localStorage.getItem('icons'),\r\n              isTurnAllowed,\r\n            ]}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <ComponentMemoizer\r\n          element={renderLinkSection(\r\n            filterLinksByAccessRoles()\r\n          )}\r\n          dependecies={[\r\n            localStorage.getItem('icons'),\r\n            isTurnAllowed,\r\n          ]}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PatientItemsMobile;\r\n","import React, { useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport styles from '../../../Styles/Menu.Options.module.scss';\r\nimport ComponentMemoizer from 'Global/Components/ComponentMemoizer/ComponentMemoizer';\r\nimport { sideBarLinks } from 'Routes/Protected/MainPage/shared/side.bar.links';\r\nimport { useAtom } from 'jotai';\r\nimport SwalAlert from 'Global/Components/CommonComponents/SwalAlert/SwalAlert';\r\nimport FindLangKey from 'Global/Functions/FindLangKey/FindLangKey';\r\nimport FrameCard from 'Global/Components/CommonComponents/FrameCard/FrameCard';\r\n\r\nconst PatientItemsDesktop = (props) => {\r\n  const {\r\n    screenWidth,\r\n    Links,\r\n    AccessRoles,\r\n    isTurnAllowed,\r\n    isNestedRoute,\r\n  } = props;\r\n\r\n  // let lastIndex = -1;\r\n  // for (let i = Links.length - 1; i >= 0; i--) {\r\n  //   if (Links[i].hasOwnProperty('IdPatient')) {\r\n  //     lastIndex = i;\r\n  //     break;\r\n  //   }\r\n  // }\r\n\r\n  \r\n\r\n  return (\r\n    <React.Fragment>\r\n      {screenWidth > 1024 ? (\r\n        <div\r\n          style={{\r\n            flexShrink: '1',\r\n          }}\r\n        >\r\n          <ComponentMemoizer\r\n            element={Links?.map(\r\n              (option, i) =>\r\n                (AccessRoles?.map((role) =>\r\n                  role.toLowerCase()\r\n                )?.includes(option.Route.toLowerCase()) ||\r\n                  AccessRoles?.map((role) =>\r\n                    role.toLowerCase().substring(1)\r\n                  )?.includes(\r\n                    option.Route.toLowerCase()\r\n                  )) &&\r\n                option?.IdPatient && (\r\n                  <React.Fragment key={i}>\r\n                    <Link\r\n                      to={\r\n                        [\r\n                          '/TurnList',\r\n                          '/GetNewTurn',\r\n                        ].includes(option.Route)\r\n                          ? !isTurnAllowed\r\n                            ? ''\r\n                            : option.Route\r\n                          : option.Route\r\n                      }\r\n                      replace\r\n                      style={{\r\n                        textDecoration: 'none',\r\n                      }}\r\n                    >\r\n                      <FrameCard\r\n                        cardProps={{\r\n                          p: '.2em',\r\n                          borderRadius: '20px',\r\n                          minWidth: '12em !important',\r\n                          display: 'flex',\r\n                          justifyContent: 'flex-start',\r\n                        }}\r\n                        jsx={\r\n                          <section\r\n                            // style={{\r\n                            //   borderBottom:\r\n                            //     Links?.length !== lastIndex &&\r\n                            //     i === lastIndex\r\n                            //       ? '5px solid black'\r\n                            //       : '',\r\n                            // }}\r\n                            style={{\r\n                              backgroundColor: 'white',\r\n                              borderRadius: '20px',\r\n                              width: '100%',\r\n                              display: 'flex',\r\n                              justifyContent: 'center',\r\n                              minHeight: '7em',\r\n                              fontSize: '1.2em',\r\n                              alignItems: 'center',\r\n                              gap: '.5em',\r\n                            }}\r\n                            className={styles.eachLink}\r\n                            onClick={() => {\r\n                              if (\r\n                                [\r\n                                  '/TurnList',\r\n                                  '/GetNewTurn',\r\n                                ].includes(option.Route) &&\r\n                                !isTurnAllowed\r\n                              ) {\r\n                                SwalAlert(\r\n                                  'warning',\r\n                                  cant_get_newTurn_label,\r\n                                  false,\r\n                                  false,\r\n                                  false,\r\n                                  false,\r\n                                  false,\r\n                                  true\r\n                                );\r\n                              }\r\n                            }}\r\n                          >\r\n                            <img\r\n                              src={option.Picture}\r\n                              alt={option.Title}\r\n                              loading=\"...\"\r\n                              style={{\r\n                                background: option.Picture,\r\n                                cursor: 'pointer',\r\n                                backgroundPosition:\r\n                                  'center center',\r\n                                backgroundSize: 'cover',\r\n                                filter: [\r\n                                  '/TurnList',\r\n                                  '/GetNewTurn',\r\n                                ].includes(option.Route)\r\n                                  ? !isTurnAllowed\r\n                                    ? 'grayscale(1)'\r\n                                    : 'unset'\r\n                                  : 'unset',\r\n                              }}\r\n                              width={\r\n                                screenWidth >= 1440 &&\r\n                                isNestedRoute\r\n                                  ? 60\r\n                                  : !isNestedRoute\r\n                                  ? 60\r\n                                  : 40\r\n                              }\r\n                              height={\r\n                                screenWidth >= 1440 &&\r\n                                isNestedRoute\r\n                                  ? 60\r\n                                  : !isNestedRoute\r\n                                  ? 60\r\n                                  : 40\r\n                              }\r\n                            />\r\n\r\n                            <p\r\n                              style={{\r\n                                fontSize: '0.8125em',\r\n                              }}\r\n                            >\r\n                              {option.Title}\r\n                            </p>\r\n                          </section>\r\n                        }\r\n                      />\r\n                    </Link>\r\n                  </React.Fragment>\r\n                )\r\n            )}\r\n            dependecies={[\r\n              localStorage.getItem('icons'),\r\n              isTurnAllowed,\r\n            ]}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <ComponentMemoizer\r\n          element={Links?.map(\r\n            (option, i) =>\r\n              (AccessRoles?.map((role) =>\r\n                role.toLowerCase()\r\n              )?.includes(option.Route.toLowerCase()) ||\r\n                AccessRoles?.map((role) =>\r\n                  role.toLowerCase().substring(1)\r\n                )?.includes(option.Route.toLowerCase())) &&\r\n              option?.IdPatient && (\r\n                <React.Fragment key={i}>\r\n                  <Link\r\n                    to={\r\n                      ['/TurnList', '/GetNewTurn'].includes(\r\n                        option.Route\r\n                      )\r\n                        ? !isTurnAllowed\r\n                          ? ''\r\n                          : option.Route\r\n                        : option.Route\r\n                    }\r\n                    replace\r\n                    style={{\r\n                      textDecoration: 'none',\r\n                    }}\r\n                  >\r\n                    <FrameCard\r\n                      cardProps={{\r\n                        p: '.2em',\r\n                        borderRadius: '20px',\r\n                        minWidth: '12em !important',\r\n                        display: 'flex',\r\n                        justifyContent: 'flex-start',\r\n                      }}\r\n                      jsx={\r\n                        <section\r\n                          // style={{\r\n                          //   borderBottom:\r\n                          //     Links?.length !== lastIndex &&\r\n                          //     i === lastIndex\r\n                          //       ? '5px solid black'\r\n                          //       : '',\r\n                          // }}\r\n\r\n                          style={{\r\n                            backgroundColor: 'white',\r\n                            borderRadius: '20px',\r\n                            width: '100%',\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                            minHeight: '7em',\r\n                            fontSize: '1.2em',\r\n                            alignItems: 'center',\r\n                            gap: '.5em',\r\n                          }}\r\n                          className={styles.eachLink}\r\n                          onClick={() => {\r\n                            if (\r\n                              [\r\n                                '/TurnList',\r\n                                '/GetNewTurn',\r\n                              ].includes(option.Route) &&\r\n                              !isTurnAllowed\r\n                            ) {\r\n                              SwalAlert(\r\n                                'warning',\r\n                                cant_get_newTurn_label,\r\n                                false,\r\n                                false,\r\n                                false,\r\n                                false,\r\n                                false,\r\n                                true\r\n                              );\r\n                            }\r\n                          }}\r\n                        >\r\n                          <img\r\n                            src={option.Picture}\r\n                            alt={option.Title}\r\n                            loading=\"...\"\r\n                            style={{\r\n                              background: option.Picture,\r\n                              cursor: 'pointer',\r\n                              backgroundPosition:\r\n                                'center center',\r\n                              backgroundSize: 'cover',\r\n                              filter: [\r\n                                '/TurnList',\r\n                                '/GetNewTurn',\r\n                              ].includes(option.Route)\r\n                                ? !isTurnAllowed\r\n                                  ? 'grayscale(1)'\r\n                                  : 'unset'\r\n                                : 'unset',\r\n                            }}\r\n                            width={\r\n                              screenWidth >= 1440 &&\r\n                              isNestedRoute\r\n                                ? 60\r\n                                : !isNestedRoute\r\n                                ? 60\r\n                                : 40\r\n                            }\r\n                            height={\r\n                              screenWidth >= 1440 &&\r\n                              isNestedRoute\r\n                                ? 60\r\n                                : !isNestedRoute\r\n                                ? 60\r\n                                : 40\r\n                            }\r\n                          />\r\n\r\n                          <p\r\n                            style={{ fontSize: '0.8125em' }}\r\n                          >\r\n                            {option.Title}\r\n                          </p>\r\n                        </section>\r\n                      }\r\n                    />\r\n                  </Link>\r\n                </React.Fragment>\r\n              )\r\n          )}\r\n          dependecies={[\r\n            localStorage.getItem('icons'),\r\n            isTurnAllowed,\r\n          ]}\r\n        />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PatientItemsDesktop;\r\n","import React, { useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport styles from '../../../Styles/Menu.Options.module.scss';\r\nimport ComponentMemoizer from 'Global/Components/ComponentMemoizer/ComponentMemoizer';\r\nimport { sideBarLinks } from 'Routes/Protected/MainPage/shared/side.bar.links';\r\nimport { useAtom } from 'jotai';\r\nimport SwalAlert from 'Global/Components/CommonComponents/SwalAlert/SwalAlert';\r\nimport FindLangKey from 'Global/Functions/FindLangKey/FindLangKey';\r\nimport PatientItemsMobile from './PatientItemsMobile';\r\nimport PatientItemsDesktop from './PatientItemsDesktop';\r\n\r\nconst PatientItems = (props) => {\r\n  const {\r\n    screenWidth,\r\n    Links,\r\n    AccessRoles,\r\n    isTurnAllowed,\r\n    isNestedRoute,\r\n  } = props;\r\n\r\n  // let lastIndex = -1;\r\n  // for (let i = Links.length - 1; i >= 0; i--) {\r\n  //   if (Links[i].hasOwnProperty('IdPatient')) {\r\n  //     lastIndex = i;\r\n  //     break;\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {screenWidth > 1024 ? (\r\n        <PatientItemsDesktop\r\n          Links={Links}\r\n          AccessRoles={AccessRoles}\r\n          isTurnAllowed={isTurnAllowed}\r\n          isNestedRoute={isNestedRoute}\r\n        />\r\n      ) : (\r\n        <PatientItemsMobile\r\n          Links={Links}\r\n          AccessRoles={AccessRoles}\r\n          isTurnAllowed={isTurnAllowed}\r\n          isNestedRoute={isNestedRoute}\r\n          screenWidth={screenWidth}\r\n        />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PatientItems;\r\n","import React, { useEffect } from 'react';\r\nimport {\r\n  Link,\r\n  useLocation,\r\n  useNavigate,\r\n} from 'react-router-dom';\r\nimport styles from '../../../Styles/Menu.Options.module.scss';\r\nimport ComponentMemoizer from 'Global/Components/ComponentMemoizer/ComponentMemoizer';\r\nimport { sideBarLinks } from 'Routes/Protected/MainPage/shared/side.bar.links';\r\nimport { useAtom } from 'jotai';\r\nimport SwalAlert from 'Global/Components/CommonComponents/SwalAlert/SwalAlert';\r\nimport FindLangKey from 'Global/Functions/FindLangKey/FindLangKey';\r\n\r\nconst DoctorItemsMobile = (props) => {\r\n  const {\r\n    screenWidth,\r\n    Links,\r\n    AccessRoles,\r\n    isTurnAllowed,\r\n    isNestedRoute,\r\n  } = props;\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const navigateTo = (route) => {\r\n    navigate(route);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {screenWidth > 1024 ? (\r\n        <div\r\n          style={{\r\n            flexShrink: '1',\r\n             \r\n          }}\r\n        >\r\n          <ComponentMemoizer\r\n            element={Links?.map(\r\n              (option, i) =>\r\n                (AccessRoles?.map((role) =>\r\n                  role.toLowerCase()\r\n                )?.includes(option.Route.toLowerCase()) ||\r\n                  AccessRoles?.map((role) =>\r\n                    role.toLowerCase().substring(1)\r\n                  )?.includes(\r\n                    option.Route.toLowerCase()\r\n                  )) &&\r\n                !option?.IdPatient && (\r\n                  <React.Fragment key={i}>\r\n                    <section\r\n                      className={styles.eachLink}\r\n                      onClick={() => {\r\n                        if (\r\n                          [\r\n                            '/TurnList',\r\n                            '/GetNewTurn',\r\n                          ].includes(option.Route) &&\r\n                          !isTurnAllowed\r\n                        ) {\r\n                          SwalAlert(\r\n                            'warning',\r\n                            cant_get_newTurn_label,\r\n                            false,\r\n                            false,\r\n                            false,\r\n                            false,\r\n                            false,\r\n                            true\r\n                          );\r\n                        } else {\r\n                          navigateTo(option.Route);\r\n                        }\r\n                      }}\r\n                    >\r\n                      <img\r\n                        src={option.Picture}\r\n                        alt={option.Title}\r\n                        loading=\"...\"\r\n                        style={{\r\n                          background: option.Picture,\r\n                          cursor: 'pointer',\r\n                          backgroundPosition:\r\n                            'center center',\r\n                          backgroundSize: 'cover',\r\n                          filter: [\r\n                            '/TurnList',\r\n                            '/GetNewTurn',\r\n                          ].includes(option.Route)\r\n                            ? !isTurnAllowed\r\n                              ? 'grayscale(1)'\r\n                              : 'unset'\r\n                            : 'unset',\r\n                        }}\r\n                        width={\r\n                          screenWidth >= 1440 &&\r\n                          isNestedRoute\r\n                            ? 60\r\n                            : !isNestedRoute\r\n                            ? 60\r\n                            : 40\r\n                        }\r\n                        height={\r\n                          screenWidth >= 1440 &&\r\n                          isNestedRoute\r\n                            ? 60\r\n                            : !isNestedRoute\r\n                            ? 60\r\n                            : 40\r\n                        }\r\n                      />\r\n\r\n                      <p style={{ fontSize: '0.8125em' }}>\r\n                        {option.Title}\r\n                      </p>\r\n                    </section>\r\n                  </React.Fragment>\r\n                )\r\n            )}\r\n            dependecies={[\r\n              localStorage.getItem('icons'),\r\n              isTurnAllowed,\r\n            ]}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <ComponentMemoizer\r\n          element={Links?.map(\r\n            (option, i) =>\r\n              (AccessRoles?.map((role) =>\r\n                role.toLowerCase()\r\n              )?.includes(option.Route.toLowerCase()) ||\r\n                AccessRoles?.map((role) =>\r\n                  role.toLowerCase().substring(1)\r\n                )?.includes(option.Route.toLowerCase())) &&\r\n              !option?.IdPatient && (\r\n                <React.Fragment key={i}>\r\n                  <section\r\n                    className={styles.eachLink}\r\n                    onClick={() => {\r\n                      if (\r\n                        [\r\n                          '/TurnList',\r\n                          '/GetNewTurn',\r\n                        ].includes(option.Route) &&\r\n                        !isTurnAllowed\r\n                      ) {\r\n                        SwalAlert(\r\n                          'warning',\r\n                          cant_get_newTurn_label,\r\n                          false,\r\n                          false,\r\n                          false,\r\n                          false,\r\n                          false,\r\n                          true\r\n                        );\r\n                      } else {\r\n                        navigateTo(option.Route);\r\n                      }\r\n                    }}\r\n                  >\r\n                    <img\r\n                      src={option.Picture}\r\n                      alt={option.Title}\r\n                      loading=\"...\"\r\n                      style={{\r\n                        background: option.Picture,\r\n                        cursor: 'pointer',\r\n                        backgroundPosition: 'center center',\r\n                        backgroundSize: 'cover',\r\n                        filter: [\r\n                          '/TurnList',\r\n                          '/GetNewTurn',\r\n                        ].includes(option.Route)\r\n                          ? !isTurnAllowed\r\n                            ? 'grayscale(1)'\r\n                            : 'unset'\r\n                          : 'unset',\r\n                      }}\r\n                      width={\r\n                        screenWidth >= 1440 && isNestedRoute\r\n                          ? 60\r\n                          : !isNestedRoute\r\n                          ? 60\r\n                          : 40\r\n                      }\r\n                      height={\r\n                        screenWidth >= 1440 && isNestedRoute\r\n                          ? 60\r\n                          : !isNestedRoute\r\n                          ? 60\r\n                          : 40\r\n                      }\r\n                    />\r\n\r\n                    <p style={{ fontSize: '0.8125em' }}>\r\n                      {option.Title}\r\n                    </p>\r\n                  </section>\r\n                </React.Fragment>\r\n              )\r\n          )}\r\n          dependecies={[\r\n            localStorage.getItem('icons'),\r\n            isTurnAllowed,\r\n          ]}\r\n        />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DoctorItemsMobile;\r\n","import React, { useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport styles from '../../../Styles/Menu.Options.module.scss';\r\nimport ComponentMemoizer from 'Global/Components/ComponentMemoizer/ComponentMemoizer';\r\nimport { sideBarLinks } from 'Routes/Protected/MainPage/shared/side.bar.links';\r\nimport { useAtom } from 'jotai';\r\nimport SwalAlert from 'Global/Components/CommonComponents/SwalAlert/SwalAlert';\r\nimport FindLangKey from 'Global/Functions/FindLangKey/FindLangKey';\r\nimport FrameCard from 'Global/Components/CommonComponents/FrameCard/FrameCard';\r\n\r\nconst DoctorItemsDesktop = (props) => {\r\n  const {\r\n    screenWidth,\r\n    Links,\r\n    AccessRoles,\r\n    isTurnAllowed,\r\n    isNestedRoute,\r\n  } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {screenWidth > 1024 ? (\r\n        <div\r\n          style={{\r\n            flexShrink: '1',\r\n          }}\r\n        >\r\n          <ComponentMemoizer\r\n            element={Links?.map(\r\n              (option, i) =>\r\n                (AccessRoles?.map((role) =>\r\n                  role.toLowerCase()\r\n                )?.includes(option.Route.toLowerCase()) ||\r\n                  AccessRoles?.map((role) =>\r\n                    role.toLowerCase().substring(1)\r\n                  )?.includes(\r\n                    option.Route.toLowerCase()\r\n                  )) &&\r\n                !option?.IdPatient && (\r\n                  <React.Fragment key={i}>\r\n                    <Link\r\n                      to={\r\n                        [\r\n                          '/TurnList',\r\n                          '/GetNewTurn',\r\n                        ].includes(option.Route)\r\n                          ? !isTurnAllowed\r\n                            ? ''\r\n                            : option.Route\r\n                          : option.Route\r\n                      }\r\n                      replace\r\n                      style={{\r\n                        textDecoration: 'none',\r\n                      }}\r\n                    >\r\n                      <FrameCard\r\n                        cardProps={{\r\n                          p: '.2em',\r\n                          borderRadius: '20px',\r\n                          minWidth: '12em !important',\r\n                          display: 'flex',\r\n                          justifyContent: 'flex-start',\r\n                        }}\r\n                        jsx={\r\n                          <section\r\n                            style={{\r\n                              backgroundColor: 'white',\r\n                              borderRadius: '20px',\r\n                              width: '100%',\r\n                              display: 'flex',\r\n                              justifyContent: 'center',\r\n                              minHeight: '7em',\r\n                              fontSize: '1.2em',\r\n                              alignItems: 'center',\r\n                              gap: '.5em',\r\n                            }}\r\n                            className={styles.eachLink}\r\n                            onClick={() => {\r\n                              if (\r\n                                [\r\n                                  '/TurnList',\r\n                                  '/GetNewTurn',\r\n                                ].includes(option.Route) &&\r\n                                !isTurnAllowed\r\n                              ) {\r\n                                SwalAlert(\r\n                                  'warning',\r\n                                  cant_get_newTurn_label,\r\n                                  false,\r\n                                  false,\r\n                                  false,\r\n                                  false,\r\n                                  false,\r\n                                  true\r\n                                );\r\n                              }\r\n                            }}\r\n                          >\r\n                            <img\r\n                              src={option.Picture}\r\n                              alt={option.Title}\r\n                              loading=\"...\"\r\n                              style={{\r\n                                background: option.Picture,\r\n                                cursor: 'pointer',\r\n                                backgroundPosition:\r\n                                  'center center',\r\n                                backgroundSize: 'cover',\r\n                                filter: [\r\n                                  '/TurnList',\r\n                                  '/GetNewTurn',\r\n                                ].includes(option.Route)\r\n                                  ? !isTurnAllowed\r\n                                    ? 'grayscale(1)'\r\n                                    : 'unset'\r\n                                  : 'unset',\r\n                              }}\r\n                              width={\r\n                                screenWidth >= 1440 &&\r\n                                isNestedRoute\r\n                                  ? 60\r\n                                  : !isNestedRoute\r\n                                  ? 60\r\n                                  : 40\r\n                              }\r\n                              height={\r\n                                screenWidth >= 1440 &&\r\n                                isNestedRoute\r\n                                  ? 60\r\n                                  : !isNestedRoute\r\n                                  ? 60\r\n                                  : 40\r\n                              }\r\n                            />\r\n\r\n                            <p\r\n                              style={{\r\n                                fontSize: '0.8125em',\r\n                              }}\r\n                            >\r\n                              {option.Title}\r\n                            </p>\r\n                          </section>\r\n                        }\r\n                      />\r\n                    </Link>\r\n                  </React.Fragment>\r\n                )\r\n            )}\r\n            dependecies={[\r\n              localStorage.getItem('icons'),\r\n              isTurnAllowed,\r\n            ]}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <ComponentMemoizer\r\n          element={Links?.map(\r\n            (option, i) =>\r\n              (AccessRoles?.map((role) =>\r\n                role.toLowerCase()\r\n              )?.includes(option.Route.toLowerCase()) ||\r\n                AccessRoles?.map((role) =>\r\n                  role.toLowerCase().substring(1)\r\n                )?.includes(option.Route.toLowerCase())) &&\r\n              !option?.IdPatient && (\r\n                <React.Fragment key={i}>\r\n                  <Link\r\n                    to={\r\n                      ['/TurnList', '/GetNewTurn'].includes(\r\n                        option.Route\r\n                      )\r\n                        ? !isTurnAllowed\r\n                          ? ''\r\n                          : option.Route\r\n                        : option.Route\r\n                    }\r\n                    replace\r\n                    style={{\r\n                      textDecoration: 'none',\r\n                    }}\r\n                  >\r\n                    <FrameCard\r\n                      cardProps={{\r\n                        p: '.2em',\r\n                        borderRadius: '20px',\r\n                        minWidth: '12em !important',\r\n                        display: 'flex',\r\n                        justifyContent: 'flex-start',\r\n                      }}\r\n                      jsx={\r\n                        <section\r\n                          style={{\r\n                            backgroundColor: 'white',\r\n                            borderRadius: '20px',\r\n                            width: '100%',\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                            minHeight: '7em',\r\n                            fontSize: '1.2em',\r\n                            alignItems: 'center',\r\n                            gap: '.5em',\r\n                          }}\r\n                          className={styles.eachLink}\r\n                          onClick={() => {\r\n                            if (\r\n                              [\r\n                                '/TurnList',\r\n                                '/GetNewTurn',\r\n                              ].includes(option.Route) &&\r\n                              !isTurnAllowed\r\n                            ) {\r\n                              SwalAlert(\r\n                                'warning',\r\n                                cant_get_newTurn_label,\r\n                                false,\r\n                                false,\r\n                                false,\r\n                                false,\r\n                                false,\r\n                                true\r\n                              );\r\n                            }\r\n                          }}\r\n                        >\r\n                          <img\r\n                            src={option.Picture}\r\n                            alt={option.Title}\r\n                            loading=\"...\"\r\n                            style={{\r\n                              background: option.Picture,\r\n                              cursor: 'pointer',\r\n                              backgroundPosition:\r\n                                'center center',\r\n                              backgroundSize: 'cover',\r\n                              filter: [\r\n                                '/TurnList',\r\n                                '/GetNewTurn',\r\n                              ].includes(option.Route)\r\n                                ? !isTurnAllowed\r\n                                  ? 'grayscale(1)'\r\n                                  : 'unset'\r\n                                : 'unset',\r\n                            }}\r\n                            width={\r\n                              screenWidth >= 1440 &&\r\n                              isNestedRoute\r\n                                ? 60\r\n                                : !isNestedRoute\r\n                                ? 60\r\n                                : 40\r\n                            }\r\n                            height={\r\n                              screenWidth >= 1440 &&\r\n                              isNestedRoute\r\n                                ? 60\r\n                                : !isNestedRoute\r\n                                ? 60\r\n                                : 40\r\n                            }\r\n                          />\r\n\r\n                          <p\r\n                            style={{ fontSize: '0.8125em' }}\r\n                          >\r\n                            {option.Title}\r\n                          </p>\r\n                        </section>\r\n                      }\r\n                    />\r\n                  </Link>\r\n                </React.Fragment>\r\n              )\r\n          )}\r\n          dependecies={[\r\n            localStorage.getItem('icons'),\r\n            isTurnAllowed,\r\n          ]}\r\n        />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DoctorItemsDesktop;\r\n","import React, { useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport styles from '../../../Styles/Menu.Options.module.scss';\r\nimport ComponentMemoizer from 'Global/Components/ComponentMemoizer/ComponentMemoizer';\r\nimport { sideBarLinks } from 'Routes/Protected/MainPage/shared/side.bar.links';\r\nimport { useAtom } from 'jotai';\r\nimport SwalAlert from 'Global/Components/CommonComponents/SwalAlert/SwalAlert';\r\nimport FindLangKey from 'Global/Functions/FindLangKey/FindLangKey';\r\nimport DoctorItemsMobile from './DoctorItemsMobile';\r\nimport DoctorItemsDesktop from './DoctorItemsDesktop';\r\n\r\nconst DoctorItems = (props) => {\r\n  const {\r\n    screenWidth,\r\n    Links,\r\n    AccessRoles,\r\n    isTurnAllowed,\r\n    isNestedRoute,\r\n  } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {screenWidth > 1024 ? (\r\n        <DoctorItemsDesktop\r\n          Links={Links}\r\n          AccessRoles={AccessRoles}\r\n          isTurnAllowed={isTurnAllowed}\r\n          isNestedRoute={isNestedRoute}\r\n        />\r\n      ) : (\r\n        <DoctorItemsMobile\r\n          screenWidth={screenWidth}\r\n          Links={Links}\r\n          AccessRoles={AccessRoles}\r\n          isTurnAllowed={isTurnAllowed}\r\n          isNestedRoute={isNestedRoute}\r\n        />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DoctorItems;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"MenuOptions\":\"Main_Menu_MenuOptions__6q8nK\"};","import { GlobalContext } from 'Global/Context/GlobalContextProvider';\r\nimport FindLangKey from 'Global/Functions/FindLangKey/FindLangKey';\r\nimport { useAtom } from 'jotai';\r\nimport Cookies from 'js-cookie';\r\nimport React, { useContext, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { sideBarLinks } from 'Routes/Protected/MainPage/shared/side.bar.links';\r\nimport { IconAtom } from './useCacheIcons/IconAtom';\r\n\r\nconst useLinkCreatorBl = (\r\n  screenWidth,\r\n  Links,\r\n  AccessRoles,\r\n  isTurnAllowed\r\n) => {\r\n  const quartering_label = FindLangKey(\r\n    'page-title-quartering'\r\n  );\r\n\r\n  const invoiceReceipt_label = FindLangKey(\r\n    'main-menu-button-invoice-receipt'\r\n  );\r\n\r\n  const lab_actions = FindLangKey(\r\n    'main-menu-button-lab-actions'\r\n  );\r\n\r\n  const pato_title = FindLangKey(\r\n    'patologoy-lab-route-title'\r\n  );\r\n\r\n  const GlobalConstants = useContext(GlobalContext);\r\n  const userCookie = Cookies.get('user');\r\n\r\n  const userAccessRole =\r\n    userCookie && JSON.parse(userCookie)?.AccessRole;\r\n\r\n  const responsiveGirds = (theme) => ({\r\n    gridTemplateColumns:\r\n      GlobalConstants.MoreColumns\r\n        ? screenWidth > 1024\r\n          ? 'repeat(4, 1fr) !important'\r\n          : 'repeat(4, 1fr) !important'\r\n        : screenWidth > 1024\r\n        ? 'repeat(3, 10em) !important'\r\n        : 'repeat(3, 1fr) !important',\r\n    justifyContent: screenWidth > 1024 ? 'center' : '',\r\n    alignItems: screenWidth > 1024 ? 'center' : '',\r\n  });\r\n\r\n  const { pathname } = useLocation();\r\n\r\n  const pathParts = pathname.split('/');\r\n  const isNestedRoute =\r\n    pathParts[1] === 'main' && pathParts.length > 2;\r\n\r\n  const [test, setSideBarLinks] = useAtom(sideBarLinks);\r\n\r\n  const cant_get_newTurn_label = FindLangKey(\r\n    'get-new-turn-turn-label-cant-get-new-turn'\r\n  );\r\n\r\n  const [icons] = useAtom(IconAtom);\r\n  const cachedIcons =\r\n    icons || JSON.parse(localStorage.getItem('icons'));\r\n\r\n  const isOnlyPatient =\r\n    userAccessRole?.includes('Patient') &&\r\n    userAccessRole?.length === 1 &&\r\n    screenWidth > 1024;\r\n\r\n\r\n \r\n  const personelWage_links =\r\n    screenWidth > 1024\r\n      ? [\r\n          {\r\n            Picture:\r\n              'data:image/svg+xml;base64,' +\r\n              cachedIcons?.MenueIcon['InvoiceReceipt.svg'],\r\n            Route: 'InvoiceReceipt',\r\n            Title: invoiceReceipt_label,\r\n          },\r\n          {\r\n            Picture:\r\n              'data:image/svg+xml;base64,' +\r\n              cachedIcons?.MenueIcon['CheckInout.svg'],\r\n            Route: 'Quartering',\r\n            Title: quartering_label,\r\n          },\r\n        ]\r\n      : [\r\n          {\r\n            Picture:\r\n              'data:image/svg+xml;base64,' +\r\n              cachedIcons?.MenueIcon['InvoiceReceipt.svg'],\r\n            Route: isOnlyPatient\r\n              ? 'InvoiceReceipt'\r\n              : '/InvoiceReceipt',\r\n            Title: invoiceReceipt_label,\r\n          },\r\n          {\r\n            Picture:\r\n              'data:image/svg+xml;base64,' +\r\n              cachedIcons?.MenueIcon['CheckInout.svg'],\r\n            Route: isOnlyPatient\r\n              ? 'Quartering'\r\n              : '/Quartering',\r\n            Title: quartering_label,\r\n          },\r\n        ];\r\n\r\n  const labs_link =\r\n    screenWidth > 1024\r\n      ? [\r\n          {\r\n            Picture:\r\n              'data:image/svg+xml;base64,' +\r\n              cachedIcons?.MenueIcon['AnswerTestLab.svg'],\r\n            Route: 'Lab',\r\n            Title: lab_actions,\r\n          },\r\n          {\r\n            Picture:\r\n              'data:image/svg+xml;base64,' +\r\n              cachedIcons?.MenueIcon[\r\n                'Specializedlaboratory.svg'\r\n              ],\r\n            Route: 'Pato',\r\n            Title: pato_title,\r\n          },\r\n        ]\r\n      : [\r\n          {\r\n            Picture:\r\n              'data:image/svg+xml;base64,' +\r\n              cachedIcons?.MenueIcon['AnswerTestLab.svg'],\r\n            Route: isOnlyPatient ? 'Lab' : '/Lab',\r\n            Title: lab_actions,\r\n          },\r\n          {\r\n            Picture:\r\n              'data:image/svg+xml;base64,' +\r\n              cachedIcons?.MenueIcon[\r\n                'Specializedlaboratory.svg'\r\n              ],\r\n            Route: isOnlyPatient ? 'Pato' : '/Pato',\r\n            Title: pato_title,\r\n          },\r\n        ];\r\n\r\n  useEffect(() => {\r\n    if (!Links) {\r\n      return;\r\n    }\r\n    if (\r\n      Links?.map(\r\n        (option, i) =>\r\n          AccessRoles?.map((role) =>\r\n            role.toLowerCase()\r\n          )?.includes(option.Route.toLowerCase()) ||\r\n          AccessRoles?.map((role) =>\r\n            role.toLowerCase().substring(1)\r\n          )?.includes(option.Route.toLowerCase())\r\n      )\r\n    ) {\r\n      const filtered_Routes = Links?.filter(\r\n        (option, i) =>\r\n          AccessRoles?.map((role) =>\r\n            role.toLowerCase()\r\n          )?.includes(option.Route.toLowerCase()) ||\r\n          AccessRoles?.map((role) =>\r\n            role.toLowerCase().substring(1)\r\n          )?.includes(option.Route.toLowerCase())\r\n      );\r\n\r\n      setSideBarLinks(filtered_Routes);\r\n    }\r\n  }, [\r\n    JSON.stringify(Links),\r\n    JSON.stringify(AccessRoles),\r\n    isTurnAllowed,\r\n  ]);\r\n\r\n  const patient_label = FindLangKey(\r\n    'general-public-label-patient-role'\r\n  );\r\n  const doctor_label = FindLangKey(\r\n    'general-public-label-doctor-role'\r\n  );\r\n\r\n  const doctorItems =\r\n    Links &&\r\n    Links?.filter(\r\n      (option, i) =>\r\n        (AccessRoles?.map((role) =>\r\n          role.toLowerCase()\r\n        )?.includes(option.Route.toLowerCase()) ||\r\n          AccessRoles?.map((role) =>\r\n            role.toLowerCase().substring(1)\r\n          )?.includes(option.Route.toLowerCase())) &&\r\n        !option?.IdPatient\r\n    );\r\n    const patientItems =\r\n    Links &&\r\n    Links?.filter(\r\n      (option, i) =>\r\n        (AccessRoles?.map((role) =>\r\n          role.toLowerCase()\r\n        )?.includes(option.Route.toLowerCase()) ||\r\n          AccessRoles?.map((role) =>\r\n            role.toLowerCase().substring(1)\r\n          )?.includes(option.Route.toLowerCase())) &&\r\n        option?.IdPatient)\r\n\r\n  return {\r\n    patient_label,\r\n    doctor_label,\r\n    doctorItems,\r\n    responsiveGirds,\r\n    isNestedRoute,\r\n    personelWageLinks: personelWage_links,\r\n    labLinks: labs_link,\r\n    patientItems\r\n  };\r\n};\r\n\r\nexport default useLinkCreatorBl;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport ComponentMemoizer from 'Global/Components/ComponentMemoizer/ComponentMemoizer';\r\nimport { sideBarLinks } from 'Routes/Protected/MainPage/shared/side.bar.links';\r\nimport { useAtom } from 'jotai';\r\nimport SwalAlert from 'Global/Components/CommonComponents/SwalAlert/SwalAlert';\r\nimport FindLangKey from 'Global/Functions/FindLangKey/FindLangKey';\r\nimport PatientItems from './PatientItems';\r\nimport DoctorItems from './DoctorItems';\r\nimport styles from '../../../../Routes/Protected/MainPage/Styles/Main.Menu.module.scss';\r\nimport { Box, Container, Stack } from '@mui/material';\r\nimport { GlobalContext } from 'Global/Context/GlobalContextProvider';\r\nimport Cookies from 'js-cookie';\r\nimport useLinkCreatorBl from 'Global/Hooks/useLinkCreatorBl';\r\n\r\nconst MenuLinksCreator = ({\r\n  Links,\r\n  AccessRoles,\r\n  isTurnAllowed,\r\n  screenWidth,\r\n}) => {\r\n  const[forceRender,setForceRender] = useState(false);\r\n  const {\r\n    patient_label,\r\n    doctor_label,\r\n    doctorItems,\r\n    responsiveGirds,\r\n    isNestedRoute,\r\n    personelWageLinks,\r\n    labLinks,\r\n    patientItems\r\n  } = useLinkCreatorBl(\r\n    screenWidth,\r\n    Links,\r\n    AccessRoles,\r\n    isTurnAllowed\r\n  );\r\n\r\n  const personelWage_label = FindLangKey(\r\n    'main-menu-devider-label-personel-wage'\r\n  );\r\n  const labsCategory_label = FindLangKey(\r\n    'lab-patient-type-lab'\r\n  );\r\n\r\n  const rootPaths = useContext(GlobalContext)?.rootPaths;\r\n\r\n  const isPersonelWageAccessible =\r\n    rootPaths?.includes('/InvoiceReceipt') ||\r\n    rootPaths.includes('Quartering');\r\n\r\n  const isLabAccessible =\r\n    rootPaths?.includes('/Lab') ||\r\n    rootPaths.includes('/Pato');\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    setForceRender(prev=>!prev);\r\n    setForceRender(prev=>!prev);\r\n    setForceRender(prev=>!prev);\r\n    setForceRender(prev=>!prev);\r\n    setForceRender(prev=>!prev);\r\n  },[])\r\n \r\n \r\n  return (\r\n    <Stack\r\n      marginTop={screenWidth >= 1024 ? '1em' : ''}\r\n      marginRight={screenWidth >= 1024 ? '14.5em' : ''}\r\n      sx={{\r\n        paddingInline: screenWidth > 1024 ? '2em' : '',\r\n      }}\r\n    >\r\n      {patientItems?.length > 0 ? (\r\n        <Container sx={{ mb: '2em' }}>\r\n          <Stack\r\n            direction=\"row\"\r\n            gap=\".5em\"\r\n            alignItems=\"center\"\r\n          >\r\n            <hr\r\n              style={{\r\n                width: '100%',\r\n                padding: 0,\r\n                height: '1px',\r\n              }}\r\n            />\r\n            <p>{patient_label}</p>\r\n          </Stack>\r\n        </Container>\r\n      ) : (\r\n        <br />\r\n      )}\r\n      {forceRender?<p></p>:<></>}\r\n      {screenWidth > 1024 ? <br /> : <></>}\r\n\r\n      <Box\r\n        className={styles.MenuOptions}\r\n        sx={responsiveGirds}\r\n      >\r\n        <PatientItems\r\n          Links={Links}\r\n          AccessRoles={AccessRoles}\r\n          isTurnAllowed={isTurnAllowed}\r\n          isNestedRoute={isNestedRoute}\r\n          screenWidth={screenWidth}\r\n        />\r\n              {forceRender?<p></p>:<></>}\r\n\r\n      </Box>\r\n\r\n      {doctorItems?.length > 0 ? (\r\n        <Container sx={{ my: '2em' }}>\r\n          <Stack\r\n            direction=\"row\"\r\n            gap=\".5em\"\r\n            alignItems=\"center\"\r\n          >\r\n            <hr\r\n              style={{\r\n                width: '100%',\r\n                padding: 0,\r\n                height: '1px',\r\n              }}\r\n            />\r\n            <p>{doctor_label}</p>\r\n          </Stack>\r\n        </Container>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {screenWidth > 1024 ? <br /> : <></>}\r\n      <Box\r\n        className={styles.MenuOptions}\r\n        sx={responsiveGirds}\r\n      >\r\n        <DoctorItems\r\n          Links={Links}\r\n          AccessRoles={AccessRoles}\r\n          isTurnAllowed={isTurnAllowed}\r\n          isNestedRoute={isNestedRoute}\r\n          screenWidth={screenWidth}\r\n        />\r\n              {forceRender?<p></p>:<></>}\r\n\r\n      </Box>\r\n\r\n      {doctorItems?.length > 0 &&\r\n      isPersonelWageAccessible ? (\r\n        <Container sx={{ my: '2em' }}>\r\n          <Stack\r\n            direction=\"row\"\r\n            gap=\".5em\"\r\n            alignItems=\"center\"\r\n          >\r\n            <hr\r\n              style={{\r\n                width: '100%',\r\n                padding: 0,\r\n                height: '1px',\r\n              }}\r\n            />\r\n            <p\r\n              style={{\r\n                width:\r\n                  screenWidth > 1024 ? '7.5em' : '10em',\r\n              }}\r\n            >\r\n              {personelWage_label}\r\n            </p>\r\n          </Stack>\r\n        </Container>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {screenWidth > 1024 ? <br /> : <></>}\r\n      <Box\r\n        className={styles.MenuOptions}\r\n        sx={responsiveGirds}\r\n      >\r\n        <DoctorItems\r\n          Links={personelWageLinks}\r\n          AccessRoles={AccessRoles}\r\n          isTurnAllowed={isTurnAllowed}\r\n          isNestedRoute={isNestedRoute}\r\n          screenWidth={screenWidth}\r\n        />\r\n      </Box>\r\n\r\n      {doctorItems?.length > 0 && isLabAccessible ? (\r\n        <Container sx={{ my: '2em' }}>\r\n          <Stack\r\n            direction=\"row\"\r\n            gap=\".5em\"\r\n            alignItems=\"center\"\r\n          >\r\n            <hr\r\n              style={{\r\n                width: '100%',\r\n                padding: 0,\r\n                height: '1px',\r\n              }}\r\n            />\r\n            <p\r\n              style={{\r\n                width:\r\n                  screenWidth > 1024 ? '7.5em' : '10em',\r\n              }}\r\n            >\r\n              {labsCategory_label}\r\n            </p>\r\n          </Stack>\r\n        </Container>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {screenWidth > 1024 ? <br /> : <></>}\r\n      <Box\r\n        className={styles.MenuOptions}\r\n        sx={responsiveGirds}\r\n      >\r\n        <DoctorItems\r\n          Links={labLinks}\r\n          AccessRoles={AccessRoles}\r\n          isTurnAllowed={isTurnAllowed}\r\n          isNestedRoute={isNestedRoute}\r\n          screenWidth={screenWidth}\r\n        />\r\n      </Box>\r\n      {forceRender?<p></p>:<></>}\r\n\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default MenuLinksCreator;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"CarouselContainer\":\"Image_Carousel_CarouselContainer__S9zni\"};","import React, { useEffect, useState } from \"react\";\r\n\r\nconst useInfiniteCarouselSlide = (images, carouselRef) => {\r\n  const [slideLocation, setSlideLocation] = useState(null);\r\n\r\n  const listLength = images?.List[0]?.imageList?.length;\r\n  function countdownTimer(startNumber, delay) {\r\n    let counter = startNumber;\r\n    const timer = setInterval(() => {\r\n      if (carouselRef.current) {\r\n        carouselRef.current.goTo(counter);\r\n        counter--;\r\n        if (counter < 0) {\r\n          clearInterval(timer);\r\n        }\r\n      }\r\n    }, delay);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const timeOut = setTimeout(() => {\r\n      if (slideLocation === listLength - 1) {\r\n        countdownTimer(listLength - 1, 9950);\r\n      }\r\n    }, 10000);\r\n\r\n    return () => {\r\n      clearTimeout(timeOut);\r\n    };\r\n  }, [slideLocation]);\r\n\r\n  return [setSlideLocation,slideLocation];\r\n};\r\n\r\nexport default useInfiniteCarouselSlide;\r\n","import React from 'react';\r\nimport { Card } from '@mui/material';\r\nimport { ArabicToPersian } from 'utils/ConvertToPersianTextFromArabic';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { pageAdAtom } from 'Global/shared/adv.page.atom';\r\nimport { useAtom } from 'jotai';\r\nimport FrameCard from 'Global/Components/CommonComponents/FrameCard/FrameCard';\r\n\r\nconst NonCarousel = ({ images }) => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        style={{\r\n          marginInline: '5%',\r\n          // marginTop: '-10em',\r\n        }}\r\n      >\r\n        {images?.map((image, index) => (\r\n          <FrameCard\r\n            key={image.Id}\r\n            cardProps={{\r\n              borderRadius: '.3em',\r\n              marginBlock: '1em',\r\n              padding: '.3em',\r\n              borderRadius: '20px',\r\n            }}\r\n            jsx={\r\n              <div\r\n                style={{\r\n                  backgroundColor: 'white',\r\n                  borderRadius: '20px',\r\n                }}\r\n                onClick={() => {\r\n                  // sessionStorage.setItem(\r\n                  //   'advImages',\r\n                  //   JSON.stringify(images)\r\n                  // );\r\n                  // navigate('/adv');\r\n                  window.open(image?.linkAddress, '_blank');\r\n\r\n                  // window.location.href = image?.linkAddress;\r\n                }}\r\n              >\r\n                <img\r\n                  src={image?.imageList[0]?.Base64Image}\r\n                  alt={image?.Description}\r\n                  style={{\r\n                    width: '100%',\r\n                    height: '11.75em',\r\n                    borderRadius: '20px 20px 0 0',\r\n                  }}\r\n                />\r\n                <p\r\n                  style={{\r\n                    textAlign: 'center',\r\n                  }}\r\n                >\r\n                  {ArabicToPersian(image?.Header)}\r\n                </p>\r\n              </div>\r\n            }\r\n          />\r\n        ))}\r\n      </div>\r\n      <div style={{ paddingBlock: '1em' }}></div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NonCarousel;\r\n\r\n{\r\n  /* <Card\r\nelevation={2}\r\nsx={{\r\n  borderRadius: '.3em',\r\n  marginBlock: '1em',\r\n}}\r\n\r\n>\r\n\r\n</Card> */\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport Carousel from 'react-elastic-carousel';\r\nimport styles from '../../Styles/Image.Carousel.module.scss';\r\nimport { Stack, Container } from '@mui/material';\r\nimport { ArabicToPersian } from 'utils/ConvertToPersianTextFromArabic';\r\nimport useInfiniteCarouselSlide from '../../Hooks/useInfiniteCarouselSlide';\r\nimport NonCarousel from '../NonCarousel/NonCarousel';\r\n\r\nconst ImageCarousel = ({ images }) => {\r\n  const carouselRef = useRef(null);\r\n\r\n  const [setSlideLocation, slideLocation] =\r\n    useInfiniteCarouselSlide(images, carouselRef);\r\n\r\n  // const images = useCallCarouselFetcher();\r\n  const breakPoints = [\r\n    { width: 1, itemsToShow: 1 },\r\n    { width: 550, itemsToShow: 2, itemsToScroll: 2 },\r\n    { width: 768, itemsToShow: 1 },\r\n    { width: 1200, itemsToShow: 1 },\r\n  ];\r\n  const myArrow = () => <></>;\r\n\r\n  return (\r\n    <div className={styles.CarouselContainer}>\r\n      <div className=\"carousel-wrapper\">\r\n        {images ? (\r\n          <Stack>\r\n            <Carousel\r\n              ref={carouselRef}\r\n              initialActiveIndex={0}\r\n              breakPoints={breakPoints}\r\n              renderArrow={myArrow}\r\n              enableAutoPlay\r\n              autoPlaySpeed={10000}\r\n              onChange={(val, index) => {\r\n                setSlideLocation(index);\r\n              }}\r\n            >\r\n              {images?.List.filter(\r\n                (fl) => fl.ShowInBanner\r\n              )?.map((element) =>\r\n                element?.imageList\r\n                  .filter((el) => el.ShowInBannerDetail)\r\n                  .map((imageList) => {\r\n                    return (\r\n                      <Stack position=\"relative\">\r\n                        <p\r\n                          style={{\r\n                            position: 'absolute',\r\n                            bottom: 20,\r\n                            right: 10,\r\n                          }}\r\n                        >\r\n                          {ArabicToPersian(element?.Header)}\r\n                        </p>\r\n                        <img\r\n                          style={{\r\n                            width: '22.5em',\r\n                            height: '13.75em',\r\n                            objectFit: 'cover',\r\n                            padding: 0,\r\n                            margin: 0,\r\n                          }}\r\n                          src={imageList.Base64Image}\r\n                          alt={imageList.Description}\r\n                          onClick={() => {\r\n                            window.open(\r\n                              imageList?.ImageLink,\r\n                              '_blank'\r\n                            );\r\n                          }}\r\n                        />\r\n                      </Stack>\r\n                    );\r\n                  })\r\n              )}\r\n            </Carousel>\r\n          </Stack>\r\n        ) : (\r\n          <div style={{ paddingBlock: '1em' }}></div>\r\n        )}\r\n\r\n        <div></div>\r\n      </div>\r\n      <br />\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageCarousel;\r\n","import Dexie from 'dexie';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nlet db = new Dexie('carouselDb');\r\ndb.version(1).stores({\r\n  images: '++id, url',\r\n});\r\n\r\nconst useCacheCarouselImages = (newImages) => {\r\n  const [cachedImages, setCachedImages] = useState(null);\r\n\r\n  async function addImages(images) {\r\n    const existingImages = await db.images.toArray();\r\n\r\n    const newImagesToAdd = images.filter((image) => {\r\n      return !existingImages.some(\r\n        (existingImage) => existingImage.url === image.url\r\n      );\r\n    });\r\n\r\n    if (newImagesToAdd.length > 0) {\r\n      await db.images.bulkAdd(newImagesToAdd);\r\n      console.log(\r\n        `Added ${newImagesToAdd.length} new images to the database.`\r\n      );\r\n    } else {\r\n      // console.log('No new images to add.');\r\n    }\r\n  }\r\n\r\n  async function getImagesArray(retryCount = 0) {\r\n    try {\r\n      const images = await db.images.toArray();\r\n      return images;\r\n    } catch (err) {\r\n      if (err.name === 'DatabaseClosedError' && retryCount < 3) {\r\n        console.log('Database closed. Attempting to reopen...');\r\n        db = new Dexie('carouselDb');\r\n        db.version(1).stores({\r\n          images: '++id, url',\r\n        });\r\n        await db.open();\r\n        return getImagesArray(retryCount + 1);\r\n      } else {\r\n        console.error(\r\n          'Error retrieving images from database:',\r\n          err\r\n        );\r\n        return [];\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchAndCacheImages = async () => {\r\n      const cachedImagesArray = await getImagesArray();\r\n      if (cachedImagesArray.length > 0) {\r\n        localStorage.setItem(\r\n          'carouselCached',\r\n          JSON.stringify(true)\r\n        );\r\n        return;\r\n      }\r\n      localStorage.setItem(\r\n        'carouselCached',\r\n        JSON.stringify(false)\r\n      );\r\n    };\r\n\r\n    fetchAndCacheImages();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchAndCacheImages = async () => {\r\n      const cachedImagesArray = await getImagesArray();\r\n\r\n      if (cachedImagesArray.length > 0) {\r\n        localStorage.setItem(\r\n          'carouselCached',\r\n          JSON.stringify(true)\r\n        );\r\n        setCachedImages({\r\n          List: cachedImagesArray,\r\n        });\r\n      } else if (newImages) {\r\n        localStorage.setItem(\r\n          'carouselCached',\r\n          JSON.stringify(true)\r\n        );\r\n        await addImages(newImages);\r\n        const updatedCachedImagesArray =\r\n          await getImagesArray();\r\n        setCachedImages({\r\n          List: updatedCachedImagesArray,\r\n        });\r\n      }\r\n    };\r\n\r\n    fetchAndCacheImages();\r\n  }, [newImages]);\r\n\r\n  return cachedImages;\r\n};\r\n\r\nexport default useCacheCarouselImages;","import React from 'react';\r\nimport { GetCarouselImage } from '../Adapters/GetCarouselImage';\r\nimport useCacheCarouselImages from './useCacheCarouselImages';\r\n\r\nconst useCallCarouselFetcher = () => {\r\n  const areImagesCached =\r\n    localStorage.getItem('carouselCached') &&\r\n    JSON.parse(localStorage.getItem('carouselCached'));\r\n\r\n  const [images, setCarouselImages] = React.useState(()=>    localStorage.getItem('carouselCached') &&\r\n  JSON.parse(localStorage.getItem('carouselCached')));\r\n\r\n  const cachedImages = useCacheCarouselImages(images?.List);\r\n\r\n  // console.log('cachedImages=>', cachedImages);\r\n\r\n  React.useEffect(() => {\r\n    if (!areImagesCached) {\r\n      GetCarouselImage().then((response) => {\r\n        setCarouselImages(response.data.Data);\r\n      });\r\n    }\r\n  }, [areImagesCached]);\r\n\r\n  return cachedImages;\r\n};\r\n\r\nexport default useCallCarouselFetcher;\r\n","import { Post } from 'Xhr/Xhr';\r\nimport { env } from 'env';\r\n\r\nexport const GetCarouselImage = async () => {\r\n  return Post(\r\n    'POST',\r\n    `${process.env.REACT_APP_API_URL_API_GET_AD_LIST_IMAGE}`,\r\n    false,\r\n    {\r\n      MobileOrPc: true,\r\n      OutOrInLogin: true,\r\n      PatientOrPerson: false,\r\n    }\r\n  );\r\n};\r\n","import FindLangKey from 'Global/Functions/FindLangKey/FindLangKey';\r\nimport { IconAtom } from 'Global/Hooks/useCacheIcons/IconAtom';\r\nimport { useAtom } from 'jotai';\r\nimport Cookies from 'js-cookie';\r\n\r\nexport const DesktopLinks = (isTurnAllowed) => {\r\n  const [icons] = useAtom(IconAtom);\r\n  const cachedIcons =\r\n    icons || JSON.parse(localStorage.getItem('icons'));\r\n\r\n  const IdPatient = Cookies.get('user')\r\n    ? JSON.parse(Cookies.get('user')).IdPatient\r\n    : '';\r\n\r\n  const currentPatientTitle = FindLangKey(\r\n    'main-menu-button-current-patient'\r\n  );\r\n  const patientsListTitle = FindLangKey(\r\n    'general-public-patients-list'\r\n  );\r\n  const newReferralTitle = FindLangKey(\r\n    'general-public-new-refferal'\r\n  );\r\n  const performanceReportTitle = FindLangKey(\r\n    'general-public-performance-report'\r\n  );\r\n  const uploadFileTitle = FindLangKey(\r\n    'main-menu-button-upload-file'\r\n  );\r\n  const wageTitle = FindLangKey('main-menu-button-wage');\r\n  const getAppointmentTitle = FindLangKey(\r\n    'main-menu-button-get-appointment'\r\n  );\r\n  const appointmentsTitle = FindLangKey(\r\n    'main-menu-button-appointments'\r\n  );\r\n  const labTestResultTitle = FindLangKey(\r\n    'lab-test-result-navbar-title-lab'\r\n  );\r\n  const freezeContractTitle = FindLangKey(\r\n    'main-menu-drawer-link-freeze-contract'\r\n  );\r\n  const invoiceReceiptTitle = FindLangKey(\r\n    'main-menu-button-invoice-receipt'\r\n  );\r\n  const quarteringTitle = FindLangKey(\r\n    'page-title-quartering'\r\n  );\r\n  const labActionsTitle = FindLangKey(\r\n    'main-menu-button-lab-actions'\r\n  );\r\n  const patologoyLabTitle = FindLangKey(\r\n    'patologoy-lab-route-title'\r\n  );\r\n  const fileArchive_label = FindLangKey(\r\n    'genral-public-btn-label-download-file'\r\n  );\r\n  const SendfileArchive_label = FindLangKey(\r\n    'main-menu-button-patient-send-file'\r\n  );\r\n  const pacsImages = FindLangKey(\r\n    'main-menu-button-pacs-images'\r\n  );\r\n\r\n  const PatientSurveyList_title = FindLangKey(\r\n    'user-survey-route-title'\r\n  );\r\n\r\n  const PatientCartable_label = FindLangKey(\r\n    'patient-cartable-navbar-title'\r\n  );\r\n\r\n  const patientForVisit_label = FindLangKey(\r\n    'patients-for-visit-navbar-title'\r\n  );\r\n  const savePatientsForVisit_label = FindLangKey(\r\n    'save-patients-for-visit-navbar-title'\r\n  );\r\n  const submitErjaTitle = FindLangKey(\r\n    'submit-erja-title'\r\n  );\r\n\r\n  const data = [\r\n    // svg file names are equivalent to route names\r\n\r\n    IdPatient === 0\r\n      ? null\r\n      : {\r\n          Picture:\r\n            'data:image/svg+xml;base64,' +\r\n            cachedIcons?.MenueIcon['NewTurnLine.svg'],\r\n          Route: 'GetNewTurn',\r\n          Title: getAppointmentTitle,\r\n          IdPatient,\r\n        },\r\n    IdPatient === 0\r\n      ? null\r\n      : {\r\n          Picture:\r\n            'data:image/svg+xml;base64,' +\r\n            cachedIcons?.MenueIcon['Turns.svg'],\r\n          Route: 'TurnList',\r\n          Title: appointmentsTitle,\r\n          IdPatient,\r\n        },\r\n    IdPatient === 0\r\n      ? null\r\n      : {\r\n          Picture:\r\n            'data:image/svg+xml;base64,' +\r\n            cachedIcons?.MenueIcon['Seeanswer.svg'],\r\n          Route: 'LabTestResult',\r\n          Title: labTestResultTitle,\r\n          IdPatient,\r\n        },\r\n    IdPatient === 0\r\n      ? null\r\n      : {\r\n          Picture:\r\n            'data:image/svg+xml;base64,' +\r\n            cachedIcons?.MenueIcon['FreezeContract.svg'],\r\n          Route: 'FreezeContract',\r\n          Title: freezeContractTitle,\r\n          IdPatient,\r\n        },\r\n\r\n    IdPatient === 0\r\n      ? null\r\n      : {\r\n          Picture:\r\n            'data:image/svg+xml;base64,' +\r\n            cachedIcons?.MenueIcon['DownloadFile.svg'],\r\n          Route: 'FileArchive',\r\n          Title: fileArchive_label,\r\n          IdPatient,\r\n        },\r\n\r\n    IdPatient === 0\r\n      ? null\r\n      : {\r\n          Picture:\r\n            'data:image/svg+xml;base64,' +\r\n            cachedIcons?.MenueIcon['Medicalimages.svg'],\r\n          Route: 'pacsImages',\r\n          Title: pacsImages,\r\n          IdPatient,\r\n        },\r\n    IdPatient === 0\r\n      ? null\r\n      : {\r\n          Picture:\r\n            'data:image/svg+xml;base64,' +\r\n            cachedIcons?.MenueIcon['UploadFile.svg'],\r\n          Route: 'SendFileArchive',\r\n\r\n          Title: SendfileArchive_label,\r\n          IdPatient,\r\n        },\r\n\r\n    {\r\n      Picture:\r\n        'data:image/svg+xml;base64,' +\r\n        cachedIcons?.MenueIcon['CurrentPatient.svg'],\r\n\r\n      Route: 'CurrentPatients',\r\n      Title: currentPatientTitle,\r\n    },\r\n    {\r\n      Picture:\r\n        'data:image/svg+xml;base64,' +\r\n        cachedIcons?.MenueIcon['PatientList.svg'],\r\n      Route: 'PatientList',\r\n      Title: patientsListTitle,\r\n    },\r\n    {\r\n      Picture:\r\n        'data:image/svg+xml;base64,' +\r\n        cachedIcons?.MenueIcon['PatientReferral.svg'],\r\n      Route: 'SearchPatientForErja',\r\n      Title: newReferralTitle,\r\n    },\r\n    {\r\n      Picture:\r\n        'data:image/svg+xml;base64,' +\r\n        cachedIcons?.MenueIcon['PerformanceReport.svg'],\r\n      Route: 'ServiceReportSummary',\r\n      Title: performanceReportTitle, //title is the text goes on top bar of each section\r\n    },\r\n    {\r\n      Picture:\r\n        'data:image/svg+xml;base64,' +\r\n        cachedIcons?.MenueIcon['Upload.svg'],\r\n      Route: '',\r\n      Title: uploadFileTitle,\r\n    },\r\n    {\r\n      Picture:\r\n        'data:image/svg+xml;base64,' +\r\n        cachedIcons?.MenueIcon['Wage.svg'],\r\n      Route: '',\r\n      Title: wageTitle,\r\n    },\r\n\r\n    // {\r\n    //   Picture:\r\n    //     'data:image/svg+xml;base64,' +\r\n    //     cachedIcons?.MenueIcon['InvoiceReceipt.svg'],\r\n    //   Route: 'InvoiceReceipt',\r\n    //   Title: invoiceReceiptTitle,\r\n    // },\r\n    // {\r\n    //   Picture:\r\n    //     'data:image/svg+xml;base64,' +\r\n    //     cachedIcons?.MenueIcon['CheckInout.svg'],\r\n    //   Route: 'Quartering',\r\n    //   Title: quarteringTitle,\r\n    // },\r\n\r\n    // {\r\n    //   Picture:\r\n    //     'data:image/svg+xml;base64,' +\r\n    //     cachedIcons?.MenueIcon['AnswerTestLab.svg'],\r\n    //   Route: 'Lab',\r\n    //   Title: labActionsTitle,\r\n    // },\r\n    // {\r\n    //   Picture:\r\n    //     'data:image/svg+xml;base64,' +\r\n    //     cachedIcons?.MenueIcon['Specializedlaboratory.svg'],\r\n    //   Route: 'Pato',\r\n    //   Title: patologoyLabTitle,\r\n    // },\r\n\r\n    IdPatient === 0\r\n      ? null\r\n      : {\r\n          Picture:\r\n            'data:image/svg+xml;base64,' +\r\n            cachedIcons?.MenueIcon['Poll.svg'],\r\n          Route: 'PatientSurveyList',\r\n          Title: PatientSurveyList_title,\r\n          IdPatient,\r\n        },\r\n    IdPatient === 0\r\n      ? null\r\n      : {\r\n          Picture:\r\n            'data:image/svg+xml;base64,' +\r\n            cachedIcons?.MenueIcon['workReport.svg'],\r\n          Route: 'Cartable',\r\n          Title: PatientCartable_label,\r\n          IdPatient,\r\n        },\r\n    {\r\n      Picture:\r\n        'data:image/svg+xml;base64,' +\r\n        cachedIcons?.MenueIcon['PatientList.svg'],\r\n      Route: 'PatientsForVisit',\r\n      Title: patientForVisit_label,\r\n    },\r\n    {\r\n      Picture:\r\n        'data:image/svg+xml;base64,' +\r\n        cachedIcons?.MenueIcon['Reception.svg'],\r\n      Route: 'SavePatientsForVisit',\r\n\r\n      Title: submitErjaTitle,\r\n    },\r\n \r\n  ];\r\n  return data.filter((fl) => fl !== null);\r\n};\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport Carousel from 'react-elastic-carousel';\r\nimport styles from '../../Styles/Image.Carousel.module.scss';\r\nimport { Stack, Container } from '@mui/material';\r\nimport { ArabicToPersian } from 'utils/ConvertToPersianTextFromArabic';\r\nimport useInfiniteCarouselSlide from '../../Hooks/useInfiniteCarouselSlide';\r\nimport NonCarousel from '../NonCarousel/NonCarousel';\r\n\r\nconst DesktopCarousel = ({ images, screenWidth }) => {\r\n  const carouselRef = useRef(null);\r\n\r\n  const [setSlideLocation, slideLocation] =\r\n    useInfiniteCarouselSlide(images, carouselRef);\r\n\r\n  // const images = useCallCarouselFetcher();\r\n  const breakPoints = [\r\n    { width: 1, itemsToShow: 1 },\r\n    { width: 550, itemsToShow: 2, itemsToScroll: 2 },\r\n    { width: 768, itemsToShow: 3 },\r\n    { width: 1200, itemsToShow: 3 },\r\n  ];\r\n  const myArrow = () => <></>;\r\n\r\n  return (\r\n    <div className={styles.CarouselContainer}>\r\n      <div className=\"carousel-wrapper\">\r\n        {images ? (\r\n          <Stack>\r\n            <Carousel\r\n              ref={carouselRef}\r\n              initialActiveIndex={0}\r\n              breakPoints={breakPoints}\r\n              renderArrow={myArrow}\r\n              enableAutoPlay\r\n              autoPlaySpeed={10000}\r\n              onChange={(val, index) => {\r\n                setSlideLocation(index);\r\n              }}\r\n            >\r\n              {images?.List?.map((element) =>\r\n                element?.imageList.map((imageList) => {\r\n                  return (\r\n                    <Stack position=\"relative\">\r\n                      <p\r\n                        style={{\r\n                          position: 'absolute',\r\n                          bottom: 20,\r\n                          right: 10,\r\n                          backgroundColor: 'white',\r\n                          width: '100%',\r\n                          borderRadius: '0 10px 10px 10px',\r\n                          paddingRight: '.2em',\r\n                        }}\r\n                      >\r\n                        {ArabicToPersian(element?.Header)}\r\n                      </p>\r\n                      <img\r\n                        style={{\r\n                          width:\r\n                            screenWidth >= 768 &&\r\n                            screenWidth <= 1360\r\n                              ? '25em'\r\n                              : '22.5em',\r\n                          height:\r\n                            screenWidth >= 768 &&\r\n                            screenWidth <= 1360\r\n                              ? '14.5em'\r\n                              : '13.75em',\r\n                          objectFit: 'cover',\r\n                          padding: 0,\r\n                          margin: 0,\r\n                        }}\r\n                        src={imageList.Base64Image}\r\n                        alt={imageList.Description}\r\n                        onClick={() => {\r\n                          window.open(\r\n                            imageList?.ImageLink,\r\n                            '_blank'\r\n                          );\r\n                        }}\r\n                      />\r\n                    </Stack>\r\n                  );\r\n                })\r\n              )}\r\n            </Carousel>\r\n          </Stack>\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        <div></div>\r\n      </div>\r\n      <br />\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DesktopCarousel;\r\n","import MenuLinksCreator from 'Global/Components/Generators/MenuLinksCreator/MenuLinksCreator'\r\nimport React from 'react'\r\n\r\nexport default function GridItems({userAccessRole,allLinks,screenWidth,rootPaths,isTurnAllowed,lnks}) {\r\n  return (\r\n   <>\r\n    {userAccessRole &&\r\n          userAccessRole.includes('Patient') ? (\r\n            <>\r\n              {allLinks.filter(\r\n                (fl) =>\r\n                  rootPaths?.includes(fl.Route) ||\r\n                  lnks\r\n                    ?.map((link) => link.Route)\r\n                    ?.includes(fl.Route)\r\n              ).length > 0 ? (\r\n                userAccessRole?.includes('Patient') ? (\r\n                  <MenuLinksCreator\r\n                    Links={\r\n                      screenWidth > 1024 ? lnks : allLinks\r\n                    }\r\n                    AccessRoles={rootPaths}\r\n                    isTurnAllowed={isTurnAllowed}\r\n                    screenWidth={screenWidth}\r\n                  />\r\n                ) : (\r\n                  <></>\r\n                )\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </>\r\n          ) : (\r\n            userAccessRole && (\r\n              <MenuLinksCreator\r\n                Links={screenWidth > 1024 ? lnks : allLinks}\r\n                AccessRoles={rootPaths}\r\n                isTurnAllowed={isTurnAllowed}\r\n                screenWidth={screenWidth}\r\n              />\r\n            )\r\n          )}\r\n   </>\r\n  )\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport {\r\n  Box,\r\n  Card,\r\n  Stack,\r\n  Alert,\r\n  LinearProgress,\r\n} from '@mui/material';\r\nimport { Links } from './variables/Links';\r\nimport MenuLinksCreator from 'Global/Components/Generators/MenuLinksCreator/MenuLinksCreator';\r\nimport styles from '../../Styles/Main.Menu.module.scss';\r\nimport { useContext } from 'react';\r\nimport { GlobalContext } from 'Global/Context/GlobalContextProvider';\r\nimport useCheckScreenWidth from 'Global/Hooks/useCheckScreenWidth';\r\nimport ImageCarousel from '../ImageCarousel/ImageCarousel';\r\nimport useCallCarouselFetcher from '../../Hooks/useCallCarouselFetcher';\r\nimport { ArabicToPersian } from 'utils/ConvertToPersianTextFromArabic';\r\nimport FindLangKey from 'Global/Functions/FindLangKey/FindLangKey';\r\nimport Cookies from 'js-cookie';\r\nimport { DesktopLinks } from '../MainTopProfileSummary/DesktopLinks';\r\nimport useSetDefaultMenuSelection from '../../Hooks/useSetDefaultMenuSelection';\r\nimport NonCarousel from '../NonCarousel/NonCarousel';\r\nimport DesktopCarousel from '../DesktopCarousel/DesktopCarousel';\r\nimport { useLocation } from 'react-router-dom';\r\nimport useGetProfileImageOnMount from '../../Hooks/useGetProfileImageOnMount';\r\nimport { useAtom } from 'jotai';\r\nimport { ImageAtom } from '../../ImageAtom';\r\nimport AdTicker from '../AdTicker/AdTicker';\r\nimport GridItems from './components/GridItems';\r\n\r\nconst MainMenu = () => {\r\n  const [forceRender, setForceRender] = useState(false);\r\n  const IdPerson =\r\n    Cookies.get('user') &&\r\n    JSON.parse(Cookies.get('user'))?.IdPerson;\r\n\r\n  const [, setRefreshForImage] = useAtom(ImageAtom);\r\n  useGetProfileImageOnMount(setRefreshForImage);\r\n\r\n  const GlobalConstants = useContext(GlobalContext);\r\n  const rootPaths = useContext(GlobalContext)?.rootPaths;\r\n  const isTurnAllowed =\r\n    useContext(GlobalContext)?.isTurnAllowed;\r\n  const lnks = DesktopLinks(isTurnAllowed, IdPerson);\r\n  const roles = useContext(GlobalContext)?.roles;\r\n  const screenWidth = useCheckScreenWidth(); // 1024 for Desktop\r\n  const allLinks = Links(screenWidth, false, IdPerson);\r\n  const images = useCallCarouselFetcher();\r\n\r\n  const pathData = useLocation();\r\n  const currentPath = pathData.pathname;\r\n\r\n  const pathName = window.location.pathname;\r\n\r\n  const no_access_label = FindLangKey(\r\n    'genral-public-no-access-label'\r\n  );\r\n\r\n  const userCookie = Cookies.get('user');\r\n\r\n  const userAccessRole =\r\n    userCookie && JSON.parse(userCookie)?.AccessRole;\r\n\r\n  useEffect(() => {\r\n    if (pathName === '/main') {\r\n      setForceRender((prev) => !prev);\r\n      setForceRender((prev) => !prev);\r\n      setForceRender((prev) => !prev);\r\n      setForceRender((prev) => !prev);\r\n    }\r\n  }, [pathName]);\r\n  return (\r\n    <div\r\n      style={{\r\n        overflow: 'auto',\r\n\r\n        paddingTop: screenWidth > 1024 ? '1em' : '0',\r\n        marginTop: '0',\r\n        display:\r\n          screenWidth > 1900\r\n            ? ''\r\n            : userAccessRole?.includes('Patient') &&\r\n              userAccessRole?.length === 1 &&\r\n              screenWidth > 1024\r\n            ? 'flex'\r\n            : '',\r\n        justifyContent:\r\n          screenWidth > 1900\r\n            ? ''\r\n            : userAccessRole?.includes('Patient') &&\r\n              userAccessRole?.length === 1 &&\r\n              screenWidth > 1024\r\n            ? 'space-evenly'\r\n            : '',\r\n        marginRight: screenWidth > 1900 ? '8em' : '',\r\n        flexDirection: 'column',\r\n        paddingBottom: '1em',\r\n        overflowY: 'auto',\r\n      }}\r\n    >\r\n      {/* {screenWidth > 1024 ? (\r\n        <AdTicker\r\n          headers={images?.List[0]?.Description}\r\n          screenWidth={screenWidth}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )} */}\r\n      <Stack\r\n        sx={{\r\n          marginRight:\r\n            screenWidth > 1024\r\n              ? screenWidth > 1360\r\n                ? '15em'\r\n                : ''\r\n              : '',\r\n        }}\r\n      >\r\n        {screenWidth > 1024 && images?.List?.length > 0 ? (\r\n          <DesktopCarousel\r\n            images={images}\r\n            screenWidth={screenWidth}\r\n          />\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Stack>\r\n      {/* {screenWidth > 1024 ? (\r\n        <></>\r\n      ) : (\r\n        <AdTicker\r\n          headers={images?.List[0]?.imageList?.map(\r\n            (el) => el.Description\r\n          )}\r\n          screenWidth={screenWidth}\r\n        />\r\n      )} */}\r\n\r\n      {screenWidth < 1024 ? (\r\n        <ImageCarousel images={images} />\r\n      ) : (\r\n        <div style={{ paddingBlock: '1em' }}></div>\r\n      )}\r\n      <Stack className=\"main-menu-text\">\r\n        <Box>\r\n          {forceRender ? (\r\n            <GridItems\r\n              userAccessRole={userAccessRole}\r\n              allLinks={allLinks}\r\n              screenWidth={screenWidth}\r\n              rootPaths={rootPaths}\r\n              isTurnAllowed={isTurnAllowed}\r\n              lnks={lnks}\r\n            />\r\n          ) : (\r\n            <GridItems\r\n              userAccessRole={userAccessRole}\r\n              allLinks={allLinks}\r\n              screenWidth={screenWidth}\r\n              rootPaths={rootPaths}\r\n              isTurnAllowed={isTurnAllowed}\r\n              lnks={lnks}\r\n\r\n            />\r\n          )}\r\n        </Box>\r\n        {screenWidth < 1024 ? (\r\n          <Stack>\r\n            {/* <ImageCarousel images={images} /> */}\r\n            <NonCarousel\r\n              images={images?.List.filter(\r\n                (fl) => !fl.ShowInBanner\r\n              )}\r\n            />\r\n          </Stack>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Stack>\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainMenu;\r\n\r\n// {screenWidth <= 1024 ? (\r\n//   <>\r\n//     {roles?.length === 0 ? (\r\n//       <LinearProgress\r\n//         sx={{\r\n//           marginBlock: '2em',\r\n//         }}\r\n//       />\r\n//     ) : (\r\n//       <>\r\n//         {allLinks.filter((fl) =>\r\n//           rootPaths.includes(fl.Route)\r\n//         ).length > 0 ? (\r\n//           <></>\r\n//         ) : (\r\n//           <Stack width=\"100%\" marginBottom=\"2em\">\r\n//             <Alert\r\n//               severity=\"warning\"\r\n//               sx={{\r\n//                 display: 'flex',\r\n//                 justifyContent: 'center',\r\n//                 alignItems: 'center',\r\n//               }}\r\n//             >\r\n//               {no_access_label}\r\n//             </Alert>\r\n//           </Stack>\r\n//         )}\r\n//       </>\r\n//     )}\r\n//   </>\r\n// ) : (\r\n//   <></>\r\n// )}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"frameGradient\":\"Main_Menu_Drawer_frameGradient__P8CQb\",\"ProfileDrawer\":\"Main_Menu_Drawer_ProfileDrawer__fTksD\",\"DrawerCard\":\"Main_Menu_Drawer_DrawerCard__4rcOg\",\"CardStack\":\"Main_Menu_Drawer_CardStack__N95Sd\",\"MenuDrawerSummaryDashBoard\":\"Main_Menu_Drawer_MenuDrawerSummaryDashBoard__JasOP\",\"MenuDrawerSummaryUserImageContainer\":\"Main_Menu_Drawer_MenuDrawerSummaryUserImageContainer__prAW2\",\"MenuDrawerSummaryStackOptions\":\"Main_Menu_Drawer_MenuDrawerSummaryStackOptions__ogB6Y\",\"MenuDrawerSummaryOptions\":\"Main_Menu_Drawer_MenuDrawerSummaryOptions__5gG-+\"};","import { Rating, Stack } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nconst ImageTitleStack = ({\r\n  source,\r\n  alt,\r\n  paragraph,\r\n  accessroleneeded,\r\n  isScore,\r\n}) => {\r\n  return (\r\n    <React.Fragment>\r\n      {!accessroleneeded ? (\r\n        <Stack direction=\"row-reverse\" alignItems=\"center\" spacing={1}>\r\n          {/* <img\r\n            style={{ width: \"20px\", height: \"20px\" }}\r\n            src={source}\r\n            alt={alt}\r\n          /> */}\r\n          {!isScore ? (\r\n            <p>{paragraph && paragraph && paragraph.replace(/ي/g, \"ی\")}</p>\r\n          ) : (\r\n            <Rating\r\n              name=\"read-only\"\r\n              value={paragraph && paragraph / 5}\r\n              readOnly\r\n              dir=\"rtl\"\r\n            />\r\n          )}\r\n        </Stack>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ImageTitleStack;\r\n","import React from 'react';\r\nimport { Stack } from '@mui/material';\r\nimport ImageTitleStack from './ImageTitleStack';\r\nimport { themeColors } from 'Global/JsxThemeColor/JsxThemeColor';\r\n\r\nconst ImageTitlePack = ({ userName }) => {\r\n  const cachedIcons = JSON.parse(\r\n    localStorage.getItem('icons')\r\n  );\r\n  const svgHeader = 'data:image/svg+xml;base64,';\r\n  return (\r\n    <React.Fragment>\r\n      <Stack alignItems=\"center\" spacing={1} mt={1}>\r\n        {/* <ImageTitleStack\r\n          source={FullName}\r\n          alt={\"نام و نام خانوادگی\"}\r\n          paragraph={userName?.FullName}\r\n        /> */}\r\n        {/* <ImageTitleStack\r\n          source={NationalCode}\r\n          alt={\"کدملی\"}\r\n          paragraph={userName?.NationalCode}\r\n        /> */}\r\n        <ImageTitleStack\r\n          source={\r\n            svgHeader +\r\n            cachedIcons?.GeneralIcon['FullName.svg']\r\n          }\r\n          alt={'تخصص'}\r\n          paragraph={userName?.AdditionalInfo?.Speciality}\r\n          accessroleneeded={\r\n            userName.AccessRole &&\r\n            userName?.AccessRole?.includes('Patient')\r\n          }\r\n        />\r\n        <p\r\n          style={{\r\n            color: `${themeColors.ColorPrimary}`,\r\n          }}\r\n        >\r\n          {userName?.NationalCode}\r\n        </p>\r\n        {/* \r\n        <ImageTitleStack\r\n          source={svgHeader + cachedIcons?.GeneralIcon[\"Score.svg\"]}\r\n          alt={\"امتیاز\"}\r\n          paragraph={userName?.AdditionalInfo?.Score}\r\n          isScore={true}\r\n        /> */}\r\n      </Stack>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ImageTitlePack;\r\n","import React from 'react';\r\nimport { Stack } from '@mui/material';\r\n\r\nimport Cookies from 'js-cookie';\r\nimport ImageTitlePack from './ImageTitlePack';\r\nimport { ArabicToPersian } from 'utils/ConvertToPersianTextFromArabic';\r\nimport { themeColors } from 'Global/JsxThemeColor/JsxThemeColor';\r\nimport { AccountCircle } from '@mui/icons-material';\r\n\r\nconst MenuDrawerSummary = ({ styles }) => {\r\n  const userName =\r\n    Cookies.get('user') !== undefined &&\r\n    JSON.parse(Cookies.get('user'));\r\n  const userImage =\r\n    localStorage.getItem('userImage') !== null &&\r\n    JSON.parse(localStorage.getItem('userImage'));\r\n\r\n  const cachedIcons = JSON.parse(\r\n    localStorage.getItem('icons')\r\n  );\r\n  const imgHeader = 'data:image/svg+xml;base64,';\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Stack mt=\".5em\">\r\n        <Stack alignItems=\"center\" gap=\".3em\">\r\n          {userImage?.length > 0 ? (\r\n            <img\r\n              src={`data:image/*;base64,${userImage}`}\r\n              alt=\"عکس کاربر\"\r\n              loading=\"...\"\r\n              width={75}\r\n              height={75}\r\n              style={{ borderRadius: '.3em',border:`1px solid ${themeColors.ColorPrimary}` }}\r\n            />\r\n          ) : (\r\n            <AccountCircle\r\n              sx={{\r\n                width: '6em',\r\n                height: '6em',\r\n                fill: `${themeColors.ColorSecondary} !important`,\r\n              }}\r\n            />\r\n          )}\r\n\r\n          <p\r\n            style={{\r\n              color: `${themeColors.ColorSecondary} !important`,\r\n            }}\r\n          >\r\n            {ArabicToPersian(userName?.FullName)}\r\n          </p>\r\n        </Stack>\r\n\r\n        <ImageTitlePack userName={userName} />\r\n      </Stack>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MenuDrawerSummary;\r\n","import React from \"react\";\r\nimport useLogOutUser from \"../Hooks/useLogOutUser\";\r\nimport FindLangKey from \"Global/Functions/FindLangKey/FindLangKey\";\r\nimport { ExitToApp } from \"@mui/icons-material\";\r\nconst LogOutButton = ({ setDrawerOpen ,Exite}) => {\r\n  const { LogUserOut } = useLogOutUser(setDrawerOpen);\r\n  return (\r\n    <React.Fragment>\r\n      <span\r\n        onClick={() => LogUserOut()}\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row-reverse\",\r\n          alignItems: \"center\",\r\n          gap: \".5em\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n           <img\r\n            src={Exite}\r\n            alt={FindLangKey(\"main-menu-drawer-link-log-out\")}\r\n            width=\"25em\"\r\n            height=\"25em\"\r\n            style={{\r\n              background: Exite,\r\n              cursor: 'pointer',\r\n              backgroundPosition: 'center center',\r\n              backgroundSize: 'cover',\r\n            }}\r\n          />\r\n        {FindLangKey(\"main-menu-drawer-link-log-out\")}\r\n      </span>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default LogOutButton;\r\n","import SwalAlert from 'Global/Components/CommonComponents/SwalAlert/SwalAlert';\r\nimport { GlobalContext } from 'Global/Context/GlobalContextProvider';\r\nimport { useContext } from 'react';\r\nimport { UploadUserImage } from 'Routes/Protected/MainPage/Components/MainMenuDrawer/Functions/UploadUserImage';\r\n\r\nexport const fileSelector = (\r\n  format,\r\n  setRefreshInterface,\r\n  GlobalConstants,\r\n  operationDoneMsg,\r\n  setRefreshForImage,\r\n  operatingMsg,\r\n  exceededLabel\r\n) => {\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    const maxSize = 400 * 1024; // 400KB in bytes\r\n\r\n    if (file.size > maxSize) {\r\n      SwalAlert('error', exceededLabel, false);\r\n      return;\r\n    }\r\n\r\n    if (file.type.includes(`${format}/`)) {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => {\r\n        UploadUserImage(\r\n          reader.result,\r\n          setRefreshInterface,\r\n          GlobalConstants,\r\n          operationDoneMsg,\r\n          setRefreshForImage,\r\n          operatingMsg\r\n        );\r\n      };\r\n      reader.onerror = () => {\r\n        console.log('file Error');\r\n      };\r\n    } else {\r\n      SwalAlert(\r\n        'error',\r\n        'لطفا تصویر را انتخاب کنید',\r\n        false\r\n      );\r\n    }\r\n  };\r\n  return handleFileChange;\r\n};\r\n","import SwalAlert from 'Global/Components/CommonComponents/SwalAlert/SwalAlert';\r\nimport Cookies from 'js-cookie';\r\nimport { Post } from 'Xhr/Xhr';\r\nimport { env } from 'env';\r\n\r\nexport const UploadUserImage = async (\r\n  base64,\r\n  setRefreshInterface,\r\n  GlobalConstants,\r\n  operationDoneMsg,\r\n  setRefreshForImage,\r\n  operatingMsg\r\n) => {\r\n  SwalAlert('info', operatingMsg, false);\r\n  const IdPerson =\r\n    Cookies.get('user') && JSON.parse(Cookies.get('user'));\r\n  return Post(\r\n    'POST',\r\n    `${process.env.REACT_APP_API_URL_API_UPLOAD_USER_IMAGE}`,\r\n    true,\r\n    {\r\n      idUser: parseInt(IdPerson.Id),\r\n      base64Image: base64,\r\n    }\r\n  )\r\n    .then((r) => {\r\n      if (r.data.resCode === 1) {\r\n        localStorage.removeItem('userImage');\r\n        localStorage.setItem(\r\n          'userImage',\r\n          JSON.stringify(base64)\r\n        );\r\n        SwalAlert('success', operationDoneMsg, false).then(\r\n          () => {\r\n            setRefreshInterface((prev) => !prev);\r\n            setRefreshForImage((prev) => !prev);\r\n            location.reload();\r\n          }\r\n        );\r\n      } else {\r\n        SwalAlert('error', r.data.resMessage, false);\r\n      }\r\n    })\r\n\r\n    .catch((err) => console.error(err));\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from 'Global/Context/GlobalContextProvider';\r\nimport { fileSelector } from 'utils/FileSelector';\r\nimport FindLangKey from 'Global/Functions/FindLangKey/FindLangKey';\r\nimport {\r\n  Button,\r\n  ListItemIcon,\r\n  MenuItem,\r\n  MenuList,\r\n  Stack,\r\n} from '@mui/material';\r\nimport { Upload } from '@mui/icons-material';\r\n\r\nconst ImageUploader = ({\r\n  setRefreshInterface,\r\n  setRefreshForImage,\r\n  cachedIcons\r\n}) => {\r\n  const fileInputRef = React.useRef(null);\r\n  const GlobalConstants = useContext(GlobalContext);\r\n  const operationDoneMsg = FindLangKey(\r\n    'general-public-alert-success-operation'\r\n  );\r\n  const operatingMsg = FindLangKey(\r\n    'general-public-alert-success-operation'\r\n  );\r\n  const maxSize_exceed_label = FindLangKey(\r\n    'main-menu-dialog-max-size-exceeded-upload'\r\n  );\r\n\r\n  const UploadImg=  'data:image/svg+xml;base64,' +\r\n  cachedIcons?.MenueIcon['UploadImg.svg'];\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <input\r\n        onChange={(event) => {\r\n          fileSelector(\r\n            'image',\r\n            setRefreshInterface,\r\n            GlobalConstants,\r\n            operationDoneMsg,\r\n            setRefreshForImage,\r\n            operatingMsg,\r\n            maxSize_exceed_label\r\n          )(event);\r\n          event.target.value = null; // Reset the value\r\n        }}\r\n        type=\"file\"\r\n        accept=\".jpg, .png, .jpeg, .gif, .bmp, .tif, .tiff|image/*\"\r\n        hidden\r\n        ref={fileInputRef}\r\n      />\r\n\r\n      <span\r\n        onClick={() => fileInputRef.current.click()}\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'row-reverse',\r\n          alignItems: 'center',\r\n          gap: '.5em',\r\n          cursor: 'pointer',\r\n        }}\r\n      >\r\n          <img\r\n            src={UploadImg}\r\n            alt={FindLangKey(\r\n              'main-menu-drawer-link-complete-profile'\r\n            )}\r\n            width=\"25em\"\r\n            height=\"25em\"\r\n            style={{\r\n              background: UploadImg,\r\n              cursor: 'pointer',\r\n              backgroundPosition: 'center center',\r\n              backgroundSize: 'cover',\r\n            }}\r\n          />\r\n        {FindLangKey('main-menu-drawer-link-image-upload')}\r\n      </span>\r\n      {/* <Button\r\n      \r\n        sx={\r\n          {\r\n            // border: \"1px solid gainsboro\",\r\n            // borderRadius: \".3em\",\r\n            // display: \"flex\",\r\n            // flexDirection: \"row-reverse\",\r\n            // justifyContent: \"space-between\",\r\n            // pl: \"1.2em\",\r\n          }\r\n        }\r\n        startIcon={}\r\n        fullWidth\r\n        color=\"colorPrimer\"\r\n      >\r\n    \r\n      </Button> */}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ImageUploader;\r\n","import SwalAlert from 'Global/Components/CommonComponents/SwalAlert/SwalAlert';\r\nimport { Post } from 'Xhr/Xhr';\r\nimport { env } from 'env';\r\n\r\nimport { Base64Downloader } from 'utils/Base64Downloader';\r\nexport const GetUserManual = async (\r\n  downloadingManualMsg\r\n) => {\r\n  SwalAlert('warning', downloadingManualMsg, false);\r\n  return Post(\r\n    'POST',\r\n    `${process.env.REACT_APP_API_URL_API_CO_INFORMATION}`,\r\n    false,\r\n    {\r\n      ReturnHelpFile: true,\r\n    }\r\n  ).then((response) => {\r\n    if (response.data.resCode === 1) {\r\n      Base64Downloader(\r\n        response.data.Data,\r\n        'manual',\r\n        'data:application/pdf'\r\n      );\r\n    } else {\r\n      SwalAlert('error', response.data.resMessage, false);\r\n    }\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { GetUserManual } from \"Routes/Protected/MainPage/Adapters/GetUserManual\";\r\nimport FindLangKey from \"Global/Functions/FindLangKey/FindLangKey\";\r\nimport { Button } from \"@mui/material\";\r\nimport { HelpCenter } from \"@mui/icons-material\";\r\nconst UserGuidFetchButton = ({cachedIcons}) => {\r\n  const downloadingManualMsg = FindLangKey(\r\n    \"general-public-alert-downloading-manual\"\r\n  );\r\n\r\n\r\n  const guide=  'data:image/svg+xml;base64,' +\r\n  cachedIcons?.MenueIcon['guide.svg'];\r\n   \r\n  return (\r\n    <React.Fragment>\r\n      <span\r\n        onClick={() => {\r\n          GetUserManual(downloadingManualMsg);\r\n        }}\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row-reverse\",\r\n          alignItems: \"center\",\r\n          gap: \".5em\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n\r\n<img\r\n            src={guide}\r\n            alt={FindLangKey(\"main-menu-drawer-link-manual-download\")}\r\n            width=\"25em\"\r\n            height=\"25em\"\r\n            style={{\r\n              background: guide,\r\n              cursor: 'pointer',\r\n              backgroundPosition: 'center center',\r\n              backgroundSize: 'cover',\r\n            }}\r\n          />\r\n\r\n      \r\n        {FindLangKey(\"main-menu-drawer-link-manual-download\")}\r\n      </span>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UserGuidFetchButton;\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from 'Global/Context/GlobalContextProvider';\r\n\r\nconst DrawerMenuLinkCreator = ({ Links, AccessRoles }) => {\r\n  const navigate = useContext(GlobalContext)?.navigate;\r\n\r\n  const isAccessAllowed = (option, roles) => {\r\n    const lowerCaseRoles = roles.map((role) =>\r\n      role.toLowerCase()\r\n    );\r\n\r\n    const nestedRoles = roles.map((role) => `/main${role}`);\r\n\r\n    return (\r\n      option.isUnAuth ||\r\n      lowerCaseRoles.includes(option.Route.toLowerCase()) ||\r\n      nestedRoles.includes(option.Route)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {Links?.map(\r\n        (option, i) =>\r\n          isAccessAllowed(option, AccessRoles) && (\r\n            <React.Fragment key={i}>\r\n              <span\r\n                onClick={() => navigate(option.Route)}\r\n                style={{\r\n                  display: 'flex',\r\n                  flexDirection: 'row-reverse',\r\n                  alignItems: 'center',\r\n                  gap: '.5em',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {React.cloneElement(option.Picture, {\r\n                  sx: {\r\n                    fontSize: '1.5em !important',\r\n                  },\r\n                  color: 'colorPrimer',\r\n                })}\r\n                {option.Title}\r\n              </span>\r\n            </React.Fragment>\r\n          )\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DrawerMenuLinkCreator;\r\n","import { Button, CssBaseline, Stack } from '@mui/material';\r\nimport React, { useCallback, useEffect, useMemo } from 'react';\r\nimport { DrawerLinks } from '../variables/DrawerLinks';\r\nimport LogOutButton from './LogOutButton';\r\nimport ImageUploader from './ImageUploader';\r\nimport UserGuidFetchButton from './UserGuidFetchButton';\r\nimport { GlobalContext } from 'Global/Context/GlobalContextProvider';\r\nimport { useContext } from 'react';\r\nimport DrawerMenuLinkCreator from './DrawerMenuLinkCreator';\r\nimport FindLangKey from 'Global/Functions/FindLangKey/FindLangKey';\r\nimport {\r\n  ContactEmergency,\r\n  Info,\r\n  Settings,\r\n} from '@mui/icons-material';\r\nimport { themeColors } from 'Global/JsxThemeColor/JsxThemeColor';\r\nimport Cookies from 'js-cookie';\r\nimport { IconAtom } from 'Global/Hooks/useCacheIcons/IconAtom';\r\nimport { useAtom } from 'jotai';\r\n\r\n\r\nconst MainMenuDrawerOptions = ({\r\n  setDrawerOpen,\r\n  setRefreshInterface,\r\n  setRefreshForImage,\r\n  screenWidth,\r\n}) => {\r\n  const isDesktop = screenWidth > 1024;\r\n\r\n  const rootPaths = useContext(GlobalContext)?.rootPaths;\r\n  const navigate = useContext(GlobalContext)?.navigate;\r\n  // const setSettingDrawerOpen =\r\n  //   useContext(GlobalContext)?.setSettingDrawerOpen;\r\n  const about_us = FindLangKey('general-public-about-us');\r\n  const contact_us = FindLangKey(\r\n    'general-public-contact-us'\r\n  );\r\n\r\n  const user = Cookies.get('user')\r\n    ? JSON.parse(Cookies.get('user'))\r\n    : null;\r\n\r\n  const isPatient =\r\n    user?.AccessRole?.map((role) =>\r\n      role?.toLowerCase()\r\n    )?.includes('patient') &&\r\n    user?.AccessRole?.length === 1;\r\n\r\n\r\n      const [icons] = useAtom(IconAtom);\r\n  const cachedIcons =\r\n    icons || JSON.parse(localStorage.getItem('icons'));\r\n\r\n  const AbouUS = 'data:image/svg+xml;base64,' +\r\n  cachedIcons?.MenueIcon['AbouUS.svg'];\r\n  const contactUS = 'data:image/svg+xml;base64,' +\r\n  cachedIcons?.MenueIcon['contactUS.svg'];\r\n  const Exite = 'data:image/svg+xml;base64,' +\r\n  cachedIcons?.MenueIcon['Exite.svg'];\r\n\r\n\r\n  const _drawerLinks = useCallback(()=>DrawerLinks(\r\n    isPatient,\r\n    rootPaths,\r\n    screenWidth,\r\n    isDesktop,\r\n    cachedIcons\r\n  ),[isPatient,\r\n    rootPaths,\r\n    screenWidth,\r\n    isDesktop,\r\n    cachedIcons,\r\n    localStorage.getItem('languageArray')\r\n  ])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <div\r\n        style={{\r\n          width: '100%',\r\n          color: `${themeColors.ColorPrimary} !important`,\r\n          overflowY: screenWidth < 1400 ? 'visible' : '',\r\n        }}\r\n      >\r\n        <Stack gap=\"1em\">\r\n          <ImageUploader\r\n            setRefreshInterface={setRefreshInterface}\r\n            setRefreshForImage={setRefreshForImage}\r\n            cachedIcons={cachedIcons}\r\n          />\r\n          <DrawerMenuLinkCreator\r\n            Links={_drawerLinks()}\r\n            AccessRoles={rootPaths}\r\n          />\r\n\r\n          {/* <span\r\n            onClick={() => setSettingDrawerOpen(true)}\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'row-reverse',\r\n              alignItems: 'center',\r\n              gap: '.5em',\r\n              cursor: 'pointer',\r\n            }}\r\n          >\r\n            <Settings\r\n              color=\"colorPrimer\"\r\n              sx={{\r\n                fontSize: '1.5em !important',\r\n              }}\r\n            />\r\n            {FindLangKey(\r\n              'personalization-drawer-navbar-title'\r\n            )}\r\n          </span> */}\r\n\r\n          <UserGuidFetchButton cachedIcons={cachedIcons}/>\r\n          <span\r\n            onClick={() =>\r\n              navigate(isDesktop ? '/main/about' : '/about')\r\n            }\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'row-reverse',\r\n              alignItems: 'center',\r\n              gap: '.5em',\r\n              cursor: 'pointer',\r\n            }}\r\n          >\r\n            <img\r\n            src={AbouUS}\r\n            alt={about_us}\r\n            width=\"25em\"\r\n            height=\"25em\"\r\n            style={{\r\n              background: AbouUS,\r\n              cursor: 'pointer',\r\n              backgroundPosition: 'center center',\r\n              backgroundSize: 'cover',\r\n            }}\r\n          />\r\n            {about_us}\r\n          </span>\r\n          <span\r\n            onClick={() =>\r\n              navigate(\r\n                isDesktop ? '/main/ContactUs' : '/ContactUs'\r\n              )\r\n            }\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'row-reverse',\r\n              alignItems: 'center',\r\n              gap: '.5em',\r\n              cursor: 'pointer',\r\n            }}\r\n          >\r\n              <img\r\n            src={contactUS}\r\n            alt={contact_us}\r\n            width=\"25em\"\r\n            height=\"25em\"\r\n            style={{\r\n              background: contactUS,\r\n              cursor: 'pointer',\r\n              backgroundPosition: 'center center',\r\n              backgroundSize: 'cover',\r\n            }}\r\n          />\r\n            {contact_us}\r\n          </span>\r\n          <LogOutButton setDrawerOpen={setDrawerOpen} Exite={Exite}/>\r\n        </Stack>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MainMenuDrawerOptions;\r\n","import FindLangKey from 'Global/Functions/FindLangKey/FindLangKey';\r\n\r\nexport const DrawerLinks = (\r\n  isPatient,\r\n  rootPaths,\r\n  screenWidth,\r\n  isDesktop,\r\n  cachedIcons\r\n) => {\r\n  // Precompute the outputs of FindLangKey\r\n  const langKeys = {\r\n    completeProfile: FindLangKey('main-menu-drawer-link-complete-profile'),\r\n    uploadDocs: FindLangKey('main-menu-drawer-link-upload-on-call-docs'),\r\n    bankAccountList: FindLangKey('bank-account-list-navbar-title'),\r\n    walletButton: FindLangKey('main-menu-drawer-wallet-button'),\r\n    changePassword: FindLangKey('general-public-change-password'),\r\n    userPishNahad: FindLangKey('user-pishnahad-route-title'),\r\n  \r\n  };\r\n\r\n  const icons = {\r\n    completeProfileInfo:\r\n      'data:image/svg+xml;base64,' + cachedIcons?.MenueIcon['Completioninformation.svg'],\r\n    uploadDocs:\r\n      'data:image/svg+xml;base64,' + cachedIcons?.MenueIcon['UploadDocs.svg'],\r\n    changePassword:\r\n      'data:image/svg+xml;base64,' + cachedIcons?.MenueIcon['changePassword.svg'],\r\n    criticism:\r\n      'data:image/svg+xml;base64,' + cachedIcons?.MenueIcon['Criticism.svg'],\r\n    wallet:\r\n      'data:image/svg+xml;base64,' + cachedIcons?.MenueIcon['Wallet.svg'],\r\n    listehesab:\r\n      'data:image/svg+xml;base64,' + cachedIcons?.MenueIcon['Listhesab.svg'],\r\n  };\r\n\r\n  const links = [\r\n    {\r\n      Picture: (\r\n        <img\r\n          src={icons.completeProfileInfo}\r\n          alt={langKeys.completeProfile}\r\n          width=\"25em\"\r\n          height=\"25em\"\r\n          style={{\r\n            background: icons.completeProfileInfo,\r\n            cursor: 'pointer',\r\n            backgroundPosition: 'center center',\r\n            backgroundSize: 'cover',\r\n          }}\r\n        />\r\n      ),\r\n      Route: isDesktop ? '/main/CompleteProfileUser' : '/CompleteProfileUser',\r\n      Title: langKeys.completeProfile,\r\n    },\r\n    {\r\n      Picture: (\r\n        <img\r\n          src={icons.uploadDocs}\r\n          alt={langKeys.uploadDocs}\r\n          width=\"25em\"\r\n          height=\"25em\"\r\n          style={{\r\n            background: icons.uploadDocs,\r\n            cursor: 'pointer',\r\n            backgroundPosition: 'center center',\r\n            backgroundSize: 'cover',\r\n          }}\r\n        />\r\n      ),\r\n      Route: isDesktop ? '/main/UploadOnCallDocs' : '/UploadOnCallDocs',\r\n      Title: langKeys.uploadDocs,\r\n    },\r\n    {\r\n      Picture: (\r\n        <img\r\n          src={icons.listehesab}\r\n          alt={langKeys.bankAccountList}\r\n          width=\"25em\"\r\n          height=\"25em\"\r\n          style={{\r\n            background: icons.listehesab,\r\n            cursor: 'pointer',\r\n            backgroundPosition: 'center center',\r\n            backgroundSize: 'cover',\r\n          }}\r\n        />\r\n      ),\r\n      Route: isDesktop ? '/main/BankAccountList' : '/BankAccountList',\r\n      Title: langKeys.bankAccountList,\r\n    },\r\n    rootPaths?.includes('/Wallet') && {\r\n      Picture: (\r\n        <img\r\n          src={icons.wallet}\r\n          alt={langKeys.walletButton}\r\n          width=\"25em\"\r\n          height=\"25em\"\r\n          style={{\r\n            background: icons.wallet,\r\n            cursor: 'pointer',\r\n            backgroundPosition: 'center center',\r\n            backgroundSize: 'cover',\r\n          }}\r\n        />\r\n      ),\r\n      Route: isDesktop ? '/main/Wallet' : '/Wallet',\r\n      Title: langKeys.walletButton,\r\n      isUnAuth: true,\r\n    },\r\n    {\r\n      Picture: (\r\n        <img\r\n          src={icons.changePassword}\r\n          alt={langKeys.changePassword}\r\n          width=\"25em\"\r\n          height=\"25em\"\r\n          style={{\r\n            background: icons.changePassword,\r\n            cursor: 'pointer',\r\n            backgroundPosition: 'center center',\r\n            backgroundSize: 'cover',\r\n          }}\r\n        />\r\n      ),\r\n      Route: isDesktop ? '/main/ChangePasswrod' : '/ChangePasswrod',\r\n      Title: langKeys.changePassword,\r\n    },\r\n    \r\n    rootPaths?.includes('/PatientPishNahad') && {\r\n      Picture: (\r\n        <img\r\n          src={icons.criticism}\r\n          alt={langKeys.userPishNahad}\r\n          width=\"25em\"\r\n          height=\"25em\"\r\n          style={{\r\n            background: icons.criticism,\r\n            cursor: 'pointer',\r\n            backgroundPosition: 'center center',\r\n            backgroundSize: 'cover',\r\n          }}\r\n        />\r\n      ),\r\n      Route: isDesktop ? '/main/PatientPishNahad' : '/PatientPishNahad',\r\n      Title: langKeys.userPishNahad,\r\n    },\r\n  ];\r\n\r\n  // Ensure only valid links are returned\r\n  return links.filter((link) => link);\r\n};\r\n","import { Info } from '@mui/icons-material';\r\nimport { themeColors } from 'Global/JsxThemeColor/JsxThemeColor';\r\nimport React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst PatientDoctor = ({\r\n  screenWidth,\r\n  route,\r\n  image = '',\r\n  title = '',\r\n}) => {\r\n  const navigate = useNavigate();\r\n\r\n  // Function to get the dynamic icon component\r\n  const getDynamicIcon = (iconName) => {\r\n    const IconComponent = require('@mui/icons-material')[\r\n      iconName\r\n    ];\r\n    return IconComponent ? (\r\n      <IconComponent\r\n        color=\"colorPrimer\"\r\n        sx={{\r\n          fontSize: '1.5em !important',\r\n        }}\r\n      />\r\n    ) : null;\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        style={{\r\n          width: '100%',\r\n          color: `${themeColors.ColorPrimary} !important`,\r\n          overflowY: screenWidth < 1400 ? 'visible' : '',\r\n          maxHeight: screenWidth < 1400 ? '20em' : '',\r\n        }}\r\n      >\r\n        <span\r\n          onClick={() => navigate(`${route}`)}\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'row-reverse',\r\n            alignItems: 'center',\r\n            gap: '.5em',\r\n            cursor: 'pointer',\r\n          }}\r\n        >\r\n          <img\r\n            src={image}\r\n            alt={title}\r\n            width=\"25em\"\r\n            height=\"25em\"\r\n            style={{\r\n              background: image,\r\n              cursor: 'pointer',\r\n              backgroundPosition: 'center center',\r\n              backgroundSize: 'cover',\r\n            }}\r\n          />\r\n          <p>{title}</p>\r\n        </span>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PatientDoctor;\r\n","import { Info } from '@mui/icons-material';\r\nimport { CssBaseline, Stack } from '@mui/material';\r\nimport { themeColors } from 'Global/JsxThemeColor/JsxThemeColor';\r\nimport React, { useContext } from 'react';\r\nimport PatientDoctor from './PatientDoctor';\r\nimport { DesktopLinks } from './DesktopLinks';\r\nimport { GlobalContext } from 'Global/Context/GlobalContextProvider';\r\nimport Cookies from 'js-cookie';\r\nimport { Links as MobileLinks } from '../MainMenu/variables/Links';\r\nimport { v4 as uuidV4 } from 'uuid';\r\n\r\nconst PatientAndDoctorDropDownGenerator = ({\r\n  screenWidth,\r\n  isDoctor,\r\n  isMobile,\r\n}) => {\r\n  const IdPerson =\r\n    Cookies.get('user') &&\r\n    JSON.parse(Cookies.get('user'))?.IdPerson;\r\n  const isTurnAllowed =\r\n    useContext(GlobalContext)?.isTurnAllowed;\r\n  const Links = isMobile\r\n    ? MobileLinks(screenWidth, false, IdPerson)\r\n    : DesktopLinks(isTurnAllowed, IdPerson);\r\n\r\n  const AccessRoles = useContext(GlobalContext)?.rootPaths;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Stack gap=\"1.5em\">\r\n        {Links?.map(\r\n          (option, i) =>\r\n            (AccessRoles?.map((role, j) =>\r\n              role.toLowerCase()\r\n            )?.includes(option.Route.toLowerCase()) ||\r\n              AccessRoles?.map((role) =>\r\n                role.toLowerCase().substring(1)\r\n              )?.includes(option.Route.toLowerCase())) &&\r\n            (isDoctor\r\n              ? !option?.IdPatient\r\n              : option?.IdPatient) && (\r\n              <PatientDoctor\r\n                title={option.Title}\r\n                route={option.Route}\r\n                image={option.Picture}\r\n                key={uuidV4()}\r\n              />\r\n            )\r\n        )}\r\n      </Stack>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PatientAndDoctorDropDownGenerator;\r\n","import { GlobalContext } from 'Global/Context/GlobalContextProvider';\r\nimport FindLangKey from 'Global/Functions/FindLangKey/FindLangKey';\r\nimport Cookies from 'js-cookie';\r\nimport React, { useContext } from 'react';\r\n\r\nimport { DesktopLinks } from '../Components/MainTopProfileSummary/DesktopLinks';\r\nimport { Links as MobileLinks } from '../Components/MainMenu/variables/Links';\r\n\r\nconst useHandleSIdeBarAccordion_Bl = (\r\n  isMobile,\r\n  screenWidth\r\n) => {\r\n  const myProfile_label = FindLangKey(\r\n    'main-menu-desktop-sidebar-profile-accordion'\r\n  );\r\n\r\n  const patient_label = FindLangKey(\r\n    'general-public-label-doctor-role'\r\n  );\r\n\r\n  const doctor_label = FindLangKey(\r\n    'general-public-label-patient-role'\r\n  );\r\n\r\n  const IdPerson =\r\n    Cookies.get('user') &&\r\n    JSON.parse(Cookies.get('user'))?.IdPerson;\r\n  const isTurnAllowed =\r\n    useContext(GlobalContext)?.isTurnAllowed;\r\n  const Links = isMobile\r\n    ? MobileLinks(screenWidth, false, IdPerson)\r\n    : DesktopLinks(isTurnAllowed, IdPerson);\r\n  const AccessRoles = useContext(GlobalContext)?.rootPaths;\r\n\r\n  const doctorItems =\r\n    Links &&\r\n    Links?.filter(\r\n      (option, i) =>\r\n        (AccessRoles?.map((role) =>\r\n          role.toLowerCase()\r\n        )?.includes(option.Route.toLowerCase()) ||\r\n          AccessRoles?.map((role) =>\r\n            role.toLowerCase().substring(1)\r\n          )?.includes(option.Route.toLowerCase())) &&\r\n        !option?.IdPatient\r\n    );\r\n  const patientItems =\r\n    Links &&\r\n    Links?.filter(\r\n      (option, i) =>\r\n        (AccessRoles?.map((role) =>\r\n          role.toLowerCase()\r\n        )?.includes(option.Route.toLowerCase()) ||\r\n          AccessRoles?.map((role) =>\r\n            role.toLowerCase().substring(1)\r\n          )?.includes(option.Route.toLowerCase())) &&\r\n        option?.IdPatient\r\n    );\r\n\r\n \r\n  return {\r\n    myProfile_label,\r\n    patient_label,\r\n    doctor_label,\r\n    IdPerson,\r\n    isTurnAllowed,\r\n    Links,\r\n    AccessRoles,\r\n    doctorItems,\r\n    patientItems\r\n  };\r\n};\r\n\r\nexport default useHandleSIdeBarAccordion_Bl;\r\n","import { ArrowDownward } from '@mui/icons-material';\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { themeColors } from 'Global/JsxThemeColor/JsxThemeColor';\r\nimport React from 'react';\r\n\r\nconst SideBarAccordion = ({\r\n  children,\r\n  expandedAccordion,\r\n  handleAccordionChange,\r\n  pannelNo = '',\r\n  label = '',\r\n}) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Accordion\r\n        expanded={expandedAccordion === pannelNo}\r\n        onChange={handleAccordionChange(pannelNo)}\r\n      >\r\n        <AccordionSummary\r\n          sx={{\r\n            direction: 'rtl',\r\n          }}\r\n          expandIcon={\r\n            <ArrowDownward\r\n              sx={{\r\n                fill: `${themeColors.ColorPrimary} !important`,\r\n              }}\r\n              fontSize=\"small\"\r\n            />\r\n          }\r\n          aria-controls={`${pannelNo}-content`}\r\n          id={`${pannelNo}-header`}\r\n        >\r\n          <Typography\r\n            sx={{\r\n              color: `${themeColors.ColorPrimary} !important`,\r\n            }}\r\n          >\r\n            {label}\r\n          </Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails\r\n          sx={{\r\n            maxHeight: 'fit-content',\r\n          }}\r\n        >\r\n          {children}\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SideBarAccordion;\r\n","import { Info } from '@mui/icons-material';\r\nimport FindLangKey from 'Global/Functions/FindLangKey/FindLangKey';\r\nimport useCheckScreenWidth from 'Global/Hooks/useCheckScreenWidth';\r\nimport { themeColors } from 'Global/JsxThemeColor/JsxThemeColor';\r\nimport React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst SideBarContent = ({\r\n  route,\r\n  image,\r\n  title = '',\r\n  icon,\r\n}) => {\r\n  const screenWidth = useCheckScreenWidth(); // 1024 for Desktop\r\n  const navigate = useNavigate();\r\n  const placeholder = FindLangKey(title);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        style={{\r\n          width: '100%',\r\n          color: `${themeColors.ColorPrimary} !important`,\r\n          overflowY: screenWidth < 1400 ? 'visible' : '',\r\n          maxHeight: screenWidth < 1400 ? '20em' : '',\r\n        }}\r\n      >\r\n        <span\r\n          onClick={() => navigate(`${route}`)}\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'row-reverse',\r\n            alignItems: 'center',\r\n            gap: '.5em',\r\n            cursor: 'pointer',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          {image ? (\r\n            <img\r\n              src={image}\r\n              alt={placeholder}\r\n              width=\"25em\"\r\n              height=\"25em\"\r\n              style={{\r\n                background: image,\r\n                cursor: 'pointer',\r\n                backgroundPosition: 'center center',\r\n                backgroundSize: 'cover',\r\n              }}\r\n            />\r\n          ) : (\r\n            icon\r\n          )}\r\n\r\n          <p\r\n            style={{\r\n              fontSize: '1.5em !important',\r\n              color: `${themeColors.ColorPrimary} !important`,\r\n            }}\r\n          >\r\n            {placeholder}\r\n          </p>\r\n        </span>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SideBarContent;\r\n","import {\r\n  ArrowDownward,\r\n  Brush,\r\n  ManageAccounts,\r\n  PhonelinkSetup,\r\n} from '@mui/icons-material';\r\n\r\nimport { themeColors } from 'Global/JsxThemeColor/JsxThemeColor';\r\nimport React, { useContext } from 'react';\r\nimport MainMenuDrawerOptions from '../MainMenuDrawer/components/MainMenuDrawerOptions';\r\nimport PatientAndDoctorDropDownGenerator from './PatientAndDoctorDropDownGenerator';\r\nimport useHandleSIdeBarAccordion_Bl from '../../Hooks/useHandleSIdeBarAccordion_Bl';\r\nimport SideBarAccordion from 'Global/Components/CommonComponents/SideBarAccordion/SideBarAccordion';\r\nimport FindLangKey from 'Global/Functions/FindLangKey/FindLangKey';\r\nimport SideBarContent from 'Global/Components/CommonComponents/SideBarAccordion/SideBarContent';\r\nimport { Stack } from '@mui/material';\r\nimport { GlobalContext } from 'Global/Context/GlobalContextProvider';\r\nimport AccessControl from 'Global/security/AccessControl';\r\nimport { IconAtom } from 'Global/Hooks/useCacheIcons/IconAtom';\r\nimport { useAtom } from 'jotai';\r\nimport { findLast } from 'lodash';\r\n\r\nconst DesktopSideBarAccordionsForNonProfile = ({\r\n  screenWidth,\r\n  setDrawerOpen,\r\n  setRefreshInterface,\r\n  setRefreshForImage,\r\n  isMobile,\r\n}) => {\r\n  const [icons] = useAtom(IconAtom);\r\n  const cachedIcons =\r\n    icons || JSON.parse(localStorage.getItem('icons'));\r\n\r\n  const [expandedAccordion, setExpandedAccordion] =\r\n    React.useState(false);\r\n  const handleAccordionChange =\r\n    (panel) => (event, isExpanded) => {\r\n      setExpandedAccordion(isExpanded ? panel : false);\r\n    };\r\n\r\n  const {\r\n    myProfile_label,\r\n    patient_label,\r\n    doctor_label,\r\n    doctorItems,\r\n    patientItems\r\n  } = useHandleSIdeBarAccordion_Bl(isMobile, screenWidth);\r\n\r\n  const setting_label = FindLangKey(\r\n    'personalization-drawer-navbar-title'\r\n  );\r\n\r\n  const isDesktop = screenWidth > 1024;\r\n\r\n  const GlobalConstants = useContext(GlobalContext);\r\n  const isWebAppSettingsEnabled = AccessControl(\r\n    'web-app-setting-accordion'\r\n  );\r\n  const AccessRoles = GlobalConstants?.AccessRoles;\r\n\r\n  const personelWage_label = FindLangKey(\r\n    'main-menu-devider-label-personel-wage'\r\n  );\r\n\r\n  const labs_label = FindLangKey('lab-patient-type-lab');\r\n  const rootPaths = useContext(GlobalContext)?.rootPaths;\r\n\r\n  const Settings =\r\n    'data:image/svg+xml;base64,' +\r\n    cachedIcons?.MenueIcon['Settings.svg'];\r\n  const TakingTurns =\r\n    'data:image/svg+xml;base64,' +\r\n    cachedIcons?.MenueIcon['TakingTurns.svg'];\r\n  const language =\r\n    'data:image/svg+xml;base64,' +\r\n    cachedIcons?.MenueIcon['language.svg'];\r\n\r\n\r\n \r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        style={{\r\n          all: 'inherit',\r\n        }}\r\n        className=\"desktopAccordionsforNonProfile\"\r\n      >\r\n        <SideBarAccordion\r\n          pannelNo=\"panel1\"\r\n          handleAccordionChange={handleAccordionChange}\r\n          expandedAccordion={expandedAccordion}\r\n          label={myProfile_label}\r\n        >\r\n          <MainMenuDrawerOptions\r\n            setDrawerOpen={setDrawerOpen}\r\n            setRefreshInterface={setRefreshInterface}\r\n            setRefreshForImage={setRefreshForImage}\r\n            screenWidth={screenWidth}\r\n          />\r\n        </SideBarAccordion>\r\n\r\n        {patientItems?.length > 0 ? (\r\n          <SideBarAccordion\r\n            pannelNo=\"panel2\"\r\n            handleAccordionChange={handleAccordionChange}\r\n            expandedAccordion={expandedAccordion}\r\n            label={doctor_label}\r\n          >\r\n            <PatientAndDoctorDropDownGenerator\r\n              screenWidth={screenWidth}\r\n              isMobile={isMobile}\r\n            />\r\n          </SideBarAccordion>\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        {doctorItems?.length !== 0 ? (\r\n          <SideBarAccordion\r\n            pannelNo=\"panel3\"\r\n            handleAccordionChange={handleAccordionChange}\r\n            expandedAccordion={expandedAccordion}\r\n            label={patient_label}\r\n          >\r\n            <PatientAndDoctorDropDownGenerator\r\n              screenWidth={screenWidth}\r\n              isDoctor={true}\r\n              isMobile={isMobile}\r\n            />\r\n          </SideBarAccordion>\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        {doctorItems?.length !== 0 ? (\r\n          <>\r\n            {rootPaths?.includes('/InvoiceReceipt') ||\r\n            rootPaths.includes('Quartering') ? (\r\n              <SideBarAccordion\r\n                pannelNo=\"panel5\"\r\n                handleAccordionChange={\r\n                  handleAccordionChange\r\n                }\r\n                expandedAccordion={expandedAccordion}\r\n                label={personelWage_label}\r\n              >\r\n                <Stack gap=\"1em\">\r\n                  {rootPaths?.includes(\r\n                    '/InvoiceReceipt'\r\n                  ) ? (\r\n                    <SideBarContent\r\n                      route={\r\n                        isDesktop\r\n                          ? '/main/InvoiceReceipt'\r\n                          : '/InvoiceReceipt'\r\n                      }\r\n                      title={\r\n                        'main-menu-button-invoice-receipt'\r\n                      }\r\n                      image={\r\n                        'data:image/svg+xml;base64,' +\r\n                        cachedIcons?.MenueIcon[\r\n                          'InvoiceReceipt.svg'\r\n                        ]\r\n                      }\r\n                    />\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n\r\n                  {rootPaths?.includes('/Quartering') ? (\r\n                    <SideBarContent\r\n                      route={\r\n                        isDesktop\r\n                          ? '/main/Quartering'\r\n                          : '/Quartering'\r\n                      }\r\n                      title={'page-title-quartering'}\r\n                      image={\r\n                        'data:image/svg+xml;base64,' +\r\n                        cachedIcons?.MenueIcon[\r\n                          'CheckInout.svg'\r\n                        ]\r\n                      }\r\n                    />\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </Stack>\r\n              </SideBarAccordion>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        {doctorItems?.length !== 0 ? (\r\n          <>\r\n            {rootPaths?.includes('/Lab') ||\r\n            rootPaths.includes('/Pato') ? (\r\n              <SideBarAccordion\r\n                pannelNo=\"panel6\"\r\n                handleAccordionChange={\r\n                  handleAccordionChange\r\n                }\r\n                expandedAccordion={expandedAccordion}\r\n                label={labs_label}\r\n              >\r\n                <Stack gap=\"1em\">\r\n                  {rootPaths?.includes('/Lab') ? (\r\n                    <SideBarContent\r\n                      route={\r\n                        isDesktop ? '/main/Lab' : '/Lab'\r\n                      }\r\n                      title={'main-menu-button-lab-actions'}\r\n                      image={\r\n                        'data:image/svg+xml;base64,' +\r\n                        cachedIcons?.MenueIcon[\r\n                          'AnswerTestLab.svg'\r\n                        ]\r\n                      }\r\n                    />\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                  {rootPaths?.includes('/Pato') ? (\r\n                    <SideBarContent\r\n                      route={\r\n                        isDesktop ? '/main/Pato' : '/Pato'\r\n                      }\r\n                      title={'patologoy-lab-route-title'}\r\n                      image={\r\n                        'data:image/svg+xml;base64,' +\r\n                        cachedIcons?.MenueIcon[\r\n                          'Specializedlaboratory.svg'\r\n                        ]\r\n                      }\r\n                    />\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </Stack>\r\n              </SideBarAccordion>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        <SideBarAccordion\r\n          pannelNo=\"panel4\"\r\n          handleAccordionChange={handleAccordionChange}\r\n          expandedAccordion={expandedAccordion}\r\n          label={setting_label}\r\n        >\r\n          <Stack gap=\"1em\">\r\n            {isWebAppSettingsEnabled &&\r\n            AccessRoles?.includes('admin') ? (\r\n              <>\r\n                <SideBarContent\r\n                  route={\r\n                    isDesktop\r\n                      ? '/main/WebAppSettings'\r\n                      : '/WebAppSettings'\r\n                  }\r\n                  title={\r\n                    'genral-public-label-wep-app-settings'\r\n                  }\r\n                  icon={\r\n                    <img\r\n                      src={Settings}\r\n                      alt={''}\r\n                      width=\"25em\"\r\n                      height=\"25em\"\r\n                      style={{\r\n                        background: Settings,\r\n                        cursor: 'pointer',\r\n                        backgroundPosition: 'center center',\r\n                        backgroundSize: 'cover',\r\n                      }}\r\n                    />\r\n                  }\r\n                />\r\n\r\n                <SideBarContent\r\n                  route={\r\n                    isDesktop\r\n                      ? '/main/NobatPrefrences'\r\n                      : '/NobatPrefrences'\r\n                  }\r\n                  title={\r\n                    'main-menu-settings-drawer-nobat-prefrences'\r\n                  }\r\n                  icon={\r\n                    <img\r\n                      src={TakingTurns}\r\n                      alt={''}\r\n                      width=\"25em\"\r\n                      height=\"25em\"\r\n                      style={{\r\n                        background: TakingTurns,\r\n                        cursor: 'pointer',\r\n                        backgroundPosition: 'center center',\r\n                        backgroundSize: 'cover',\r\n                      }}\r\n                    />\r\n                  }\r\n                />\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )}\r\n\r\n            <SideBarContent\r\n              route={\r\n                isDesktop\r\n                  ? '/main/Personalization'\r\n                  : '/Personalization'\r\n              }\r\n              title={\r\n                'genral-public-label-customization-settings'\r\n              }\r\n              icon={\r\n                <img\r\n                  src={language}\r\n                  alt={''}\r\n                  width=\"25em\"\r\n                  height=\"25em\"\r\n                  style={{\r\n                    background: language,\r\n                    cursor: 'pointer',\r\n                    backgroundPosition: 'center center',\r\n                    backgroundSize: 'cover',\r\n                  }}\r\n                />\r\n              }\r\n            />\r\n          </Stack>\r\n        </SideBarAccordion>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DesktopSideBarAccordionsForNonProfile;\r\n","import React from 'react';\r\nimport { Container, Drawer, Stack } from '@mui/material';\r\nimport { ArrowForwardIos } from '@mui/icons-material';\r\nimport styles from '../../Styles/Main.Menu.Drawer.module.scss';\r\nimport MenuDrawerSummary from './components/MenuDrawerSummary';\r\nimport { themeColors } from 'Global/JsxThemeColor/JsxThemeColor';\r\nimport useCheckScreenWidth from 'Global/Hooks/useCheckScreenWidth';\r\nimport DesktopSideBarAccordionsForNonProfile from '../MainTopProfileSummary/DesktopSideBarAccordionsForNonProfile';\r\nconst MainMenuDrawer = ({\r\n  IsDrawerOpen,\r\n  setDrawerOpen,\r\n  setRefreshInterface,\r\n  setRefreshForImage,\r\n}) => {\r\n  const screenWidth = useCheckScreenWidth(); // 1024 for Desktop\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Drawer\r\n        variant=\"persistent\"\r\n        anchor=\"right\"\r\n        open={IsDrawerOpen}\r\n        classes={{ paper: styles.ProfileDrawer }}\r\n        hideBackdrop\r\n        PaperProps={{\r\n          sx: {\r\n            background: `${themeColors.ColorSecondary} !important`,\r\n            color: `${themeColors.ColorPrimary} !important`,\r\n            zIndex: 2147483647,\r\n            borderLeft:`1px solid ${themeColors.ColorPrimary}`\r\n          },\r\n        }}\r\n      >\r\n        <span\r\n          style={{\r\n            backgroundColor:themeColors.ColorPrimary,\r\n            color: `${themeColors.ColorSecondary} !important`,\r\n            position: 'fixed',\r\n            width: '100%',\r\n            paddingLeft: '.5em',\r\n            paddingTop: '.4em',\r\n          }}\r\n          onClick={() => setDrawerOpen(false)}\r\n          className=\"main-menu-drawer\"\r\n        >\r\n          <ArrowForwardIos\r\n            sx={{\r\n              cursor: 'pointer',\r\n              fontSize: '1.6em !important',\r\n              p: '0 !important',\r\n              m: '0 !important',\r\n              color: `${themeColors.ColorSecondary} !important`,\r\n            }}\r\n          />\r\n        </span>\r\n\r\n        <Container\r\n          sx={{\r\n            pb: '1em',\r\n            mt: '5em',\r\n          }}\r\n        >\r\n          <Stack spacing={2}>\r\n            <Stack\r\n              // sx={{ backgroundColor: \"white\" }}\r\n              // direction=\"row\"\r\n              // justifyContent=\"space-between\"\r\n              // alignItems=\"center\"\r\n              padding=\"0\"\r\n            >\r\n              <MenuDrawerSummary styles={styles} />\r\n            </Stack>\r\n\r\n            <Stack>\r\n              <DesktopSideBarAccordionsForNonProfile\r\n                screenWidth={screenWidth}\r\n                setDrawerOpen={setDrawerOpen}\r\n                setRefreshInterface={setRefreshInterface}\r\n                setRefreshForImage={setRefreshForImage}\r\n                isMobile={true}\r\n              />\r\n            </Stack>\r\n\r\n            {/* \r\n            <MainMenuDrawerOptions\r\n              setDrawerOpen={setDrawerOpen}\r\n              setRefreshInterface={setRefreshInterface}\r\n              setRefreshForImage={setRefreshForImage}\r\n              screenWidth={screenWidth}\r\n            /> */}\r\n          </Stack>\r\n        </Container>\r\n      </Drawer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MainMenuDrawer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"sidebar_icons_colors_container__nnaCK\"};","import React, { useContext } from 'react';\r\nimport { Container, Stack } from '@mui/material';\r\nimport { themeColors } from 'Global/JsxThemeColor/JsxThemeColor';\r\nimport { useAtom } from 'jotai';\r\nimport sideBarIconStyles from './sidebar.icons.colors.module.scss';\r\n import { InterfaceAtom } from '../../InterfaceAtom';\r\nimport { GlobalContext } from 'Global/Context/GlobalContextProvider';\r\nimport { ImageAtom } from '../../ImageAtom';\r\nimport {\r\n  AccountCircle,\r\n  ArrowDownward,\r\n} from '@mui/icons-material';\r\nimport Cookies from 'js-cookie';\r\nimport { ArabicToPersian } from 'utils/ConvertToPersianTextFromArabic';\r\nimport ImageTitlePack from '../MainMenuDrawer/components/ImageTitlePack';\r\nimport useCheckScreenWidth from 'Global/Hooks/useCheckScreenWidth';\r\nimport FindLangKey from 'Global/Functions/FindLangKey/FindLangKey';\r\nimport DesktopSideBarAccordionsForNonProfile from './DesktopSideBarAccordionsForNonProfile';\r\nimport ComponentMemoizer from 'Global/Components/ComponentMemoizer/ComponentMemoizer';\r\n\r\nconst DesktopSideBar = () => {\r\n  const imgHeader = 'data:image/svg+xml;base64,';\r\n\r\n  const userImage =\r\n    localStorage.getItem('userImage') !== null &&\r\n    JSON.parse(localStorage.getItem('userImage'));\r\n\r\n  const cachedIcons = JSON.parse(\r\n    localStorage.getItem('icons')\r\n  );\r\n\r\n  const [, setRefreshInterface] = useAtom(InterfaceAtom);\r\n\r\n  const [, setRefreshForImage] = useAtom(ImageAtom);\r\n\r\n  const GlobalConstants =\r\n    useContext(GlobalContext)?.setDrawerOpen;\r\n\r\n  const setDrawerOpen = GlobalConstants.setDrawerOpen;\r\n\r\n  const userName =\r\n    Cookies.get('user') !== undefined &&\r\n    JSON.parse(Cookies.get('user'));\r\n\r\n  const screenWidth = useCheckScreenWidth(); // 1024 for Desktop\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container\r\n        sx={{\r\n          position: 'relative',\r\n          overflowX: 'hidden !important',\r\n          p: '.5em !important',\r\n          height: '100vh',\r\n          \r\n        }}\r\n      >\r\n        <Stack sx={{ mt: '1.5em', }} alignItems=\"center\">\r\n          <ComponentMemoizer element={<>\r\n            \r\n             {userImage?.length > 0 ? (\r\n              <img\r\n                src={`data:image/*;base64,${userImage}`}\r\n                alt=\"عکس کاربر\"\r\n                loading=\"...\"\r\n                width={75}\r\n                height={75}\r\n                style={{ borderRadius: '.3em',border:`1px solid ${themeColors.ColorPrimary}` }}\r\n              />\r\n            ) : (\r\n              <AccountCircle\r\n                sx={{\r\n                  width: '6em',\r\n                  height: '6em',\r\n                }}\r\n              />\r\n            )\r\n          }\r\n            </>} dependecies={[userImage,themeColors]}/>\r\n          <p\r\n            style={{\r\n              color: `${themeColors.ColorPrimary}`,\r\n              marginTop:'1em'\r\n            }}\r\n          >\r\n            {ArabicToPersian(userName?.FullName)}\r\n          </p>\r\n          <ImageTitlePack userName={userName} />\r\n\r\n          <br />\r\n          <div\r\n            style={{\r\n              minWidth: '15em',\r\n            }}\r\n          >\r\n            {/* className={sideBarIconStyles.container} */}\r\n\r\n            <Stack>\r\n              <DesktopSideBarAccordionsForNonProfile\r\n                screenWidth={screenWidth}\r\n                setDrawerOpen={setDrawerOpen}\r\n                setRefreshInterface={setRefreshInterface}\r\n                setRefreshForImage={setRefreshForImage}\r\n              />\r\n            </Stack>\r\n          </div>\r\n        </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DesktopSideBar;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nconst useClock = (showTime = true) => {\r\n  const [currentTime, setCurrentTime] = useState(\r\n    new Date()\r\n  );\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setCurrentTime(new Date());\r\n    }, 1000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  const dateFormatter = new Intl.DateTimeFormat('fa-IR', {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n    weekday: 'long',\r\n  });\r\n\r\n  const formatDate = (date) => {\r\n    const parts = dateFormatter.formatToParts(date);\r\n    const weekday = parts.find(\r\n      (part) => part.type === 'weekday'\r\n    ).value;\r\n    const day = parts.find(\r\n      (part) => part.type === 'day'\r\n    ).value;\r\n    const month = parts.find(\r\n      (part) => part.type === 'month'\r\n    ).value;\r\n    const year = parts.find(\r\n      (part) => part.type === 'year'\r\n    ).value;\r\n\r\n    return `${weekday} ${day} ${month} ${year}`;\r\n  };\r\n\r\n  const formatTime = (date) => {\r\n    const hours = date\r\n      .getHours()\r\n      .toString()\r\n      .padStart(2, '0');\r\n    const minutes = date\r\n      .getMinutes()\r\n      .toString()\r\n      .padStart(2, '0');\r\n    return `${hours}:${minutes}`;\r\n  };\r\n\r\n  const formattedDate = formatDate(currentTime);\r\n  const formattedTime = formatTime(currentTime);\r\n\r\n  const formattedResultWithTime = ` ${formattedDate}    ${formattedTime}`;\r\n  const formattedResultWithoutTime = ` ${formattedDate}`;\r\n\r\n  return showTime\r\n    ? formattedResultWithTime\r\n    : formattedResultWithoutTime;\r\n};\r\n\r\nexport default useClock;\r\n","import {\r\n  AppBar,\r\n  Container,\r\n  IconButton,\r\n  Stack,\r\n  Toolbar,\r\n  Box,\r\n} from '@mui/material';\r\nimport React, { useContext } from 'react';\r\nimport { Menu, Search } from '@mui/icons-material';\r\nimport DesktopSideBar from './DesktopSideBar';\r\nimport AppBarCustom from 'Global/Components/CommonComponents/AppBarCustom/AppBarCustom';\r\nimport { GlobalContext } from 'Global/Context/GlobalContextProvider';\r\n\r\nimport MenuLinksCreator from 'Global/Components/Generators/MenuLinksCreator/MenuLinksCreator';\r\nimport OptionsDrawer from 'Global/Components/CommonComponents/BottomBar/Components/OptionsDrawer';\r\nimport { DesktopLinks } from './DesktopLinks';\r\nimport { themeColors } from 'Global/JsxThemeColor/JsxThemeColor';\r\n\r\nimport Cookies from 'js-cookie';\r\nimport useClock from 'Global/Hooks/useClock/useClock';\r\n\r\nconst MainTopProfileSummary = ({\r\n  setDrawerOpen,\r\n  screenWidth,\r\n}) => {\r\n  const HandleOpenDrawer = () => {\r\n    setDrawerOpen((prev) => !prev);\r\n  };\r\n  const rootPaths = useContext(GlobalContext)?.rootPaths;\r\n\r\n  const IsDrawerOpen =\r\n    useContext(GlobalContext)?.settingDrawerOpen;\r\n\r\n  const setSettingDrawerOpen =\r\n    useContext(GlobalContext)?.setSettingDrawerOpen;\r\n\r\n  const isTurnAllowed =\r\n    useContext(GlobalContext)?.isTurnAllowed;\r\n\r\n  const lnks = DesktopLinks(isTurnAllowed);\r\n\r\n  // const searh_label = FindLangKey('general-public-search');\r\n\r\n  const userCookie = Cookies.get('user');\r\n  const userAccessRole =\r\n    userCookie && JSON.parse(userCookie)?.AccessRole;\r\n\r\n  // const clock = useClock(false);\r\n\r\n  // console.log('clock=>', clock);\r\n\r\n  // console.log('userAccessRole->', userAccessRole);\r\n\r\n  return (\r\n    <Container\r\n      sx={{\r\n        position: screenWidth > 1024 ? 'absolute' : '',\r\n      }}\r\n    >\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        marginTop={screenWidth > 1024 ? '0' : '1em'}\r\n        justifyContent=\"space-between\"\r\n        paddingX={{ lg: '7.8em' }}\r\n      >\r\n        <AppBar\r\n          color={screenWidth>1024?'colorSecondary':'colorPrimer'}\r\n          sx={{\r\n            width:\r\n              screenWidth > 1024\r\n                ? screenWidth > 1360\r\n                  ? '19%'\r\n                  : '20%'\r\n                : '100%',\r\n            height: screenWidth > 1024 ? '100%' : 'initial',\r\n            color:`${themeColors.ColorPrimary} !important`,\r\n            borderLeft:`1px solid ${themeColors.ColorPrimary}`\r\n          }}\r\n        >\r\n          <Toolbar\r\n            variant=\"dense\"\r\n            sx={{\r\n              minHeight: '2.3em !important',\r\n              flexDirection:\r\n                screenWidth > 1024\r\n                  ? 'column'\r\n                  : 'row-reverse',\r\n              height:\r\n                screenWidth > 1024 ? '100%' : 'initial',\r\n              paddingInline:\r\n                screenWidth > 1024\r\n                  ? '0 !important'\r\n                  : 'initial',\r\n              justifyContent: 'space-between',\r\n               color:`${themeColors.ColorPrimary} !important`\r\n            }}\r\n          >\r\n            {screenWidth < 1024 ? (\r\n              <>\r\n                <IconButton\r\n                  sx={{ color: themeColors.ColorSecondary }}\r\n                  aria-label=\"menu\"\r\n                  onClick={HandleOpenDrawer}\r\n                >\r\n                  <Menu\r\n                    sx={{\r\n                      mr: '.39em',\r\n                      cursor: 'pointer',\r\n                      fill: `${screenWidth>1024?themeColors.ColorPrimary:themeColors.ColorSecondary} !important`,\r\n                    }}\r\n                  />\r\n                </IconButton>\r\n              </>\r\n            ) : (\r\n              <Stack>\r\n                <DesktopSideBar />\r\n\r\n                {/* <AppBarCustom\r\n                  styles={{\r\n                    width: '7em',\r\n                    backgroundColor: 'white',\r\n                    marginRight: '15%',\r\n                    '& *': {\r\n                      color: 'black !important',\r\n                    },\r\n                    overflowY: 'auto',\r\n                  }}\r\n                  screenWidth={screenWidth}\r\n                >\r\n                  <MenuLinksCreator\r\n                    Links={lnks}\r\n                    AccessRoles={rootPaths}\r\n                    isTurnAllowed={isTurnAllowed}\r\n                    screenWidth={screenWidth}\r\n                  />\r\n                </AppBarCustom> */}\r\n\r\n                <OptionsDrawer\r\n                  IsDrawerOpen={IsDrawerOpen}\r\n                  setDrawerOpen={setSettingDrawerOpen}\r\n                />\r\n              </Stack>\r\n            )}\r\n            {/* {screenWidth > 1024 ? <></> : <p>{clock}</p>} */}\r\n            <>\r\n              {screenWidth < 1024 ? (\r\n                <IconButton\r\n                  sx={{\r\n                    color: themeColors.ColorSecondary,\r\n                  }}\r\n                  aria-label=\"menu\"\r\n                  onClick={HandleOpenDrawer}\r\n                >\r\n                  <Search\r\n                    sx={{\r\n                      mr: '.39em',\r\n                      cursor: 'pointer',\r\n                      fill: `${themeColors.ColorSecondary} !important`,\r\n                    }}\r\n                  />\r\n                </IconButton>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Stack>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MainTopProfileSummary;\r\n\r\n// let UserInformation =\r\n// Cookies.get(\"user\") !== undefined && JSON.parse(Cookies.get(\"user\"));\r\n// const userImage =\r\n// localStorage.getItem(\"userImage\") !== null &&\r\n// JSON.parse(localStorage.getItem(\"userImage\"));\r\n\r\n{\r\n  /* <PictureFrameStandardSize\r\nsource={userImage}\r\nFunctionality={setDrawerOpen}\r\n/>\r\n<Stack spacing={1} marginTop=\"1em\">\r\n<TextIconStack\r\n  Icon={nameImg}\r\n  Gap={1}\r\n  Text={ArabicToPersian(UserInformation?.FullName)}\r\n/>\r\n{UserInformation?.IdPatient === 0 ? (\r\n  <TextIconStack\r\n    Icon={expertImg}\r\n    Gap={1}\r\n    Text={ArabicToPersian(\r\n      UserInformation?.AdditionalInfo?.Speciality\r\n    )}\r\n  />\r\n) : (\r\n  <></>\r\n)}\r\n</Stack> */\r\n}\r\n","import { Container, Stack } from '@mui/material';\r\nimport { GlobalContext } from 'Global/Context/GlobalContextProvider';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useContext } from 'react';\r\nimport { useAtom } from 'jotai';\r\nimport { InterfaceAtom } from './InterfaceAtom';\r\nimport { Outlet, useLocation } from 'react-router-dom';\r\nimport { getPrefrenceTrigger } from 'Global/shared/get.prefrence.trigger.atom';\r\nimport MainMenu from './Components/MainMenu/MainMenu';\r\nimport MainMenuDrawer from './Components/MainMenuDrawer/MainMenuDrawer';\r\nimport MainTopProfileSummary from './Components/MainTopProfileSummary/MainTopProfileSummary';\r\nimport useCheckScreenWidth from 'Global/Hooks/useCheckScreenWidth';\r\n\r\nimport Cookies from 'js-cookie';\r\nimport useHandleChangeSizeNavigation from 'Global/Hooks/useHandleChangeSizeNavigation';\r\n\r\nconst UserInterface = ({ setRefreshForImage }) => {\r\n  const screenWidth = useCheckScreenWidth(); // 1024 for Desktop\r\n\r\n  const [refreshInterface, setRefreshInterface] =\r\n    useAtom(InterfaceAtom);\r\n  const [keepPadding, setKeepPadding] = useState(false);\r\n  const GlobalConstants = useContext(GlobalContext);\r\n  const IsDrawerOpen = GlobalConstants.IsDrawerOpen;\r\n  const setDrawerOpen = GlobalConstants.setDrawerOpen;\r\n\r\n  const MoreRows = localStorage.getItem('MoreRows');\r\n  const [, setTrigger] = useAtom(getPrefrenceTrigger);\r\n  const userCookie = Cookies.get('user');\r\n  const userAccessRole =\r\n    userCookie && JSON.parse(userCookie)?.AccessRole;\r\n  React.useEffect(() => {\r\n    localStorage.removeItem('pay_redirect');\r\n\r\n    return () => {\r\n      sessionStorage.removeItem('storedServices');\r\n      sessionStorage.removeItem('previousSearchDate');\r\n    };\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    const rows = JSON.parse(MoreRows);\r\n    setKeepPadding(rows);\r\n  }, [MoreRows]);\r\n\r\n  const pathData = useLocation();\r\n  const currentPath = pathData.pathname;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        className=\"menu-layout-color\"\r\n        style={{ paddingInline: keepPadding ? '.3em' : '' }}\r\n      >\r\n        {refreshInterface ? (\r\n          <>\r\n            <Stack spacing={6}>\r\n              <div\r\n                style={{\r\n                  marginRight:\r\n                    screenWidth > 1024 ? '17em' : '20em',\r\n                }}\r\n              >\r\n                {screenWidth > 1024 ? (\r\n                  <Container\r\n                    sx={{\r\n                      width: '95%',\r\n                    }}\r\n                  >\r\n                    <Outlet />\r\n                  </Container>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </div>\r\n              <MainTopProfileSummary\r\n                setDrawerOpen={setDrawerOpen}\r\n                setRefreshForImage={setRefreshForImage}\r\n                screenWidth={screenWidth}\r\n              />\r\n              {(screenWidth < 1024 ||\r\n                currentPath === '/main') && <MainMenu />}\r\n            </Stack>\r\n\r\n            <MainMenuDrawer\r\n              IsDrawerOpen={IsDrawerOpen}\r\n              setDrawerOpen={setDrawerOpen}\r\n              setRefreshInterface={setRefreshInterface}\r\n              setRefreshForImage={setRefreshForImage}\r\n            />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Stack spacing={6}>\r\n              <div\r\n                style={{\r\n                  marginRight:\r\n                    screenWidth > 1024 ? '17em' : '20em',\r\n                }}\r\n              >\r\n                {screenWidth > 1024 ? (\r\n                  <Container\r\n                    sx={{\r\n                      width: '95%',\r\n                    }}\r\n                  >\r\n                    <Outlet />\r\n                  </Container>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </div>\r\n              <MainTopProfileSummary\r\n                setDrawerOpen={setDrawerOpen}\r\n                screenWidth={screenWidth}\r\n              />\r\n              {screenWidth > 1024 &&\r\n              currentPath === '/main' ? (\r\n                <MainMenu />\r\n              ) : (\r\n                screenWidth < 1024 && <MainMenu />\r\n              )}\r\n            </Stack>\r\n\r\n            <MainMenuDrawer\r\n              IsDrawerOpen={IsDrawerOpen}\r\n              setDrawerOpen={setDrawerOpen}\r\n              setRefreshInterface={setRefreshInterface}\r\n              setRefreshForImage={setRefreshForImage}\r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UserInterface;\r\n","import React, { useEffect, useState } from 'react';\r\nimport UserInterface from './UserInterface';\r\nimport { useAtom } from 'jotai';\r\nimport { ImageAtom } from './ImageAtom';\r\n\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport useCheckScreenWidth from 'Global/Hooks/useCheckScreenWidth';\r\nimport ComponentMemoizer from 'Global/Components/ComponentMemoizer/ComponentMemoizer';\r\nconst MainPage = () => {\r\n  const [forceRender, setForceRender] = useState();\r\n\r\n  const [RefreshForImage, setRefreshForImage] =\r\n    useAtom(ImageAtom);\r\n\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    setForceRender(\r\n      JSON.parse(localStorage.getItem('languageArray'))\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ComponentMemoizer\r\n        element={\r\n          <UserInterface\r\n            setRefreshForImage={setRefreshForImage}\r\n          />\r\n        }\r\n        dependecies={[\r\n          setRefreshForImage,\r\n          RefreshForImage,\r\n          forceRender,\r\n        ]}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n"],"names":["atom","InterfaceAtom","Links","screenWidth","isTurnAllowed","_JSON$parse","icons","useAtom","IconAtom","cachedIcons","JSON","parse","localStorage","getItem","IdPatient","Cookies","get_appointment","FindLangKey","appointments","lab_test_result","FreezeContract","fileArchive_label","SendfileArchive_label","pacsImages","CurrentPatient_label","patientList_label","newReferral_label","serviceReport_label","uploadFile_label","wages_label","PatientSurveyList_title","PatientCartable_label","patientForVisit_label","savePatientsForVisit_label","userCookie","userAccessRole","AccessRole","isOnlyPatient","includes","length","Picture","MenueIcon","Route","Title","filter","fl","sideBarLinks","props","AccessRoles","isNestedRoute","navigate","useNavigate","filteredLinks","option","route","_lowerCasedRoles$map","lowerCasedRoles","map","role","toLowerCase","substring","isAccessible","renderLinkSection","options","i","_jsx","onClick","SwalAlert","cant_get_newTurn_label","getLinkRoute","style","zIndex","children","_jsxs","className","styles","src","alt","loading","getImageStyle","width","getImageSize","height","fontSize","background","cursor","backgroundPosition","backgroundSize","isWidth","_Fragment","flexShrink","ComponentMemoizer","element","dependecies","_AccessRoles$map","_AccessRoles$map2","React","Link","to","replace","textDecoration","FrameCard","cardProps","p","borderRadius","minWidth","display","justifyContent","jsx","backgroundColor","minHeight","alignItems","gap","_AccessRoles$map3","_AccessRoles$map4","PatientItemsDesktop","PatientItemsMobile","navigateTo","DoctorItemsDesktop","DoctorItemsMobile","useLinkCreatorBl","quartering_label","invoiceReceipt_label","lab_actions","pato_title","GlobalConstants","useContext","GlobalContext","pathname","useLocation","pathParts","split","test","setSideBarLinks","personelWage_links","labs_link","useEffect","filtered_Routes","stringify","patient_label","doctor_label","doctorItems","_AccessRoles$map5","_AccessRoles$map6","responsiveGirds","theme","gridTemplateColumns","MoreColumns","personelWageLinks","labLinks","patientItems","_AccessRoles$map7","_AccessRoles$map8","_ref","_useContext","forceRender","setForceRender","useState","personelWage_label","labsCategory_label","rootPaths","isPersonelWageAccessible","isLabAccessible","prev","Stack","marginTop","marginRight","sx","paddingInline","Container","mb","direction","padding","Box","PatientItems","my","DoctorItems","useInfiniteCarouselSlide","images","carouselRef","_images$List$","_images$List$$imageLi","slideLocation","setSlideLocation","listLength","List","imageList","timeOut","setTimeout","startNumber","delay","counter","timer","setInterval","current","goTo","clearInterval","countdownTimer","clearTimeout","marginInline","image","index","_image$imageList$","marginBlock","window","open","linkAddress","Base64Image","Description","textAlign","ArabicToPersian","Header","Id","paddingBlock","_images$List$filter","useRef","Carousel","ref","initialActiveIndex","breakPoints","itemsToShow","itemsToScroll","renderArrow","myArrow","enableAutoPlay","autoPlaySpeed","onChange","val","ShowInBanner","el","ShowInBannerDetail","position","bottom","right","objectFit","margin","ImageLink","db","Dexie","version","stores","newImages","cachedImages","setCachedImages","async","getImagesArray","retryCount","arguments","undefined","toArray","err","name","console","log","error","setItem","fetchAndCacheImages","cachedImagesArray","existingImages","newImagesToAdd","some","existingImage","url","bulkAdd","concat","addImages","updatedCachedImagesArray","useCallCarouselFetcher","areImagesCached","setCarouselImages","useCacheCarouselImages","Post","process","MobileOrPc","OutOrInLogin","PatientOrPerson","GetCarouselImage","then","response","data","Data","DesktopLinks","currentPatientTitle","patientsListTitle","newReferralTitle","performanceReportTitle","uploadFileTitle","wageTitle","getAppointmentTitle","appointmentsTitle","labTestResultTitle","freezeContractTitle","submitErjaTitle","_images$List","paddingRight","GridItems","allLinks","lnks","_lnks$map","link","MenuLinksCreator","MainMenu","_useContext2","_useContext3","_JSON$parse2","setRefreshForImage","IdPerson","ImageAtom","useGetProfileImageOnMount","roles","useCheckScreenWidth","pathName","location","overflow","paddingTop","flexDirection","paddingBottom","overflowY","DesktopCarousel","ImageCarousel","NonCarousel","source","paragraph","accessroleneeded","isScore","spacing","Rating","value","readOnly","dir","_userName$AdditionalI","_userName$AccessRole","userName","mt","ImageTitleStack","GeneralIcon","AdditionalInfo","Speciality","color","themeColors","NationalCode","userImage","border","AccountCircle","fill","FullName","ImageTitlePack","setDrawerOpen","Exite","LogUserOut","useLogOutUser","fileSelector","format","setRefreshInterface","operationDoneMsg","operatingMsg","exceededLabel","e","file","target","files","size","type","reader","FileReader","readAsDataURL","onload","base64","idUser","parseInt","base64Image","r","resCode","removeItem","reload","resMessage","catch","UploadUserImage","result","onerror","fileInputRef","maxSize_exceed_label","UploadImg","event","accept","hidden","click","downloadingManualMsg","guide","ReturnHelpFile","Base64Downloader","GetUserManual","isAccessAllowed","lowerCaseRoles","nestedRoles","isUnAuth","_user$AccessRole","_user$AccessRole$map","_user$AccessRole2","isDesktop","about_us","contact_us","user","isPatient","AbouUS","contactUS","_drawerLinks","useCallback","DrawerLinks","langKeys","completeProfile","uploadDocs","bankAccountList","walletButton","changePassword","userPishNahad","completeProfileInfo","criticism","wallet","listehesab","CssBaseline","ImageUploader","DrawerMenuLinkCreator","UserGuidFetchButton","LogOutButton","title","maxHeight","isDoctor","isMobile","MobileLinks","j","PatientDoctor","uuidV4","useHandleSIdeBarAccordion_Bl","myProfile_label","expandedAccordion","handleAccordionChange","pannelNo","label","Accordion","expanded","AccordionSummary","expandIcon","ArrowDownward","id","Typography","AccordionDetails","icon","placeholder","setExpandedAccordion","panel","isExpanded","setting_label","isWebAppSettingsEnabled","AccessControl","labs_label","Settings","TakingTurns","language","all","SideBarAccordion","MainMenuDrawerOptions","PatientAndDoctorDropDownGenerator","SideBarContent","IsDrawerOpen","Drawer","variant","anchor","classes","paper","hideBackdrop","PaperProps","borderLeft","paddingLeft","ArrowForwardIos","m","pb","MenuDrawerSummary","DesktopSideBarAccordionsForNonProfile","DesktopSideBar","overflowX","_useContext4","HandleOpenDrawer","settingDrawerOpen","setSettingDrawerOpen","paddingX","lg","AppBar","Toolbar","IconButton","Menu","mr","OptionsDrawer","Search","refreshInterface","keepPadding","setKeepPadding","MoreRows","setTrigger","getPrefrenceTrigger","sessionStorage","rows","currentPath","Outlet","MainTopProfileSummary","MainMenuDrawer","MainPage","RefreshForImage","UserInterface"],"sourceRoot":""}