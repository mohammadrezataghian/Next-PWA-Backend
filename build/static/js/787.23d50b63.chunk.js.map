{"version":3,"file":"static/js/787.23d50b63.chunk.js","mappings":"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","sources":["webpack://new-ui/./src/Routes/Protected/EditMedicalForm/Styles/Form.Info.module.scss?b87c","Routes/Protected/EditMedicalForm/Components/FormInfoCard/components/EditInformation.js","Routes/Protected/EditMedicalForm/Components/FormInfoCard/FormInfoCard.js","Routes/Protected/EditMedicalForm/Adapters/GetFormData.js","Routes/Protected/EditMedicalForm/Hooks/useSetTitle.js","Routes/Protected/EditMedicalForm/Hooks/useRecoilAllEditState.js","Routes/Protected/EditMedicalForm/StateBank/useStateBank.js","Routes/Protected/EditMedicalForm/Variables/EditMedicalFormDefaultValues.js","Routes/Protected/EditMedicalForm/Components/EditFormContent/EditFormContent.js","Routes/Protected/EditMedicalForm/EditMedicalForm.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"frameGradient\":\"Form_Info_frameGradient__teR-F\",\"Card\":\"Form_Info_Card__l1M1L\"};","import { Edit } from \"@mui/icons-material\";\r\nimport { Stack } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nconst EditInformation = ({ fetchedFrom }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Stack\r\n        direction=\"row\"\r\n        justifyContent=\"space-between\"\r\n        sx={{ paddingX: \"1em\" }}\r\n      >\r\n        <p>{fetchedFrom?.EditDate}</p>\r\n        <span style={{ textAlign: \"center\" }}>\r\n          <Edit />\r\n        </span>\r\n        <p style={{ marginRight: \"2.5em\" }}>{fetchedFrom?.EditTime}</p>\r\n      </Stack>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default EditInformation;\r\n","import { Card, Stack } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport styles from \"../../Styles/Form.Info.module.scss\";\r\nimport EditInformation from \"./components/EditInformation\";\r\nimport FindLangKey from \"Global/Functions/FindLangKey/FindLangKey\";\r\nimport { themeColors } from \"Global/JsxThemeColor/JsxThemeColor\";\r\nconst FormInfoCard = ({ fetchedFrom }) => {\r\n  const confirmedMsg = FindLangKey(\"general-public-label-confirmed\");\r\n  const unconfirmedMsg = FindLangKey(\"general-public-label-un-confirmed\");\r\n  return (\r\n    <React.Fragment>\r\n      <Card\r\n        sx={{ p: \".3em\", border: `1px solid ${themeColors.ColorPrimary}` }}\r\n        className={styles.Card}\r\n      >\r\n        <Stack bgcolor=\"white\">\r\n          <Stack\r\n            direction=\"row\"\r\n            justifyContent=\"space-between\"\r\n            sx={{ p: \"1em\" }}\r\n          >\r\n            <Stack spacing={0.5}>\r\n              <p>{fetchedFrom?.Name}</p>\r\n              <p>{fetchedFrom?.Date}</p>\r\n            </Stack>\r\n            <Stack spacing={0.5}>\r\n              <p style={{ color: fetchedFrom?.Conferm ? \"green\" : \"red\" }}>\r\n                {fetchedFrom?.Conferm ? confirmedMsg : unconfirmedMsg}\r\n              </p>\r\n              <p>{fetchedFrom?.Time}</p>\r\n            </Stack>\r\n          </Stack>\r\n          {fetchedFrom?.EditTime.length > 0 &&\r\n          fetchedFrom?.EditDate.length > 0 ? (\r\n            <EditInformation fetchedFrom={fetchedFrom} />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Stack>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default FormInfoCard;\r\n","import SwalAlert from 'Global/Components/CommonComponents/SwalAlert/SwalAlert';\r\nimport Cookies from 'js-cookie';\r\nimport { Post } from 'Xhr/Xhr';\r\nimport { env } from 'env';\r\n\r\nexport const GetFormData = async (\r\n  setGatheredData,\r\n  parameters\r\n) => {\r\n  const user = JSON.parse(\r\n    sessionStorage.getItem('patient')\r\n  );\r\n  return Post(\r\n    'POST',\r\n    `${process.env.REACT_APP_API_URL_API_ELS_FORM_ADD_EDIT}`,\r\n    true,\r\n    {\r\n      idElsFormPatient: parameters?.idElsFormPatient,\r\n      formID: parameters?.formId,\r\n      patientFormID: 1,\r\n      idPatient: user.IdPatient,\r\n      idType: 27,\r\n      idConfer: user.Id,\r\n      AlloEdit: true,\r\n      idCartablPatient: 0,\r\n      idPerson: user.IdPerson,\r\n    }\r\n  ).then((response) => {\r\n    // console.log(response.data);\r\n    if (response.data.resCode === 1) {\r\n      setGatheredData((prev) => ({\r\n        ...prev,\r\n        [parameters?.ObjName1]:\r\n          response?.data?.Data?.Form?.GroupList,\r\n        [parameters?.ObjName2]:\r\n          response?.data?.Data?.ListDetail,\r\n        [parameters?.ObjName3]:\r\n          response?.data?.Data?.IdForm,\r\n        [parameters?.ObjName4]:\r\n          response?.data?.Data?.IdCartbalePatient,\r\n        [parameters?.ObjName5]:\r\n          response?.data?.Data?.Form.Id,\r\n      }));\r\n      parameters.setTitle(response?.data?.Data?.Form?.Name);\r\n    } else {\r\n      SwalAlert('error', response.data.resMessage, false);\r\n    }\r\n  });\r\n};\r\n","import React from \"react\";\r\n\r\nconst useSetTitle = (title, gatheredData, setTitle, setStateBank) => {\r\n  React.useEffect(() => {\r\n    if (title.length === 0) {\r\n      setStateBank((prev) => ({\r\n        ...prev,\r\n        ...gatheredData,\r\n        title,\r\n        setTitle,\r\n        setStateBank,\r\n      }));\r\n    }\r\n  }, [title]);\r\n};\r\n\r\nexport default useSetTitle;\r\n","import React from \"react\";\r\nimport { GetFormData } from \"../Adapters/GetFormData\";\r\n\r\nconst useRecoilAllEditState = (setFunctionArray, StateRecoil) => {\r\n  const initialRender = React.useRef(true);\r\n  React.useMemo(() => {\r\n    if (!initialRender.current) {\r\n      setFunctionArray([\r\n        {\r\n          functions: GetFormData,\r\n          parameters: {\r\n            idElsFormPatient: fetchedFrom?.IdReport,\r\n            formId: fetchedFrom?.IdElsForms,\r\n            ObjName1: \"FormView\",\r\n            ObjName2: \"GroupElements\",\r\n            ObjName3: \"formId\",\r\n            ObjName4: \"IdCartablePatient\",\r\n            ObjName5: \"GroupFormId\",\r\n            setTitle,\r\n          },\r\n        },\r\n      ]);\r\n    }\r\n    initialRender.current = false;\r\n  }, [StateRecoil]);\r\n};\r\n\r\nexport default useRecoilAllEditState;\r\n","import React from \"react\";\r\nimport { GetFormData } from \"../Adapters/GetFormData\";\r\nimport useGatherDataFromApi from \"Global/Hooks/useGatherDataFromApi\";\r\nimport useSetTitle from \"../Hooks/useSetTitle\";\r\nimport useRecoilAllEditState from \"../Hooks/useRecoilAllEditState\";\r\n\r\nconst useStateBank = (fetchedFrom) => {\r\n  const [StateBank, setStateBank] = React.useState([]);\r\n  const [StateRecoil, setStateRecoil] = React.useState(false);\r\n  const [forceRender, setForceRender] = React.useState(false);\r\n  const [title, setTitle] = React.useState(\"\");\r\n  const [FunctionArray, setFunctionArray] = React.useState([\r\n    {\r\n      functions: GetFormData,\r\n      parameters: {\r\n        idElsFormPatient: fetchedFrom?.IdReport,\r\n        formId: fetchedFrom?.IdElsForms,\r\n        ObjName1: \"FormView\",\r\n        ObjName2: \"GroupElements\",\r\n        ObjName3: \"formId\",\r\n        ObjName4: \"IdCartablePatient\",\r\n        ObjName5: \"GroupFormId\",\r\n        setTitle,\r\n      },\r\n    },\r\n  ]);\r\n  useRecoilAllEditState(setFunctionArray, StateRecoil);\r\n  const { gatheredData } = useGatherDataFromApi(FunctionArray);\r\n\r\n  React.useMemo(() => {\r\n    setStateBank((prev) => ({\r\n      ...prev,\r\n      ...gatheredData,\r\n      setStateRecoil,\r\n      title,\r\n    }));\r\n  }, [JSON.stringify(gatheredData)]);\r\n  return StateBank;\r\n};\r\n\r\nexport default useStateBank;\r\n","import { EditFormValueNormlizer } from \"Global/Components/Generators/FormElementCreatorByType/Functions/EditFormValueNormlizer\";\r\nimport React from \"react\";\r\n\r\nconst EditMedicalFormDefaultValues = (StateBank) => {\r\n  const MedicalFormattedValues = EditFormValueNormlizer(StateBank);\r\n  const [MedicalFormDefaultValues, setMedicalFormDefaultValues] =\r\n    React.useState([]);\r\n  React.useEffect(() => {\r\n    if (StateBank) {\r\n      setMedicalFormDefaultValues(MedicalFormattedValues);\r\n    }\r\n  }, [StateBank]);\r\n  return MedicalFormDefaultValues;\r\n};\r\n\r\nexport default EditMedicalFormDefaultValues;\r\n","import React from 'react';\r\nimport EditMedicalFormDefaultValues from '../../Variables/EditMedicalFormDefaultValues';\r\nimport EditGroupedView from 'Global/Components/EditableComponents/EditableGroupedView/EditGroupedView';\r\n\r\nconst EditFormContent = ({ StateBank, fetchedFrom }) => {\r\n  console.log(\r\n    'StateBankStateBank----------->>>>>>>',\r\n    StateBank\r\n  );\r\n\r\n  const MedicalDefaultValues =\r\n    EditMedicalFormDefaultValues(StateBank);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <EditGroupedView\r\n        StateBank={StateBank}\r\n        fieldArrayName={'MedicalDefaultValues'}\r\n        DefaultValues={MedicalDefaultValues}\r\n        isEdit={true}\r\n        fetchedFrom={fetchedFrom}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default EditFormContent;\r\n","import { Container, Stack } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport FormInfoCard from \"./Components/FormInfoCard/FormInfoCard\";\r\nimport useStateBank from \"./StateBank/useStateBank\";\r\nimport EditFormContent from \"./Components/EditFormContent/EditFormContent\";\r\nconst EditMedicalForm = () => {\r\n  const fetchedFrom = JSON.parse(window.sessionStorage.getItem(\"EditableForm\"));\r\n  const StateBank = useStateBank(fetchedFrom);\r\n  return (\r\n    <React.Fragment>\r\n      <Container>\r\n        <Stack sx={{ mt: \"1em\" }} spacing={1}>\r\n          <FormInfoCard fetchedFrom={fetchedFrom} />\r\n          <EditFormContent StateBank={StateBank} fetchedFrom={fetchedFrom} />\r\n        </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default EditMedicalForm;\r\n//\r\n"],"names":["_ref","fetchedFrom","_jsx","React","children","_jsxs","Stack","direction","justifyContent","sx","paddingX","EditDate","style","textAlign","Edit","marginRight","EditTime","confirmedMsg","FindLangKey","unconfirmedMsg","Card","p","border","concat","themeColors","className","styles","bgcolor","spacing","Name","Date","color","Conferm","Time","length","EditInformation","_Fragment","GetFormData","async","setGatheredData","parameters","user","JSON","parse","sessionStorage","getItem","Post","process","idElsFormPatient","formID","formId","patientFormID","idPatient","IdPatient","idType","idConfer","Id","AlloEdit","idCartablPatient","idPerson","IdPerson","then","response","_response$data6","_response$data6$Data","_response$data6$Data$","data","resCode","prev","_response$data","_response$data$Data","_response$data$Data$F","_response$data2","_response$data2$Data","_response$data3","_response$data3$Data","_response$data4","_response$data4$Data","_response$data5","_response$data5$Data","ObjName1","Data","Form","GroupList","ObjName2","ListDetail","ObjName3","IdForm","ObjName4","IdCartbalePatient","ObjName5","setTitle","SwalAlert","resMessage","useRecoilAllEditState","setFunctionArray","StateRecoil","initialRender","_fetchedFrom","_fetchedFrom2","current","functions","IdReport","IdElsForms","StateBank","setStateBank","setStateRecoil","forceRender","setForceRender","title","FunctionArray","gatheredData","useGatherDataFromApi","stringify","MedicalFormattedValues","EditFormValueNormlizer","MedicalFormDefaultValues","setMedicalFormDefaultValues","console","log","MedicalDefaultValues","EditMedicalFormDefaultValues","EditGroupedView","fieldArrayName","DefaultValues","isEdit","EditMedicalForm","window","useStateBank","Container","mt","FormInfoCard","EditFormContent"],"sourceRoot":""}