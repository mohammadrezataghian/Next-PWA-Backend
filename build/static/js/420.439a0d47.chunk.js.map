{"version":3,"file":"static/js/420.439a0d47.chunk.js","mappings":"iNAMO,MAAMA,GAAwBC,EAAAA,EAAAA,iBACxBC,EAAUC,IAAmB,IAADC,EAAA,IAAjB,SAAEC,GAAUF,EAClC,MAAOG,EAAiBC,IAAsBC,EAAAA,EAAAA,aACvCC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAS,WAErCG,EAEL,QAFcP,EAAGQ,KAAKC,MACrBC,EAAAA,EAAAA,IAAY,SAAW,WACxB,IAAAV,OAAA,EAFiBA,EAEfW,WACHC,EAAAA,EAAAA,YAAU,KACRN,EAAa,YACbO,EAAAA,EAAAA,MACE,OAAO,GAADC,OAAA,GAAAA,OACAC,8BACN,EACA,CACER,cAEFS,MAAMC,IACNX,EAAaW,EAASC,KAAKC,KAAK,GAChC,GACD,IAEH,MAAMC,EAAa,CACjBf,UACgB,YAAdA,GACa,OAATA,QAAS,IAATA,OAAS,EAATA,EAAWgB,YAAa,GACxB,UACNC,eAAgBnB,GAElB,OACEoB,EAAAA,EAAAA,KAAC3B,EAAsB4B,SAAQ,CAACC,MAAOL,EAAWnB,SAC/CA,GAC8B,E,gFCzBrC,MA4DA,EA5DkByB,KAAO,IAADC,EAAAC,EACtB,MAAMC,EAEL,QAFkBF,GAAGG,EAAAA,EAAAA,YACpBlC,UACD,IAAA+B,OAAA,EAFqBA,EAEnBtB,UACGH,EAEL,QAFoB0B,GAAGE,EAAAA,EAAAA,YACtBlC,UACD,IAAAgC,OAAA,EAFuBA,EAErBN,gBAEHV,EAAAA,EAAAA,YAAU,KACRV,GAAiB6B,IAAUA,GAAK,GAC/B,IAEH,MAAMC,GAASC,EAAAA,EAAAA,GAAmBJ,GAE5BK,GAAaC,EAAAA,EAAAA,GACjB,qCAKF,OACEZ,EAAAA,EAAAA,KAACa,EAAAA,SAAc,CAAAnC,UACbsB,EAAAA,EAAAA,KAACc,EAAAA,EAAK,CACJC,IAAI,OACJC,OAAQP,EAAS,OAAS,GAC1BQ,GAAI,CACFC,oBAAqBT,EACjB,4BACA,GACJU,UAAW,OACXzC,SAEiB,YAAlB4B,GACCN,EAAAA,EAAAA,KAACoB,EAAAA,EAAc,IACbd,IAA8B,OAAbA,QAAa,IAAbA,OAAa,EAAbA,EAAee,QAAS,EAC9B,OAAbf,QAAa,IAAbA,OAAa,EAAbA,EAAegB,KAAKC,IAClBvB,EAAAA,EAAAA,KAACwB,EAAAA,EAAQ,CACPC,QAASF,GACI,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUG,MAGS,KAAb,OAAbpB,QAAa,IAAbA,OAAa,EAAbA,EAAee,SACjBrB,EAAAA,EAAAA,KAAC2B,EAAAA,EAAK,CACJC,IAA0B,OAArBC,EAAAA,GAAAA,SAA4B,MAAQ,MACzCC,SAAS,OACTb,GAAI,CACFc,GAAI,MACJC,MAAO,QACPtD,SAEDiC,KAGHX,EAAAA,EAAAA,KAACoB,EAAAA,EAAc,OAGJ,ECrDrB,EAZwBa,KAEpBjC,EAAAA,EAAAA,KAACa,EAAAA,SAAc,CAAAnC,UACbsB,EAAAA,EAAAA,KAACkC,EAAsB,CAAAxD,UACrBsB,EAAAA,EAAAA,KAACmC,EAAAA,EAAS,CAAClB,GAAI,CAAEmB,GAAI,OAAQ1D,UAC3BsB,EAAAA,EAAAA,KAACG,EAAS,S","sources":["Routes/Protected/FreezeContracts/context/FreezeContractContext.js","Routes/Protected/FreezeContracts/Components/Contracts/Contracts.js","Routes/Protected/FreezeContracts/FreezeContracts.js"],"sourcesContent":["import React, { createContext, useEffect } from 'react'; // Make sure to import React\r\nimport { get_contracts } from '../Functions/get_contracts';\r\nimport { useState } from 'react';\r\nimport { Post } from 'Xhr/Xhr';\r\nimport Cookies from 'js-cookie';\r\n\r\nexport const FreezeContractContext = createContext();\r\nexport const context = ({ children }) => {\r\n  const [contractWatcher, setContractWatcher] = useState();\r\n  const [contracts, setContracts] = useState('loading');\r\n\r\n  const idPatient = JSON.parse(\r\n    Cookies.get('user') || ''\r\n  )?.IdPatient;\r\n  useEffect(() => {\r\n    setContracts('loading');\r\n    Post(\r\n      'POST',\r\n      `${`${process.env.REACT_APP_API_URL_API_FREEZ_FREEZ_CONTRACT}`}`,\r\n      true,\r\n      {\r\n        idPatient,\r\n      }\r\n    ).then((response) => {\r\n      setContracts(response.data.Data);\r\n    });\r\n  }, []);\r\n\r\n  const contextObj = {\r\n    contracts:\r\n      contracts !== 'loading'\r\n        ? contracts?.FreezList || []\r\n        : 'loading',\r\n    watch_contract: setContractWatcher,\r\n  };\r\n  return (\r\n    <FreezeContractContext.Provider value={contextObj}>\r\n      {children}\r\n    </FreezeContractContext.Provider>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useContext } from 'react';\r\nimport Contract from '../Contract/Contract';\r\nimport {\r\n  Alert,\r\n  LinearProgress,\r\n  Stack,\r\n} from '@mui/material';\r\nimport { FreezeContractContext } from '../../context/FreezeContractContext';\r\nimport useConditionalGrid from 'Global/Hooks/useConditionalGrid';\r\nimport FindLangKey from 'Global/Functions/FindLangKey/FindLangKey';\r\nimport i18next from 'i18next';\r\n\r\nconst Contracts = () => {\r\n  const contract_list = useContext(\r\n    FreezeContractContext\r\n  )?.contracts;\r\n  const contractWatcher = useContext(\r\n    FreezeContractContext\r\n  )?.watch_contract;\r\n\r\n  useEffect(() => {\r\n    contractWatcher((prev) => !prev);\r\n  }, []);\r\n\r\n  const isGrid = useConditionalGrid(contract_list);\r\n\r\n  const alertLabel = FindLangKey(\r\n    'general-public-flat-alert-no-data'\r\n  );\r\n\r\n  // console.log('contract_list--->', contract_list);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Stack\r\n        gap=\".5em\"\r\n        isplay={isGrid ? 'grid' : ''}\r\n        sx={{\r\n          gridTemplateColumns: isGrid\r\n            ? 'repeat(2, 1fr) !important'\r\n            : '',\r\n          direction: 'rtl',\r\n        }}\r\n      >\r\n        {contract_list === 'loading' ? (\r\n          <LinearProgress />\r\n        ) : contract_list && contract_list?.length > 0 ? (\r\n          contract_list?.map((contract) => (\r\n            <Contract\r\n              details={contract}\r\n              key={contract?.ID}\r\n            />\r\n          ))\r\n        ) : contract_list?.length === 0 ? (\r\n          <Alert\r\n            dir={i18next.language === 'en' ? 'ltr' : 'rtl'}\r\n            severity=\"info\"\r\n            sx={{\r\n              mt: '1em',\r\n              width: '100%',\r\n            }}\r\n          >\r\n            {alertLabel}\r\n          </Alert>\r\n        ) : (\r\n          <LinearProgress />\r\n        )}\r\n      </Stack>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Contracts;\r\n","import React from \"react\";\r\nimport { Container } from \"@mui/material\";\r\nimport { context as FreezeContractProvider } from \"./context/FreezeContractContext\";\r\nimport Contracts from \"./Components/Contracts/Contracts\";\r\nconst FreezeContracts = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <FreezeContractProvider>\r\n        <Container sx={{ pt: \"1em\" }}>\r\n          <Contracts />\r\n        </Container>\r\n      </FreezeContractProvider>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default FreezeContracts;\r\n"],"names":["FreezeContractContext","createContext","context","_ref","_JSON$parse","children","contractWatcher","setContractWatcher","useState","contracts","setContracts","idPatient","JSON","parse","Cookies","IdPatient","useEffect","Post","concat","process","then","response","data","Data","contextObj","FreezList","watch_contract","_jsx","Provider","value","Contracts","_useContext","_useContext2","contract_list","useContext","prev","isGrid","useConditionalGrid","alertLabel","FindLangKey","React","Stack","gap","isplay","sx","gridTemplateColumns","direction","LinearProgress","length","map","contract","Contract","details","ID","Alert","dir","i18next","severity","mt","width","FreezeContracts","FreezeContractProvider","Container","pt"],"sourceRoot":""}