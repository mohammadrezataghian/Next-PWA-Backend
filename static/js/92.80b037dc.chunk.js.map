{"version":3,"file":"static/js/92.80b037dc.chunk.js","mappings":"kKAGA,MC8CA,EA7CmBA,KAWfC,EAAAA,EAAAA,MAACC,EAAAA,SAAc,CAAAC,SAAA,EACbC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,WACHC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,M","sources":["Routes/Protected/TestFlight/ProxyComponents/TestComponent.js","Routes/Protected/TestFlight/TestFlight.js"],"sourcesContent":["import { Chip } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nconst TestComponent = ({ element, selected, onSelect }) => {\r\n  return (\r\n    <Chip\r\n      label={element.word}\r\n      sx={{ width: \"80%\", marginTop: \"1em\" }}\r\n      color={selected ? \"primary\" : \"colorPrimer\"}\r\n      onClick={onSelect}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TestComponent;\r\n","import { Outlet } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport TestComponent from \"./ProxyComponents/TestComponent\";\r\n\r\nconst TestFlight = () => {\r\n  // const words = [\"apple\", \"banana\", \"orange\", \"strawberry\", \"grapefruit\"];\r\n  // const randomWordsArray = [];\r\n  // for (let i = 0; i < 100; i++) {\r\n  //   const randomIndex = Math.floor(Math.random() * words.length);\r\n  //   randomWordsArray.push({ word: words[randomIndex], selected: false });\r\n  // }\r\n  // const [randomWords, setrandomWords] = React.useState(randomWordsArray);\r\n  // const [searchTerm, setSearchTerm] = React.useState(\"\");\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <p>title</p>\r\n      <Outlet />\r\n      {/* <Container sx={{ mt: \"1em\" }}>\r\n        <TextField\r\n          fullWidth\r\n          placeholder=\"search mumbo jumbo\"\r\n          onChange={(event) => setSearchTerm(event.target.value)}\r\n        />\r\n      </Container>\r\n      <Stack alignItems=\"center\" marginTop=\"1em\">\r\n        {randomWords\r\n          .filter((element) =>\r\n            searchTerm === \"\" ? true : element.word.includes(searchTerm)\r\n          )\r\n          .sort((a, b) => b.selected - a.selected)\r\n          .map((element, index) => (\r\n            <TestComponent\r\n              key={index}\r\n              element={element}\r\n              selected={element.selected}\r\n              onSelect={() => {\r\n                const newRandomWords = [...randomWords];\r\n                newRandomWords[index].selected =\r\n                  !newRandomWords[index].selected;\r\n                setrandomWords(newRandomWords);\r\n              }}\r\n            />\r\n          ))}\r\n      </Stack> */}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TestFlight;\r\n"],"names":["TestFlight","_jsxs","React","children","_jsx","Outlet"],"sourceRoot":""}