{"version":3,"file":"static/js/937.25c2eed5.chunk.js","mappings":"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","sources":["Routes/Protected/MainPage/Hooks/useGetProfileImageOnMount.js","webpack://new-ui/./src/Global/Styles/Menu.Options.module.scss?aa5f","Routes/Protected/MainPage/shared/side.bar.links.js","Global/Components/Generators/MenuLinksCreator/MenuLinksCreator.js","webpack://new-ui/./src/Routes/Protected/MainPage/Styles/Main.Menu.module.scss?c386","webpack://new-ui/./src/Routes/Protected/MainPage/Styles/Image.Carousel.module.scss?49d5","Routes/Protected/MainPage/Hooks/useInfiniteCarouselSlide.js","Routes/Protected/MainPage/Components/NonCarousel/NonCarousel.js","Routes/Protected/MainPage/Components/ImageCarousel/ImageCarousel.js","Routes/Protected/MainPage/Adapters/GetCarouselImage.js","Routes/Protected/MainPage/Hooks/useCallCarouselFetcher.js","Routes/Protected/MainPage/Components/MainTopProfileSummary/DesktopLinks.js","Routes/Protected/MainPage/Hooks/useSetDefaultMenuSelection.js","Routes/Protected/MainPage/Components/DesktopCarousel/DesktopCarousel.js","Routes/Protected/MainPage/Components/MainMenu/MainMenu.js","Routes/Protected/MainPage/Components/MainMenu/variables/Links.js","webpack://new-ui/./src/Routes/Protected/MainPage/Styles/Main.Menu.Drawer.module.scss?74e6","Routes/Protected/MainPage/Components/MainMenuDrawer/components/ImageTitleStack.js","Routes/Protected/MainPage/Components/MainMenuDrawer/components/ImageTitlePack.js","Routes/Protected/MainPage/Components/MainMenuDrawer/components/MenuDrawerSummary.js","Routes/Protected/MainPage/Components/MainMenuDrawer/components/LogOutButton.js","Routes/Protected/MainPage/Components/MainMenuDrawer/Functions/UploadUserImage.js","utils/FileSelector.js","Routes/Protected/MainPage/Components/MainMenuDrawer/components/ImageUploader.js","Routes/Protected/MainPage/Components/MainMenuDrawer/components/UserGuidFetchButton.js","Routes/Protected/MainPage/Adapters/GetUserManual.js","Routes/Protected/MainPage/Components/MainMenuDrawer/components/DrawerMenuLinkCreator.js","Routes/Protected/MainPage/Components/MainMenuDrawer/components/MainMenuDrawerOptions.js","Routes/Protected/MainPage/Components/MainMenuDrawer/variables/DrawerLinks.js","Routes/Protected/MainPage/Components/MainMenuDrawer/MainMenuDrawer.js","webpack://new-ui/./src/Routes/Protected/MainPage/Components/MainTopProfileSummary/sidebar.icons.colors.module.scss?3272","Routes/Protected/MainPage/InterfaceAtom.js","Routes/Protected/MainPage/ImageAtom.js","Routes/Protected/MainPage/Components/MainTopProfileSummary/DesktopSideBar.js","webpack://new-ui/./src/Global/Components/CommonComponents/AppBarCustom/appbar.color.module.scss?6c73","Global/Components/CommonComponents/AppBarCustom/AppBarCustom.js","Routes/Protected/MainPage/Components/MainTopProfileSummary/MainTopProfileSummary.js","Routes/Protected/MainPage/UserInterface.js","Routes/Protected/MainPage/MainPage.jsx"],"sourcesContent":["import { GetUserImage } from \"Global/Adapters/GetUserImage\";\r\nimport Cookies from \"js-cookie\";\r\nimport React from \"react\";\r\n\r\nconst useGetProfileImageOnMount = (setRefreshForImage) => {\r\n  const Data = Cookies.get(\"user\") && JSON.parse(Cookies.get(\"user\"));\r\n  React.useEffect(() => {\r\n    GetUserImage(Data)\r\n      .then((response) => {\r\n        if (response) {\r\n          localStorage.setItem(\"userImage\", JSON.stringify(response.data.Data));\r\n        }\r\n      })\r\n      .then(() => setRefreshForImage((prev) => !prev));\r\n  }, []);\r\n};\r\n\r\nexport default useGetProfileImageOnMount;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"eachLink\":\"Menu_Options_eachLink__tMl2z\"};","import { atom } from 'jotai';\r\n\r\nexport const sideBarLinks = atom(null);\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from '../../../Styles/Menu.Options.module.scss';\r\nimport ComponentMemoizer from 'Global/Components/ComponentMemoizer/ComponentMemoizer';\r\nimport { sideBarLinks } from 'Routes/Protected/MainPage/shared/side.bar.links';\r\nimport { useAtom } from 'jotai';\r\nconst MenuLinksCreator = ({ Links, AccessRoles }) => {\r\n  const [, setSideBarLinks] = useAtom(sideBarLinks);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      Links?.map(\r\n        (option, i) =>\r\n          AccessRoles?.map((role) =>\r\n            role.toLowerCase()\r\n          )?.includes(option.Route.toLowerCase()) ||\r\n          AccessRoles?.map((role) =>\r\n            role.toLowerCase().substring(1)\r\n          )?.includes(option.Route.toLowerCase())\r\n      )\r\n    ) {\r\n      const filtered_Routes = Links?.filter(\r\n        (option, i) =>\r\n          AccessRoles?.map((role) =>\r\n            role.toLowerCase()\r\n          )?.includes(option.Route.toLowerCase()) ||\r\n          AccessRoles?.map((role) =>\r\n            role.toLowerCase().substring(1)\r\n          )?.includes(option.Route.toLowerCase())\r\n      );\r\n\r\n      setSideBarLinks(filtered_Routes);\r\n    }\r\n  }, [JSON.stringify(Links), JSON.stringify(AccessRoles)]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ComponentMemoizer\r\n        element={Links?.map(\r\n          (option, i) =>\r\n            (AccessRoles?.map((role) =>\r\n              role.toLowerCase()\r\n            )?.includes(option.Route.toLowerCase()) ||\r\n              AccessRoles?.map((role) =>\r\n                role.toLowerCase().substring(1)\r\n              )?.includes(option.Route.toLowerCase())) && (\r\n              <React.Fragment key={i}>\r\n                <section className={styles.eachLink}>\r\n                  <Link to={option.Route} replace>\r\n                    <img\r\n                      src={option.Picture}\r\n                      alt={option.Title}\r\n                      loading=\"...\"\r\n                      style={{\r\n                        background: option.Picture,\r\n                        cursor: 'pointer',\r\n                        backgroundPosition: 'center center',\r\n                        backgroundSize: 'cover',\r\n                      }}\r\n                      width={60}\r\n                      height={60}\r\n                    />\r\n                  </Link>\r\n                  <p style={{ fontSize: '0.8125em' }}>\r\n                    {option.Title}\r\n                  </p>\r\n                </section>\r\n              </React.Fragment>\r\n            )\r\n        )}\r\n        dependecies={[localStorage.getItem('icons')]}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MenuLinksCreator;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"MenuOptions\":\"Main_Menu_MenuOptions__avRUn\"};","// extracted by mini-css-extract-plugin\nexport default {\"CarouselContainer\":\"Image_Carousel_CarouselContainer__DIj4o\"};","import React, { useEffect, useState } from \"react\";\r\n\r\nconst useInfiniteCarouselSlide = (images, carouselRef) => {\r\n  const [slideLocation, setSlideLocation] = useState(null);\r\n\r\n  const listLength = images?.List[0]?.imageList?.length;\r\n  function countdownTimer(startNumber, delay) {\r\n    let counter = startNumber;\r\n    const timer = setInterval(() => {\r\n      if (carouselRef.current) {\r\n        carouselRef.current.goTo(counter);\r\n        counter--;\r\n        if (counter < 0) {\r\n          clearInterval(timer);\r\n        }\r\n      }\r\n    }, delay);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const timeOut = setTimeout(() => {\r\n      if (slideLocation === listLength - 1) {\r\n        countdownTimer(listLength - 1, 9950);\r\n      }\r\n    }, 10000);\r\n\r\n    return () => {\r\n      clearTimeout(timeOut);\r\n    };\r\n  }, [slideLocation]);\r\n\r\n  return [setSlideLocation,slideLocation];\r\n};\r\n\r\nexport default useInfiniteCarouselSlide;\r\n","import React from 'react';\r\nimport { Card } from '@mui/material';\r\nimport { ArabicToPersian } from 'utils/ConvertToPersianTextFromArabic';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { pageAdAtom } from 'Global/shared/adv.page.atom';\r\nimport { useAtom } from 'jotai';\r\nimport FrameCard from 'Global/Components/CommonComponents/FrameCard/FrameCard';\r\n\r\nconst NonCarousel = ({ images }) => {\r\n  const navigate = useNavigate();\r\n\r\n  console.log('carousel tests +=>', images);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        style={{\r\n          marginInline: '5%',\r\n          // marginTop: '-10em',\r\n        }}\r\n      >\r\n        {images?.map((image, index) => (\r\n          <FrameCard\r\n            key={image.Id}\r\n            cardProps={{\r\n              borderRadius: '.3em',\r\n              marginBlock: '1em',\r\n              padding: '.3em',\r\n              borderRadius: '20px',\r\n            }}\r\n            jsx={\r\n              <div\r\n                style={{\r\n                  backgroundColor: 'white',\r\n                  borderRadius: '20px',\r\n                }}\r\n                onClick={() => {\r\n                  // sessionStorage.setItem(\r\n                  //   'advImages',\r\n                  //   JSON.stringify(images)\r\n                  // );\r\n                  // navigate('/adv');\r\n                  window.open(image?.linkAddress, '_blank');\r\n\r\n                  // window.location.href = image?.linkAddress;\r\n                }}\r\n              >\r\n                <img\r\n                  src={image?.imageList[0]?.Base64Image}\r\n                  alt={image?.Description}\r\n                  style={{\r\n                    width: '100%',\r\n                    height: '11.75em',\r\n                    borderRadius: '20px 20px 0 0',\r\n                  }}\r\n                />\r\n                <p\r\n                  style={{\r\n                    textAlign: 'center',\r\n                  }}\r\n                >\r\n                  {ArabicToPersian(image?.Header)}\r\n                </p>\r\n              </div>\r\n            }\r\n          />\r\n        ))}\r\n      </div>\r\n      <div style={{ paddingBlock: '1em' }}></div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NonCarousel;\r\n\r\n{\r\n  /* <Card\r\nelevation={2}\r\nsx={{\r\n  borderRadius: '.3em',\r\n  marginBlock: '1em',\r\n}}\r\n\r\n>\r\n\r\n</Card> */\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport Carousel from 'react-elastic-carousel';\r\nimport styles from '../../Styles/Image.Carousel.module.scss';\r\nimport { Stack, Container } from '@mui/material';\r\nimport { ArabicToPersian } from 'utils/ConvertToPersianTextFromArabic';\r\nimport useInfiniteCarouselSlide from '../../Hooks/useInfiniteCarouselSlide';\r\nimport NonCarousel from '../NonCarousel/NonCarousel';\r\n\r\nconst ImageCarousel = ({ images }) => {\r\n  const carouselRef = useRef(null);\r\n\r\n  const [setSlideLocation, slideLocation] =\r\n    useInfiniteCarouselSlide(images, carouselRef);\r\n\r\n  // const images = useCallCarouselFetcher();\r\n  const breakPoints = [\r\n    { width: 1, itemsToShow: 1 },\r\n    { width: 550, itemsToShow: 2, itemsToScroll: 2 },\r\n    { width: 768, itemsToShow: 1 },\r\n    { width: 1200, itemsToShow: 1 },\r\n  ];\r\n  const myArrow = () => <></>;\r\n\r\n  return (\r\n    <div className={styles.CarouselContainer}>\r\n      <div className=\"carousel-wrapper\">\r\n        {images ? (\r\n          <Stack>\r\n            <Carousel\r\n              ref={carouselRef}\r\n              initialActiveIndex={0}\r\n              breakPoints={breakPoints}\r\n              renderArrow={myArrow}\r\n              enableAutoPlay\r\n              autoPlaySpeed={10000}\r\n              onChange={(val, index) => {\r\n                setSlideLocation(index);\r\n              }}\r\n            >\r\n              {images?.List.filter(\r\n                (fl) => fl.ShowInBanner\r\n              )?.map((element) =>\r\n                element?.imageList\r\n                  .filter((el) => el.ShowInBannerDetail)\r\n                  .map((imageList) => {\r\n                    return (\r\n                      <Stack position=\"relative\">\r\n                        <p\r\n                          style={{\r\n                            position: 'absolute',\r\n                            bottom: 20,\r\n                            right: 10,\r\n                          }}\r\n                        >\r\n                          {ArabicToPersian(element?.Header)}\r\n                        </p>\r\n                        <img\r\n                          style={{\r\n                            width: '22.5em',\r\n                            height: '13.75em',\r\n                            objectFit: 'cover',\r\n                            padding: 0,\r\n                            margin: 0,\r\n                          }}\r\n                          src={imageList.Base64Image}\r\n                          alt={imageList.Description}\r\n                          onClick={() => {\r\n                            window.open(\r\n                              imageList?.ImageLink,\r\n                              '_blank'\r\n                            );\r\n                          }}\r\n                        />\r\n                      </Stack>\r\n                    );\r\n                  })\r\n              )}\r\n            </Carousel>\r\n          </Stack>\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        <div></div>\r\n      </div>\r\n      <br />\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageCarousel;\r\n","import { Post } from 'Xhr/Xhr';\r\nimport { env } from 'env';\r\n\r\nexport const GetCarouselImage = async () => {\r\n  return Post(\r\n    'POST',\r\n    `${process.env.REACT_APP_API_URL_API_GET_AD_LIST_IMAGE}`,\r\n    false,\r\n    {\r\n      MobileOrPc: true,\r\n      OutOrInLogin: true,\r\n      PatientOrPerson: false,\r\n    }\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { GetCarouselImage } from '../Adapters/GetCarouselImage';\r\n\r\nconst useCallCarouselFetcher = () => {\r\n  const [images, setCarouselImages] = React.useState();\r\n  React.useEffect(() => {\r\n    GetCarouselImage().then((response) => {\r\n      setCarouselImages(response.data.Data);\r\n    });\r\n  }, []);\r\n\r\n  return images;\r\n};\r\n\r\nexport default useCallCarouselFetcher;\r\n","import FindLangKey from 'Global/Functions/FindLangKey/FindLangKey';\r\nimport { IconAtom } from 'Global/Hooks/useCacheIcons/IconAtom';\r\nimport { useAtom } from 'jotai';\r\nimport Cookies from 'js-cookie';\r\n\r\nexport const DesktopLinks = () => {\r\n  const [icons] = useAtom(IconAtom);\r\n  const cachedIcons =\r\n    icons || JSON.parse(localStorage.getItem('icons'));\r\n\r\n  const IdPatient = Cookies.get('user')\r\n    ? JSON.parse(Cookies.get('user')).IdPatient\r\n    : '';\r\n\r\n  const currentPatientTitle = FindLangKey(\r\n    'main-menu-button-current-patient'\r\n  );\r\n  const patientsListTitle = FindLangKey(\r\n    'general-public-patients-list'\r\n  );\r\n  const newReferralTitle = FindLangKey(\r\n    'general-public-new-refferal'\r\n  );\r\n  const performanceReportTitle = FindLangKey(\r\n    'general-public-performance-report'\r\n  );\r\n  const uploadFileTitle = FindLangKey(\r\n    'main-menu-button-upload-file'\r\n  );\r\n  const wageTitle = FindLangKey('main-menu-button-wage');\r\n  const getAppointmentTitle = FindLangKey(\r\n    'main-menu-button-get-appointment'\r\n  );\r\n  const appointmentsTitle = FindLangKey(\r\n    'main-menu-button-appointments'\r\n  );\r\n  const labTestResultTitle = FindLangKey(\r\n    'lab-test-result-navbar-title-lab'\r\n  );\r\n  const freezeContractTitle = FindLangKey(\r\n    'main-menu-drawer-link-freeze-contract'\r\n  );\r\n  const invoiceReceiptTitle = FindLangKey(\r\n    'main-menu-button-invoice-receipt'\r\n  );\r\n  const quarteringTitle = FindLangKey(\r\n    'page-title-quartering'\r\n  );\r\n  const labActionsTitle = FindLangKey(\r\n    'main-menu-button-lab-actions'\r\n  );\r\n  const patologoyLabTitle = FindLangKey(\r\n    'patologoy-lab-route-title'\r\n  );\r\n\r\n  const data = [\r\n    // svg file names are equivalent to route names\r\n    {\r\n      Picture:\r\n        'data:image/svg+xml;base64,' +\r\n        cachedIcons?.MenueIcon['CurrentPatient.svg'],\r\n\r\n      Route: 'CurrentPatients',\r\n      Title: currentPatientTitle,\r\n    },\r\n    {\r\n      Picture:\r\n        'data:image/svg+xml;base64,' +\r\n        cachedIcons?.MenueIcon['PatientList.svg'],\r\n      Route: 'PatientList',\r\n      Title: patientsListTitle,\r\n    },\r\n    {\r\n      Picture:\r\n        'data:image/svg+xml;base64,' +\r\n        cachedIcons?.MenueIcon['PatientReferral.svg'],\r\n      Route: 'SearchPatientForErja',\r\n      Title: newReferralTitle,\r\n    },\r\n    {\r\n      Picture:\r\n        'data:image/svg+xml;base64,' +\r\n        cachedIcons?.MenueIcon['PerformanceReport.svg'],\r\n      Route: 'ServiceReportSummary',\r\n      Title: performanceReportTitle, //title is the text goes on top bar of each section\r\n    },\r\n    {\r\n      Picture:\r\n        'data:image/svg+xml;base64,' +\r\n        cachedIcons?.MenueIcon['Upload.svg'],\r\n      Route: '',\r\n      Title: uploadFileTitle,\r\n    },\r\n    {\r\n      Picture:\r\n        'data:image/svg+xml;base64,' +\r\n        cachedIcons?.MenueIcon['Wage.svg'],\r\n      Route: '',\r\n      Title: wageTitle,\r\n    },\r\n    IdPatient === 0\r\n      ? null\r\n      : {\r\n          Picture:\r\n            'data:image/svg+xml;base64,' +\r\n            cachedIcons?.MenueIcon['NewTurnLine.svg'],\r\n          Route: 'GetNewTurn',\r\n          Title: getAppointmentTitle,\r\n        },\r\n    IdPatient === 0\r\n      ? null\r\n      : {\r\n          Picture:\r\n            'data:image/svg+xml;base64,' +\r\n            cachedIcons?.MenueIcon['Turns.svg'],\r\n          Route: 'TurnList',\r\n          Title: appointmentsTitle,\r\n        },\r\n    IdPatient === 0\r\n      ? null\r\n      : {\r\n          Picture:\r\n            'data:image/svg+xml;base64,' +\r\n            cachedIcons?.MenueIcon['Seeanswer.svg'],\r\n          Route: 'LabTestResult',\r\n          Title: labTestResultTitle,\r\n        },\r\n    IdPatient === 0\r\n      ? null\r\n      : {\r\n          Picture:\r\n            'data:image/svg+xml;base64,' +\r\n            cachedIcons?.MenueIcon['FreezeContract.svg'],\r\n          Route: 'FreezeContract',\r\n          Title: freezeContractTitle,\r\n        },\r\n    {\r\n      Picture:\r\n        'data:image/svg+xml;base64,' +\r\n        cachedIcons?.MenueIcon['InvoiceReceipt.svg'],\r\n      Route: 'InvoiceReceipt',\r\n      Title: invoiceReceiptTitle,\r\n    },\r\n    {\r\n      Picture:\r\n        'data:image/svg+xml;base64,' +\r\n        cachedIcons?.MenueIcon['CheckInout.svg'],\r\n      Route: 'Quartering',\r\n      Title: quarteringTitle,\r\n    },\r\n    {\r\n      Picture:\r\n        'data:image/svg+xml;base64,' +\r\n        cachedIcons?.MenueIcon['AnswerTestLab.svg'],\r\n      Route: 'Lab',\r\n      Title: labActionsTitle,\r\n    },\r\n    {\r\n      Picture:\r\n        'data:image/svg+xml;base64,' +\r\n        cachedIcons?.MenueIcon['Specializedlaboratory.svg'],\r\n      Route: 'Pato',\r\n      Title: patologoyLabTitle,\r\n    },\r\n  ];\r\n  return data.filter((fl) => fl !== null);\r\n};\r\n","import { GlobalContext } from 'Global/Context/GlobalContextProvider';\r\nimport Cookies from 'js-cookie';\r\nimport React, { useContext, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAtom } from 'jotai';\r\nimport { sideBarLinks } from '../shared/side.bar.links';\r\n\r\nconst useSetDefaultMenuSelection = (screenWidth) => {\r\n  const [sidebarLinks] = useAtom(sideBarLinks);\r\n\r\n  const userCookie = Cookies.get('user');\r\n\r\n  const userAccessRole =\r\n    userCookie && JSON.parse(userCookie)?.AccessRole;\r\n\r\n  const navigate = useNavigate();\r\n\r\n  console.log('sidebarLinks->', sidebarLinks);\r\n\r\n  useEffect(() => {\r\n    if (screenWidth > 1024) {\r\n      if (\r\n        !userAccessRole.includes('Patient') ||\r\n        (userAccessRole.includes('Patient') &&\r\n          userAccessRole?.length !== 1)\r\n      ) {\r\n        if (sidebarLinks) {\r\n          navigate({\r\n            pathname: `/main/${sidebarLinks[0]?.Route}`,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }, [screenWidth, JSON.stringify(sidebarLinks)]);\r\n};\r\n\r\nexport default useSetDefaultMenuSelection;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport Carousel from 'react-elastic-carousel';\r\nimport styles from '../../Styles/Image.Carousel.module.scss';\r\nimport { Stack, Container } from '@mui/material';\r\nimport { ArabicToPersian } from 'utils/ConvertToPersianTextFromArabic';\r\nimport useInfiniteCarouselSlide from '../../Hooks/useInfiniteCarouselSlide';\r\nimport NonCarousel from '../NonCarousel/NonCarousel';\r\n\r\nconst DesktopCarousel = ({ images }) => {\r\n  const carouselRef = useRef(null);\r\n\r\n  const [setSlideLocation, slideLocation] =\r\n    useInfiniteCarouselSlide(images, carouselRef);\r\n\r\n  // const images = useCallCarouselFetcher();\r\n  const breakPoints = [\r\n    { width: 1, itemsToShow: 1 },\r\n    { width: 550, itemsToShow: 2, itemsToScroll: 2 },\r\n    { width: 768, itemsToShow: 1 },\r\n    { width: 1200, itemsToShow: 1 },\r\n  ];\r\n  const myArrow = () => <></>;\r\n\r\n  return (\r\n    <div className={styles.CarouselContainer}>\r\n      <div className=\"carousel-wrapper\">\r\n        {images ? (\r\n          <Stack>\r\n            <Carousel\r\n              ref={carouselRef}\r\n              initialActiveIndex={0}\r\n              breakPoints={breakPoints}\r\n              renderArrow={myArrow}\r\n              enableAutoPlay\r\n              autoPlaySpeed={10000}\r\n              onChange={(val, index) => {\r\n                setSlideLocation(index);\r\n              }}\r\n            >\r\n              {images?.List?.map((element) =>\r\n                element?.imageList.map((imageList) => {\r\n                  return (\r\n                    <Stack position=\"relative\">\r\n                      <p\r\n                        style={{\r\n                          position: 'absolute',\r\n                          bottom: 20,\r\n                          right: 10,\r\n                          backgroundColor: 'white',\r\n                          width: '100%',\r\n                          borderRadius: '0 10px 10px 10px',\r\n                          paddingRight: '.2em',\r\n                        }}\r\n                      >\r\n                        {ArabicToPersian(element?.Header)}\r\n                      </p>\r\n                      <img\r\n                        style={{\r\n                          width: '22.5em',\r\n                          height: '13.75em',\r\n                          objectFit: 'cover',\r\n                          padding: 0,\r\n                          margin: 0,\r\n                        }}\r\n                        src={imageList.Base64Image}\r\n                        alt={imageList.Description}\r\n                        onClick={() => {\r\n                          window.open(\r\n                            imageList?.ImageLink,\r\n                            '_blank'\r\n                          );\r\n                        }}\r\n                      />\r\n                    </Stack>\r\n                  );\r\n                })\r\n              )}\r\n            </Carousel>\r\n          </Stack>\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        <div></div>\r\n      </div>\r\n      <br />\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DesktopCarousel;\r\n","import React, { useRef } from 'react';\r\nimport {\r\n  Box,\r\n  Card,\r\n  Stack,\r\n  Alert,\r\n  LinearProgress,\r\n} from '@mui/material';\r\nimport { Links } from './variables/Links';\r\nimport MenuLinksCreator from 'Global/Components/Generators/MenuLinksCreator/MenuLinksCreator';\r\nimport styles from '../../Styles/Main.Menu.module.scss';\r\nimport { useContext } from 'react';\r\nimport { GlobalContext } from 'Global/Context/GlobalContextProvider';\r\nimport useCheckScreenWidth from 'Global/Hooks/useCheckScreenWidth';\r\nimport ImageCarousel from '../ImageCarousel/ImageCarousel';\r\nimport useCallCarouselFetcher from '../../Hooks/useCallCarouselFetcher';\r\nimport { ArabicToPersian } from 'utils/ConvertToPersianTextFromArabic';\r\nimport FindLangKey from 'Global/Functions/FindLangKey/FindLangKey';\r\nimport Cookies from 'js-cookie';\r\nimport { DesktopLinks } from '../MainTopProfileSummary/DesktopLinks';\r\nimport useSetDefaultMenuSelection from '../../Hooks/useSetDefaultMenuSelection';\r\nimport NonCarousel from '../NonCarousel/NonCarousel';\r\nimport DesktopCarousel from '../DesktopCarousel/DesktopCarousel';\r\nconst MainMenu = () => {\r\n  const GlobalConstants = useContext(GlobalContext);\r\n  const rootPaths = useContext(GlobalContext)?.rootPaths;\r\n  const lnks = DesktopLinks();\r\n  const roles = useContext(GlobalContext)?.roles;\r\n  const screenWidth = useCheckScreenWidth(); // 1024 for Desktop\r\n  const allLinks = Links(screenWidth);\r\n  const images = useCallCarouselFetcher();\r\n\r\n  const pathName = window.location.pathname;\r\n\r\n  const no_access_label = FindLangKey(\r\n    'genral-public-no-access-label'\r\n  );\r\n\r\n  const userCookie = Cookies.get('user');\r\n\r\n  const userAccessRole =\r\n    userCookie && JSON.parse(userCookie)?.AccessRole;\r\n\r\n  useSetDefaultMenuSelection(screenWidth, lnks);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        overflow: 'auto',\r\n        maxHeight: '60em',\r\n        paddingTop: '0',\r\n        marginTop: '0',\r\n        display:\r\n          userAccessRole?.includes('Patient') &&\r\n          userAccessRole?.length === 1 &&\r\n          screenWidth > 1024\r\n            ? 'flex'\r\n            : '',\r\n        justifyContent:\r\n          userAccessRole?.includes('Patient') &&\r\n          userAccessRole?.length === 1 &&\r\n          screenWidth > 1024\r\n            ? 'space-evenly'\r\n            : '',\r\n      }}\r\n    >\r\n      {screenWidth < 1024 ? (\r\n        <ImageCarousel images={images} />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <Stack className=\"main-menu-text\">\r\n        <Box\r\n          className={styles.MenuOptions}\r\n          sx={{\r\n            gridTemplateColumns:\r\n              GlobalConstants.MoreColumns &&\r\n              userAccessRole?.includes('Patient') &&\r\n              userAccessRole?.length === 1 &&\r\n              screenWidth > 1024\r\n                ? 'repeat(4, 12em) !important'\r\n                : 'repeat(4, 1fr) !important',\r\n          }}\r\n        >\r\n          {screenWidth <= 1024 ||\r\n          (userAccessRole.includes('Patient') &&\r\n            userAccessRole?.length === 1) ? (\r\n            <>\r\n              {allLinks.filter(\r\n                (fl) =>\r\n                  rootPaths?.includes(fl.Route) ||\r\n                  lnks\r\n                    ?.map((link) => link.Route)\r\n                    ?.includes(fl.Route)\r\n              ).length > 0 ? (\r\n                (userAccessRole?.includes('Patient') &&\r\n                  userAccessRole?.length === 1) ||\r\n                (screenWidth <= 1024 &&\r\n                  pathName === '/main') ? (\r\n                  <MenuLinksCreator\r\n                    Links={allLinks}\r\n                    AccessRoles={rootPaths}\r\n                  />\r\n                ) : (\r\n                  <></>\r\n                )\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n\r\n        {screenWidth < 1024 ? (\r\n          <Stack>\r\n            {/* <ImageCarousel images={images} /> */}\r\n            <NonCarousel\r\n              images={images?.List.filter(\r\n                (fl) => !fl.ShowInBanner\r\n              )}\r\n            />\r\n          </Stack>\r\n        ) : pathName === '/main' ? (\r\n          <Stack\r\n            direction=\"row\"\r\n            gap=\".5em\"\r\n            sx={{\r\n              margin: '0 auto',\r\n              padding: 0,\r\n              width: '80%',\r\n              position: 'absolute',\r\n              bottom: 0,\r\n              paddingTop: '.5em',\r\n            }}\r\n          >\r\n            {/* {images?.List.map((element) =>\r\n              element?.imageList.map((imageList) => (\r\n                <Card\r\n                  sx={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    marginTop: '26em',\r\n                  }}\r\n                >\r\n                  <img\r\n                    style={{\r\n                      width: '22.5em',\r\n                      height: '13.75em',\r\n                      objectFit: 'cover',\r\n                      padding: 0,\r\n                      margin: 0,\r\n                    }}\r\n                    src={imageList.Base64Image}\r\n                    alt={imageList.Description}\r\n                  />\r\n                  <p>{ArabicToPersian(element?.Header)}</p>\r\n                </Card>\r\n              ))\r\n            )} */}\r\n            {/* <ImageCarousel images={images} /> */}\r\n            <DesktopCarousel images={images} />\r\n          </Stack>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Stack>\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainMenu;\r\n\r\n// {screenWidth <= 1024 ? (\r\n//   <>\r\n//     {roles?.length === 0 ? (\r\n//       <LinearProgress\r\n//         sx={{\r\n//           marginBlock: '2em',\r\n//         }}\r\n//       />\r\n//     ) : (\r\n//       <>\r\n//         {allLinks.filter((fl) =>\r\n//           rootPaths.includes(fl.Route)\r\n//         ).length > 0 ? (\r\n//           <></>\r\n//         ) : (\r\n//           <Stack width=\"100%\" marginBottom=\"2em\">\r\n//             <Alert\r\n//               severity=\"warning\"\r\n//               sx={{\r\n//                 display: 'flex',\r\n//                 justifyContent: 'center',\r\n//                 alignItems: 'center',\r\n//               }}\r\n//             >\r\n//               {no_access_label}\r\n//             </Alert>\r\n//           </Stack>\r\n//         )}\r\n//       </>\r\n//     )}\r\n//   </>\r\n// ) : (\r\n//   <></>\r\n// )}\r\n","import FindLangKey from 'Global/Functions/FindLangKey/FindLangKey';\r\nimport { IconAtom } from 'Global/Hooks/useCacheIcons/IconAtom';\r\nimport { useAtom } from 'jotai';\r\nimport Cookies from 'js-cookie';\r\n\r\nexport const Links = (screenWidth) => {\r\n  const [icons] = useAtom(IconAtom);\r\n  const cachedIcons =\r\n    icons || JSON.parse(localStorage.getItem('icons'));\r\n\r\n  const IdPatient = Cookies.get('user')\r\n    ? JSON.parse(Cookies.get('user')).IdPatient\r\n    : '';\r\n\r\n  const get_appointment = FindLangKey(\r\n    'main-menu-button-get-appointment'\r\n  );\r\n  const appointments = FindLangKey(\r\n    'main-menu-button-appointments'\r\n  );\r\n  const lab_test_result = FindLangKey(\r\n    'lab-test-result-navbar-title-lab'\r\n  );\r\n\r\n  const FreezeContract = FindLangKey(\r\n    'main-menu-drawer-link-freeze-contract'\r\n  );\r\n\r\n  const userCookie = Cookies.get('user');\r\n\r\n  const userAccessRole =\r\n    userCookie && JSON.parse(userCookie)?.AccessRole;\r\n\r\n  const isOnlyPatient =\r\n    userAccessRole?.includes('Patient') &&\r\n    userAccessRole?.length === 1 &&\r\n    screenWidth > 1024;\r\n\r\n  const data = [\r\n    // svg file names are equivalent to route names\r\n    {\r\n      Picture:\r\n        'data:image/svg+xml;base64,' +\r\n        cachedIcons?.MenueIcon['CurrentPatient.svg'],\r\n\r\n      Route: isOnlyPatient\r\n        ? 'CurrentPatients'\r\n        : '/CurrentPatients',\r\n      Title: FindLangKey(\r\n        'main-menu-button-current-patient'\r\n      ),\r\n    },\r\n    {\r\n      Picture:\r\n        'data:image/svg+xml;base64,' +\r\n        cachedIcons?.MenueIcon['PatientList.svg'],\r\n      Route: isOnlyPatient ? 'PatientList' : '/PatientList',\r\n      Title: FindLangKey('general-public-patients-list'),\r\n    },\r\n    {\r\n      Picture:\r\n        'data:image/svg+xml;base64,' +\r\n        cachedIcons?.MenueIcon['PatientReferral.svg'],\r\n      Route: isOnlyPatient\r\n        ? 'SearchPatientForErja'\r\n        : '/SearchPatientForErja',\r\n      Title: FindLangKey('general-public-new-refferal'),\r\n    },\r\n    {\r\n      Picture:\r\n        'data:image/svg+xml;base64,' +\r\n        cachedIcons?.MenueIcon['PerformanceReport.svg'],\r\n      Route: isOnlyPatient\r\n        ? 'ServiceReportSummary'\r\n        : '/ServiceReportSummary',\r\n      Title: FindLangKey(\r\n        'general-public-performance-report'\r\n      ), //title is the text goes on top bar of each section\r\n    },\r\n    {\r\n      Picture:\r\n        'data:image/svg+xml;base64,' +\r\n        cachedIcons?.MenueIcon['Upload.svg'],\r\n      Route: '',\r\n      Title: FindLangKey('main-menu-button-upload-file'),\r\n    },\r\n    {\r\n      Picture:\r\n        'data:image/svg+xml;base64,' +\r\n        cachedIcons?.MenueIcon['Wage.svg'],\r\n      Route: '',\r\n      Title: FindLangKey('main-menu-button-wage'),\r\n    },\r\n    IdPatient === 0\r\n      ? null\r\n      : {\r\n          Picture:\r\n            'data:image/svg+xml;base64,' +\r\n            cachedIcons?.MenueIcon['NewTurnLine.svg'],\r\n          Route: isOnlyPatient\r\n            ? 'GetNewTurn'\r\n            : '/GetNewTurn',\r\n          Title: get_appointment,\r\n        },\r\n    IdPatient === 0\r\n      ? null\r\n      : {\r\n          Picture:\r\n            'data:image/svg+xml;base64,' +\r\n            cachedIcons?.MenueIcon['Turns.svg'],\r\n          Route: isOnlyPatient ? 'TurnList' : '/TurnList',\r\n          Title: appointments,\r\n        },\r\n    IdPatient === 0\r\n      ? null\r\n      : {\r\n          Picture:\r\n            'data:image/svg+xml;base64,' +\r\n            cachedIcons?.MenueIcon['Seeanswer.svg'],\r\n          Route: isOnlyPatient\r\n            ? 'LabTestResult'\r\n            : '/LabTestResult',\r\n          Title: lab_test_result,\r\n        },\r\n\r\n    IdPatient === 0\r\n      ? null\r\n      : {\r\n          Picture:\r\n            'data:image/svg+xml;base64,' +\r\n            cachedIcons?.MenueIcon['FreezeContract.svg'],\r\n          Route: isOnlyPatient\r\n            ? 'FreezeContract'\r\n            : '/FreezeContract',\r\n          Title: FreezeContract,\r\n        },\r\n    {\r\n      Picture:\r\n        'data:image/svg+xml;base64,' +\r\n        cachedIcons?.MenueIcon['InvoiceReceipt.svg'],\r\n      Route: isOnlyPatient\r\n        ? 'InvoiceReceipt'\r\n        : '/InvoiceReceipt',\r\n      Title: FindLangKey(\r\n        'main-menu-button-invoice-receipt'\r\n      ),\r\n    },\r\n    {\r\n      Picture:\r\n        'data:image/svg+xml;base64,' +\r\n        cachedIcons?.MenueIcon['CheckInout.svg'],\r\n      Route: isOnlyPatient ? 'Quartering' : '/Quartering',\r\n      Title: FindLangKey('page-title-quartering'),\r\n    },\r\n    {\r\n      Picture:\r\n        'data:image/svg+xml;base64,' +\r\n        cachedIcons?.MenueIcon['AnswerTestLab.svg'],\r\n      Route: isOnlyPatient ? 'Lab' : '/Lab',\r\n      Title: FindLangKey('main-menu-button-lab-actions'),\r\n    },\r\n    {\r\n      Picture:\r\n        'data:image/svg+xml;base64,' +\r\n        cachedIcons?.MenueIcon['Specializedlaboratory.svg'],\r\n      Route: isOnlyPatient ? 'Pato' : '/Pato',\r\n      Title: FindLangKey('patologoy-lab-route-title'),\r\n    },\r\n  ];\r\n  return data.filter((fl) => fl !== null);\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"frameGradient\":\"Main_Menu_Drawer_frameGradient__JMXAQ\",\"ProfileDrawer\":\"Main_Menu_Drawer_ProfileDrawer__xoXGn\",\"DrawerCard\":\"Main_Menu_Drawer_DrawerCard__xs4x3\",\"CardStack\":\"Main_Menu_Drawer_CardStack__8SfH2\",\"MenuDrawerSummaryDashBoard\":\"Main_Menu_Drawer_MenuDrawerSummaryDashBoard__7SDzr\",\"MenuDrawerSummaryUserImageContainer\":\"Main_Menu_Drawer_MenuDrawerSummaryUserImageContainer__+dn9U\",\"MenuDrawerSummaryStackOptions\":\"Main_Menu_Drawer_MenuDrawerSummaryStackOptions__RvhCd\",\"MenuDrawerSummaryOptions\":\"Main_Menu_Drawer_MenuDrawerSummaryOptions__+0Kdf\"};","import { Rating, Stack } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nconst ImageTitleStack = ({\r\n  source,\r\n  alt,\r\n  paragraph,\r\n  accessroleneeded,\r\n  isScore,\r\n}) => {\r\n  return (\r\n    <React.Fragment>\r\n      {!accessroleneeded ? (\r\n        <Stack direction=\"row-reverse\" alignItems=\"center\" spacing={1}>\r\n          {/* <img\r\n            style={{ width: \"20px\", height: \"20px\" }}\r\n            src={source}\r\n            alt={alt}\r\n          /> */}\r\n          {!isScore ? (\r\n            <p>{paragraph && paragraph && paragraph.replace(/ي/g, \"ی\")}</p>\r\n          ) : (\r\n            <Rating\r\n              name=\"read-only\"\r\n              value={paragraph && paragraph / 5}\r\n              readOnly\r\n              dir=\"rtl\"\r\n            />\r\n          )}\r\n        </Stack>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ImageTitleStack;\r\n","import React from \"react\";\r\nimport { Stack } from \"@mui/material\";\r\nimport ImageTitleStack from \"./ImageTitleStack\";\r\n\r\nconst ImageTitlePack = ({ userName }) => {\r\n  const cachedIcons = JSON.parse(localStorage.getItem(\"icons\"));\r\n  const svgHeader = \"data:image/svg+xml;base64,\";\r\n  return (\r\n    <React.Fragment>\r\n      <Stack alignItems=\"center\" spacing={1} mt={1}>\r\n        {/* <ImageTitleStack\r\n          source={FullName}\r\n          alt={\"نام و نام خانوادگی\"}\r\n          paragraph={userName?.FullName}\r\n        /> */}\r\n        {/* <ImageTitleStack\r\n          source={NationalCode}\r\n          alt={\"کدملی\"}\r\n          paragraph={userName?.NationalCode}\r\n        /> */}\r\n        <ImageTitleStack\r\n          source={svgHeader + cachedIcons?.GeneralIcon[\"FullName.svg\"]}\r\n          alt={\"تخصص\"}\r\n          paragraph={userName?.AdditionalInfo?.Speciality}\r\n          accessroleneeded={\r\n            userName.AccessRole && userName?.AccessRole?.includes(\"Patient\")\r\n          }\r\n        />\r\n        <p>{userName?.NationalCode}</p>\r\n\r\n        <ImageTitleStack\r\n          source={svgHeader + cachedIcons?.GeneralIcon[\"Score.svg\"]}\r\n          alt={\"امتیاز\"}\r\n          paragraph={userName?.AdditionalInfo?.Score}\r\n          isScore={true}\r\n        />\r\n      </Stack>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ImageTitlePack;\r\n","import React from 'react';\r\nimport { Stack } from '@mui/material';\r\n\r\nimport Cookies from 'js-cookie';\r\nimport ImageTitlePack from './ImageTitlePack';\r\nimport { ArabicToPersian } from 'utils/ConvertToPersianTextFromArabic';\r\nimport { themeColors } from 'Global/JsxThemeColor/JsxThemeColor';\r\nimport { AccountCircle } from '@mui/icons-material';\r\n\r\nconst MenuDrawerSummary = ({ styles }) => {\r\n  const userName =\r\n    Cookies.get('user') !== undefined &&\r\n    JSON.parse(Cookies.get('user'));\r\n  const userImage =\r\n    localStorage.getItem('userImage') !== null &&\r\n    JSON.parse(localStorage.getItem('userImage'));\r\n\r\n  const cachedIcons = JSON.parse(\r\n    localStorage.getItem('icons')\r\n  );\r\n  const imgHeader = 'data:image/svg+xml;base64,';\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Stack\r\n        mt=\".5em\"\r\n        sx={{\r\n          color: themeColors.ColorPrimary,\r\n        }}\r\n      >\r\n        <Stack alignItems=\"center\" gap=\".3em\">\r\n          {userImage?.length > 0 ? (\r\n            <img\r\n              src={`data:image/*;base64,${userImage}`}\r\n              alt=\"عکس کاربر\"\r\n              loading=\"...\"\r\n              width={60}\r\n              height={60}\r\n              style={{ borderRadius: '.3em' }}\r\n            />\r\n          ) : (\r\n            <AccountCircle\r\n              sx={{\r\n                width: '6em',\r\n                height: '6em',\r\n              }}\r\n            />\r\n          )}\r\n\r\n          <p>{ArabicToPersian(userName?.FullName)}</p>\r\n        </Stack>\r\n\r\n        <ImageTitlePack userName={userName} />\r\n      </Stack>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MenuDrawerSummary;\r\n","import React from \"react\";\r\nimport useLogOutUser from \"../Hooks/useLogOutUser\";\r\nimport FindLangKey from \"Global/Functions/FindLangKey/FindLangKey\";\r\nimport { ExitToApp } from \"@mui/icons-material\";\r\nconst LogOutButton = ({ setDrawerOpen }) => {\r\n  const { LogUserOut } = useLogOutUser(setDrawerOpen);\r\n  return (\r\n    <React.Fragment>\r\n      <span\r\n        onClick={() => LogUserOut()}\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row-reverse\",\r\n          alignItems: \"center\",\r\n          gap: \".5em\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        <ExitToApp\r\n          color=\"colorPrimer\"\r\n          sx={{\r\n            fontSize: \"1.5em !important\",\r\n          }}\r\n        />\r\n        {FindLangKey(\"main-menu-drawer-link-log-out\")}\r\n      </span>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default LogOutButton;\r\n","import SwalAlert from 'Global/Components/CommonComponents/SwalAlert/SwalAlert';\r\nimport Cookies from 'js-cookie';\r\nimport { Post } from 'Xhr/Xhr';\r\nimport { env } from 'env';\r\n\r\nexport const UploadUserImage = async (\r\n  base64,\r\n  setRefreshInterface,\r\n  GlobalConstants,\r\n  operationDoneMsg,\r\n  setRefreshForImage,\r\n  operatingMsg\r\n) => {\r\n  SwalAlert('info', operatingMsg, false);\r\n  const IdPerson =\r\n    Cookies.get('user') && JSON.parse(Cookies.get('user'));\r\n  return Post(\r\n    'POST',\r\n    `${process.env.REACT_APP_API_URL_API_UPLOAD_USER_IMAGE}`,\r\n    true,\r\n    {\r\n      idUser: parseInt(IdPerson.Id),\r\n      base64Image: base64,\r\n    }\r\n  )\r\n    .then((r) => {\r\n      if (r.data.resCode === 1) {\r\n        localStorage.removeItem('userImage');\r\n        localStorage.setItem(\r\n          'userImage',\r\n          JSON.stringify(base64)\r\n        );\r\n        SwalAlert('success', operationDoneMsg, false).then(\r\n          () => {\r\n            setRefreshInterface((prev) => !prev);\r\n            setRefreshForImage((prev) => !prev);\r\n            location.reload();\r\n          }\r\n        );\r\n      } else {\r\n        SwalAlert('error', r.data.resMessage, false);\r\n      }\r\n    })\r\n\r\n    .catch((err) => console.error(err));\r\n};\r\n","import SwalAlert from \"Global/Components/CommonComponents/SwalAlert/SwalAlert\";\r\nimport { GlobalContext } from \"Global/Context/GlobalContextProvider\";\r\nimport { useContext } from \"react\";\r\nimport { UploadUserImage } from \"Routes/Protected/MainPage/Components/MainMenuDrawer/Functions/UploadUserImage\";\r\n\r\nexport const fileSelector = (\r\n  format,\r\n  setRefreshInterface,\r\n  GlobalConstants,\r\n  operationDoneMsg,\r\n  setRefreshForImage,\r\n  operatingMsg\r\n) => {\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file.type.includes(`${format}/`)) {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => {\r\n        UploadUserImage(\r\n          reader.result,\r\n          setRefreshInterface,\r\n          GlobalConstants,\r\n          operationDoneMsg,\r\n          setRefreshForImage,\r\n          operatingMsg\r\n        );\r\n      };\r\n      reader.onerror = () => {\r\n        console.log(\"file Error\");\r\n      };\r\n    } else {\r\n      SwalAlert(\"error\", \"لطفا تصویر را انتخاب کنید\", false);\r\n    }\r\n  };\r\n  return handleFileChange;\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"Global/Context/GlobalContextProvider\";\r\nimport { fileSelector } from \"utils/FileSelector\";\r\nimport FindLangKey from \"Global/Functions/FindLangKey/FindLangKey\";\r\nimport { Button, ListItemIcon, MenuItem, MenuList, Stack } from \"@mui/material\";\r\nimport { Upload } from \"@mui/icons-material\";\r\n\r\nconst ImageUploader = ({ setRefreshInterface, setRefreshForImage }) => {\r\n  const fileInputRef = React.useRef(null);\r\n  const GlobalConstants = useContext(GlobalContext);\r\n  const operationDoneMsg = FindLangKey(\r\n    \"general-public-alert-success-operation\"\r\n  );\r\n  const operatingMsg = FindLangKey(\"general-public-alert-success-operation\");\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <input\r\n        onChange={fileSelector(\r\n          \"image\",\r\n          setRefreshInterface,\r\n          GlobalConstants,\r\n          operationDoneMsg,\r\n          setRefreshForImage,\r\n          operatingMsg\r\n        )}\r\n        type=\"file\"\r\n        accept=\".jpg, .png, .jpeg, .gif, .bmp, .tif, .tiff|image/*\"\r\n        hidden\r\n        ref={fileInputRef}\r\n      />\r\n\r\n      <span\r\n        onClick={() => fileInputRef.current.click()}\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row-reverse\",\r\n          alignItems: \"center\",\r\n          gap: \".5em\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        <Upload\r\n          color=\"colorPrimer\"\r\n          sx={{\r\n            fontSize: \"1.5em !important\",\r\n          }}\r\n        />\r\n        {FindLangKey(\"main-menu-drawer-link-image-upload\")}\r\n      </span>\r\n      {/* <Button\r\n      \r\n        sx={\r\n          {\r\n            // border: \"1px solid gainsboro\",\r\n            // borderRadius: \".3em\",\r\n            // display: \"flex\",\r\n            // flexDirection: \"row-reverse\",\r\n            // justifyContent: \"space-between\",\r\n            // pl: \"1.2em\",\r\n          }\r\n        }\r\n        startIcon={}\r\n        fullWidth\r\n        color=\"colorPrimer\"\r\n      >\r\n    \r\n      </Button> */}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ImageUploader;\r\n","import React from \"react\";\r\nimport { GetUserManual } from \"Routes/Protected/MainPage/Adapters/GetUserManual\";\r\nimport FindLangKey from \"Global/Functions/FindLangKey/FindLangKey\";\r\nimport { Button } from \"@mui/material\";\r\nimport { HelpCenter } from \"@mui/icons-material\";\r\nconst UserGuidFetchButton = () => {\r\n  const downloadingManualMsg = FindLangKey(\r\n    \"general-public-alert-downloading-manual\"\r\n  );\r\n  return (\r\n    <React.Fragment>\r\n      <span\r\n        onClick={() => {\r\n          GetUserManual(downloadingManualMsg);\r\n        }}\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row-reverse\",\r\n          alignItems: \"center\",\r\n          gap: \".5em\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        <HelpCenter\r\n          sx={{\r\n            fontSize: \"1.5em !important\",\r\n          }}\r\n          color=\"colorPrimer\"\r\n        />\r\n        {FindLangKey(\"main-menu-drawer-link-manual-download\")}\r\n      </span>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UserGuidFetchButton;\r\n","import SwalAlert from 'Global/Components/CommonComponents/SwalAlert/SwalAlert';\r\nimport { Post } from 'Xhr/Xhr';\r\nimport { env } from 'env';\r\n\r\nimport { Base64Downloader } from 'utils/Base64Downloader';\r\nexport const GetUserManual = async (\r\n  downloadingManualMsg\r\n) => {\r\n  SwalAlert('warning', downloadingManualMsg, false);\r\n  return Post(\r\n    'POST',\r\n    `${process.env.REACT_APP_API_URL_API_CO_INFORMATION}`,\r\n    false,\r\n    {\r\n      ReturnHelpFile: true,\r\n    }\r\n  ).then((response) => {\r\n    if (response.data.resCode === 1) {\r\n      Base64Downloader(\r\n        response.data.Data,\r\n        'manual',\r\n        'data:application/pdf'\r\n      );\r\n    } else {\r\n      SwalAlert('error', response.data.resMessage, false);\r\n    }\r\n  });\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n  ListItemIcon,\r\n  MenuItem,\r\n  MenuList,\r\n  Stack,\r\n} from '@mui/material';\r\nimport { GlobalContext } from 'Global/Context/GlobalContextProvider';\r\nconst DrawerMenuLinkCreator = ({ Links, AccessRoles }) => {\r\n  const navigate = useContext(GlobalContext)?.navigate;\r\n  return (\r\n    <React.Fragment>\r\n      {Links?.map(\r\n        (option, i) =>\r\n          (AccessRoles?.map((role) =>\r\n            role.toLowerCase()\r\n          )?.includes(option.Route.toLowerCase()) ||\r\n            option.isUnAuth) && (\r\n            <React.Fragment key={i}>\r\n              <span\r\n                onClick={() => navigate(option.Route)}\r\n                style={{\r\n                  display: 'flex',\r\n                  flexDirection: 'row-reverse',\r\n                  alignItems: 'center',\r\n                  gap: '.5em',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {React.cloneElement(option.Picture, {\r\n                  sx: {\r\n                    fontSize: '1.5em !important',\r\n                  },\r\n                  color: 'colorPrimer',\r\n                })}\r\n                {option.Title}\r\n              </span>\r\n              {/* <Button\r\n                color=\"colorPrimer\"\r\n                // sx={{\r\n                //   border: \"1px solid gainsboro\",\r\n                //   display: \"flex\",\r\n                //   flexDirection: \"row-reverse\",\r\n                //   justifyContent: \"space-between\",\r\n                //   pl: \"1.2em\",\r\n                // }}\r\n                startIcon={}\r\n              >\r\n                {option.Title}\r\n              </Button> */}\r\n            </React.Fragment>\r\n          )\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DrawerMenuLinkCreator;\r\n","import { Button, CssBaseline, Stack } from '@mui/material';\r\nimport React from 'react';\r\nimport { DrawerLinks } from '../variables/DrawerLinks';\r\nimport LogOutButton from './LogOutButton';\r\nimport ImageUploader from './ImageUploader';\r\nimport UserGuidFetchButton from './UserGuidFetchButton';\r\nimport { GlobalContext } from 'Global/Context/GlobalContextProvider';\r\nimport { useContext } from 'react';\r\nimport DrawerMenuLinkCreator from './DrawerMenuLinkCreator';\r\nimport FindLangKey from 'Global/Functions/FindLangKey/FindLangKey';\r\nimport {\r\n  ContactEmergency,\r\n  Info,\r\n  Settings,\r\n} from '@mui/icons-material';\r\nimport { themeColors } from 'Global/JsxThemeColor/JsxThemeColor';\r\nconst MainMenuDrawerOptions = ({\r\n  setDrawerOpen,\r\n  setRefreshInterface,\r\n  setRefreshForImage,\r\n}) => {\r\n  const rootPaths = useContext(GlobalContext)?.rootPaths;\r\n  const navigate = useContext(GlobalContext)?.navigate;\r\n  const setSettingDrawerOpen =\r\n    useContext(GlobalContext)?.setSettingDrawerOpen;\r\n  const about_us = FindLangKey('general-public-about-us');\r\n  const contact_us = FindLangKey(\r\n    'general-public-contact-us'\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <div\r\n        style={{\r\n          width: '100%',\r\n          color: `${themeColors.ColorPrimary}`,\r\n        }}\r\n      >\r\n        <Stack gap=\"1em\">\r\n          <ImageUploader\r\n            setRefreshInterface={setRefreshInterface}\r\n            setRefreshForImage={setRefreshForImage}\r\n          />\r\n          <DrawerMenuLinkCreator\r\n            Links={DrawerLinks()}\r\n            AccessRoles={rootPaths}\r\n          />\r\n\r\n          <span\r\n            onClick={() => setSettingDrawerOpen(true)}\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'row-reverse',\r\n              alignItems: 'center',\r\n              gap: '.5em',\r\n              cursor: 'pointer',\r\n            }}\r\n          >\r\n            <Settings\r\n              color=\"colorPrimer\"\r\n              sx={{\r\n                fontSize: '1.5em !important',\r\n              }}\r\n            />\r\n            {FindLangKey(\r\n              'personalization-drawer-navbar-title'\r\n            )}\r\n          </span>\r\n\r\n          <UserGuidFetchButton />\r\n          <span\r\n            onClick={() => navigate('/about')}\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'row-reverse',\r\n              alignItems: 'center',\r\n              gap: '.5em',\r\n              cursor: 'pointer',\r\n            }}\r\n          >\r\n            <Info\r\n              color=\"colorPrimer\"\r\n              sx={{\r\n                fontSize: '1.5em !important',\r\n              }}\r\n            />\r\n            {about_us}\r\n          </span>\r\n          <span\r\n            onClick={() => navigate('/ContactUs')}\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'row-reverse',\r\n              alignItems: 'center',\r\n              gap: '.5em',\r\n              cursor: 'pointer',\r\n            }}\r\n          >\r\n            <ContactEmergency\r\n              color=\"colorPrimer\"\r\n              sx={{\r\n                fontSize: '1.5em !important',\r\n              }}\r\n            />\r\n            {contact_us}\r\n          </span>\r\n          <LogOutButton setDrawerOpen={setDrawerOpen} />\r\n        </Stack>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MainMenuDrawerOptions;\r\n","import FindLangKey from 'Global/Functions/FindLangKey/FindLangKey';\r\nimport {\r\n  AccountBalance,\r\n  ContactEmergency,\r\n  DriveFolderUpload,\r\n  FactCheck,\r\n  Info,\r\n  LockReset,\r\n  Wallet,\r\n} from '@mui/icons-material';\r\nexport const DrawerLinks = () => [\r\n  {\r\n    Picture: (\r\n      <FactCheck\r\n        color=\"colorPrimer\"\r\n        sx={{ fontSize: '2.5em' }}\r\n      />\r\n    ),\r\n    Route: '/CompleteProfileUser',\r\n    Title: FindLangKey(\r\n      'main-menu-drawer-link-complete-profile'\r\n    ),\r\n  },\r\n  {\r\n    Picture: <DriveFolderUpload color=\"colorPrimer\" />,\r\n    Route: '/UploadOnCallDocs',\r\n    Title: FindLangKey(\r\n      'main-menu-drawer-link-upload-on-call-docs'\r\n    ),\r\n  },\r\n\r\n  {\r\n    Picture: <AccountBalance fontSize=\"large\" />,\r\n    Route: '/BankAccountList',\r\n    Title: FindLangKey('bank-account-list-navbar-title'),\r\n  },\r\n  {\r\n    Picture: <Wallet fontSize=\"large\" />,\r\n    Route: '/Wallet',\r\n    Title: FindLangKey('main-menu-drawer-wallet-button'),\r\n    isUnAuth: true,\r\n  },\r\n  {\r\n    Picture: <LockReset fontSize=\"large\" />,\r\n    Route: '/ChangePasswrod',\r\n    Title: FindLangKey('general-public-change-password'),\r\n  },\r\n  // {\r\n  //   Picture: <Info color=\"colorPrimer\" fontSize=\"large\" />,\r\n  //   Route: \"/about\",\r\n  //   Title: FindLangKey(\"general-public-about-us\"),\r\n  // },\r\n  // {\r\n  //   Picture: <ContactEmergency color=\"colorPrimer\" fontSize=\"large\" />,\r\n  //   Route: \"/ContactUs\",\r\n  //   Title: FindLangKey(\"general-public-contact-us\"),\r\n  // },\r\n];\r\n","import React from \"react\";\r\nimport { Container, Drawer, Stack } from \"@mui/material\";\r\nimport { ArrowForwardIos } from \"@mui/icons-material\";\r\nimport styles from \"../../Styles/Main.Menu.Drawer.module.scss\";\r\nimport MenuDrawerSummary from \"./components/MenuDrawerSummary\";\r\nimport MainMenuDrawerOptions from \"./components/MainMenuDrawerOptions\";\r\nimport { themeColors } from \"Global/JsxThemeColor/JsxThemeColor\";\r\nconst MainMenuDrawer = ({\r\n  IsDrawerOpen,\r\n  setDrawerOpen,\r\n  setRefreshInterface,\r\n  setRefreshForImage,\r\n}) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Drawer\r\n        variant=\"persistent\"\r\n        anchor=\"right\"\r\n        open={IsDrawerOpen}\r\n        classes={{ paper: styles.ProfileDrawer }}\r\n        hideBackdrop\r\n        PaperProps={{\r\n          sx: {\r\n            background: `${themeColors.ColorSecondary} !important`,\r\n          },\r\n        }}\r\n      >\r\n        <span\r\n          style={{\r\n            backgroundColor: themeColors.ColorPrimary,\r\n            position: \"fixed\",\r\n            width: \"100%\",\r\n            paddingLeft: \".5em\",\r\n            paddingTop: \".4em\",\r\n          }}\r\n          onClick={() => setDrawerOpen(false)}\r\n          className=\"main-menu-drawer\"\r\n        >\r\n          <ArrowForwardIos\r\n            sx={{\r\n\r\n              cursor: \"pointer\",\r\n              fontSize: \"1.6em !important\",\r\n              p: \"0 !important\",\r\n              m: \"0 !important\",\r\n              color: `${themeColors.ColorSecondary} !important`,\r\n            }}\r\n          />\r\n        </span>\r\n\r\n        <Container sx={{ pb: \"1em\", mt: \"5em\" }}>\r\n          <Stack spacing={2}>\r\n            <Stack\r\n              // sx={{ backgroundColor: \"white\" }}\r\n              // direction=\"row\"\r\n              // justifyContent=\"space-between\"\r\n              // alignItems=\"center\"\r\n              padding=\"0\"\r\n            >\r\n              <MenuDrawerSummary styles={styles} />\r\n            </Stack>\r\n            <hr />\r\n\r\n            <MainMenuDrawerOptions\r\n              setDrawerOpen={setDrawerOpen}\r\n              setRefreshInterface={setRefreshInterface}\r\n              setRefreshForImage={setRefreshForImage}\r\n            />\r\n          </Stack>\r\n        </Container>\r\n      </Drawer>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MainMenuDrawer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"sidebar_icons_colors_container__LpEFl\"};","import { atom } from \"jotai\";\r\n\r\nexport const InterfaceAtom = atom(false);\r\n","import { atom } from \"jotai\";\r\n\r\nexport const ImageAtom = atom(false);\r\n","import React, { useContext } from \"react\";\r\nimport { Avatar, Container, Stack } from \"@mui/material\";\r\nimport { themeColors } from \"Global/JsxThemeColor/JsxThemeColor\";\r\nimport { useAtom } from \"jotai\";\r\nimport sideBarIconStyles from \"./sidebar.icons.colors.module.scss\";\r\nimport MainMenuDrawerOptions from \"../MainMenuDrawer/components/MainMenuDrawerOptions\";\r\nimport { InterfaceAtom } from \"../../InterfaceAtom\";\r\nimport { GlobalContext } from \"Global/Context/GlobalContextProvider\";\r\nimport { ImageAtom } from \"../../ImageAtom\";\r\nimport { AccountCircle } from \"@mui/icons-material\";\r\n\r\nconst DesktopSideBar = () => {\r\n  const imgHeader = \"data:image/svg+xml;base64,\";\r\n\r\n  const userImage =\r\n    localStorage.getItem(\"userImage\") !== null &&\r\n    JSON.parse(localStorage.getItem(\"userImage\"));\r\n\r\n  const cachedIcons = JSON.parse(localStorage.getItem(\"icons\"));\r\n\r\n  const [, setRefreshInterface] = useAtom(InterfaceAtom);\r\n\r\n  const [, setRefreshForImage] = useAtom(ImageAtom);\r\n\r\n  const GlobalConstants = useContext(GlobalContext)?.setDrawerOpen;\r\n\r\n  const setDrawerOpen = GlobalConstants.setDrawerOpen;\r\n\r\n  console.log('userImage->',userImage)\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container sx={{ position: \"relative\", overflowX: \"hidden !important\" }}>\r\n        <Stack sx={{ mt: \"1em\" }} alignItems=\"center\">\r\n        {userImage?.length > 0 ? (\r\n            <img\r\n              src={`data:image/*;base64,${userImage}`}\r\n              alt=\"عکس کاربر\"\r\n              loading=\"...\"\r\n              width={60}\r\n              height={60}\r\n              style={{ borderRadius: '.3em' }}\r\n            />\r\n          ) : (\r\n            <AccountCircle\r\n              sx={{\r\n                width: '6em',\r\n                height: '6em',\r\n              }}\r\n            />\r\n          )}\r\n          <br/>\r\n          <div className={sideBarIconStyles.container}>\r\n            <MainMenuDrawerOptions\r\n              setDrawerOpen={setDrawerOpen}\r\n              setRefreshInterface={setRefreshInterface}\r\n              setRefreshForImage={setRefreshForImage}\r\n            />\r\n          </div>\r\n        </Stack>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DesktopSideBar;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"appbar_color_container__oNE4L\"};","import React from \"react\";\r\nimport { AppBar, Toolbar } from \"@mui/material\";\r\nimport style from \"./appbar.color.module.scss\";\r\nconst AppBarCustom = ({ children, bigWidth = \"60%\", styles, screenWidth }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar\r\n        color=\"colorPrimer\"\r\n        sx={{\r\n          width: screenWidth > 1024 ? bigWidth : \"100%\",\r\n          height: screenWidth > 1024 ? \"100%\" : \"initial\",\r\n          ...styles,\r\n        }}\r\n      >\r\n        <Toolbar\r\n          className={style.container}\r\n          variant=\"dense\"\r\n          sx={{\r\n            minHeight: \"2.3em !important\",\r\n            \"& *\": {\r\n              color: \"white !important\",\r\n            },\r\n\r\n            flexDirection: screenWidth > 1024 ? \"column\" : \"row-reverse\",\r\n            height: screenWidth > 1024 ? \"100%\" : \"initial\",\r\n            paddingInline: screenWidth > 1024 ? \"0 !important\" : \"initial\",\r\n          }}\r\n        >\r\n          {children}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AppBarCustom;\r\n","import {\r\n  AppBar,\r\n  Container,\r\n  IconButton,\r\n  Stack,\r\n  Toolbar,\r\n  Box,\r\n} from '@mui/material';\r\nimport React, { useContext } from 'react';\r\nimport { Menu, Search } from '@mui/icons-material';\r\nimport DesktopSideBar from './DesktopSideBar';\r\nimport AppBarCustom from 'Global/Components/CommonComponents/AppBarCustom/AppBarCustom';\r\nimport { GlobalContext } from 'Global/Context/GlobalContextProvider';\r\nimport { Outlet } from 'react-router-dom';\r\nimport i18next from 'i18next';\r\n\r\nimport MenuLinksCreator from 'Global/Components/Generators/MenuLinksCreator/MenuLinksCreator';\r\nimport OptionsDrawer from 'Global/Components/CommonComponents/BottomBar/Components/OptionsDrawer';\r\nimport { DesktopLinks } from './DesktopLinks';\r\nimport { themeColors } from 'Global/JsxThemeColor/JsxThemeColor';\r\nimport PersianSupportTextField from 'Global/Components/UnEditableComponents/PersianSupportTextField/PersianSupportTextField';\r\nimport FindLangKey from 'Global/Functions/FindLangKey/FindLangKey';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst MainTopProfileSummary = ({\r\n  setDrawerOpen,\r\n  screenWidth,\r\n}) => {\r\n  const HandleOpenDrawer = () => {\r\n    setDrawerOpen((prev) => !prev);\r\n  };\r\n  const rootPaths = useContext(GlobalContext)?.rootPaths;\r\n\r\n  const IsDrawerOpen =\r\n    useContext(GlobalContext)?.settingDrawerOpen;\r\n\r\n  const setSettingDrawerOpen =\r\n    useContext(GlobalContext)?.setSettingDrawerOpen;\r\n\r\n  const lnks = DesktopLinks();\r\n\r\n  // const searh_label = FindLangKey('general-public-search');\r\n\r\n  const userCookie = Cookies.get('user');\r\n  const userAccessRole =\r\n    userCookie && JSON.parse(userCookie)?.AccessRole;\r\n\r\n  return (\r\n    <Container>\r\n      <Stack\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        marginTop=\"1em\"\r\n        justifyContent=\"space-between\"\r\n        paddingX={{ lg: '7.8em' }}\r\n      >\r\n        <AppBar\r\n          color=\"colorPrimer\"\r\n          sx={{\r\n            width: screenWidth > 1024 ? '15%' : '100%',\r\n            height: screenWidth > 1024 ? '100%' : 'initial',\r\n          }}\r\n        >\r\n          <Toolbar\r\n            variant=\"dense\"\r\n            sx={{\r\n              minHeight: '2.3em !important',\r\n              flexDirection:\r\n                screenWidth > 1024\r\n                  ? 'column'\r\n                  : 'row-reverse',\r\n              height:\r\n                screenWidth > 1024 ? '100%' : 'initial',\r\n              paddingInline:\r\n                screenWidth > 1024\r\n                  ? '0 !important'\r\n                  : 'initial',\r\n              justifyContent: 'space-between',\r\n            }}\r\n          >\r\n            {screenWidth < 1024 ? (\r\n              <>\r\n                <IconButton\r\n                  sx={{ color: themeColors.ColorSecondary }}\r\n                  aria-label=\"menu\"\r\n                  onClick={HandleOpenDrawer}\r\n                >\r\n                  <Menu\r\n                    sx={{\r\n                      mr: '.39em',\r\n                      cursor: 'pointer',\r\n                      fill: `${themeColors.ColorSecondary} !important`,\r\n                    }}\r\n                  />\r\n                </IconButton>\r\n              </>\r\n            ) : (\r\n              <Stack>\r\n                <DesktopSideBar />\r\n\r\n                {userAccessRole.includes('Patient') &&\r\n                userAccessRole?.length === 1 ? (\r\n                  <></>\r\n                ) : (\r\n                  <AppBarCustom\r\n                    styles={{\r\n                      width: '7em',\r\n                      backgroundColor: 'white',\r\n                      marginRight: '15%',\r\n                      '& *': {\r\n                        color: 'black !important',\r\n                      },\r\n                      overflowY: 'auto',\r\n                    }}\r\n                    screenWidth={screenWidth}\r\n                  >\r\n                    <MenuLinksCreator\r\n                      Links={lnks}\r\n                      AccessRoles={rootPaths}\r\n                    />\r\n                  </AppBarCustom>\r\n                )}\r\n\r\n                <OptionsDrawer\r\n                  IsDrawerOpen={IsDrawerOpen}\r\n                  setDrawerOpen={setSettingDrawerOpen}\r\n                />\r\n              </Stack>\r\n            )}\r\n            <>\r\n              {screenWidth < 1024 ? (\r\n                <IconButton\r\n                  sx={{\r\n                    color: themeColors.ColorSecondary,\r\n                  }}\r\n                  aria-label=\"menu\"\r\n                  onClick={HandleOpenDrawer}\r\n                >\r\n                  <Search\r\n                    sx={{\r\n                      mr: '.39em',\r\n                      cursor: 'pointer',\r\n                      fill: `${themeColors.ColorSecondary} !important`,\r\n                    }}\r\n                  />\r\n                </IconButton>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Stack>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MainTopProfileSummary;\r\n\r\n// let UserInformation =\r\n// Cookies.get(\"user\") !== undefined && JSON.parse(Cookies.get(\"user\"));\r\n// const userImage =\r\n// localStorage.getItem(\"userImage\") !== null &&\r\n// JSON.parse(localStorage.getItem(\"userImage\"));\r\n\r\n{\r\n  /* <PictureFrameStandardSize\r\nsource={userImage}\r\nFunctionality={setDrawerOpen}\r\n/>\r\n<Stack spacing={1} marginTop=\"1em\">\r\n<TextIconStack\r\n  Icon={nameImg}\r\n  Gap={1}\r\n  Text={ArabicToPersian(UserInformation?.FullName)}\r\n/>\r\n{UserInformation?.IdPatient === 0 ? (\r\n  <TextIconStack\r\n    Icon={expertImg}\r\n    Gap={1}\r\n    Text={ArabicToPersian(\r\n      UserInformation?.AdditionalInfo?.Speciality\r\n    )}\r\n  />\r\n) : (\r\n  <></>\r\n)}\r\n</Stack> */\r\n}\r\n","import { Container, Stack } from '@mui/material';\r\nimport { GlobalContext } from 'Global/Context/GlobalContextProvider';\r\nimport React, { useState } from 'react';\r\nimport { useContext } from 'react';\r\nimport MainMenu from './Components/MainMenu/MainMenu';\r\nimport MainMenuDrawer from './Components/MainMenuDrawer/MainMenuDrawer';\r\nimport MainTopProfileSummary from './Components/MainTopProfileSummary/MainTopProfileSummary';\r\nimport useCheckScreenWidth from 'Global/Hooks/useCheckScreenWidth';\r\nimport { useAtom } from 'jotai';\r\nimport { InterfaceAtom } from './InterfaceAtom';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { getPrefrenceTrigger } from 'Global/shared/get.prefrence.trigger.atom';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst UserInterface = ({ setRefreshForImage }) => {\r\n  const screenWidth = useCheckScreenWidth(); // 1024 for Desktop\r\n\r\n  const [refreshInterface, setRefreshInterface] =\r\n    useAtom(InterfaceAtom);\r\n  const [keepPadding, setKeepPadding] = useState(false);\r\n  const GlobalConstants = useContext(GlobalContext);\r\n  const IsDrawerOpen = GlobalConstants.IsDrawerOpen;\r\n  const setDrawerOpen = GlobalConstants.setDrawerOpen;\r\n\r\n  const MoreRows = localStorage.getItem('MoreRows');\r\n  const [, setTrigger] = useAtom(getPrefrenceTrigger);\r\n  const userCookie = Cookies.get('user');\r\n  const userAccessRole =\r\n    userCookie && JSON.parse(userCookie)?.AccessRole;\r\n  React.useEffect(() => {\r\n    localStorage.removeItem('pay_redirect');\r\n\r\n    return () => {\r\n      sessionStorage.removeItem('storedServices');\r\n      sessionStorage.removeItem('previousSearchDate');\r\n    };\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    const rows = JSON.parse(MoreRows);\r\n    setKeepPadding(rows);\r\n  }, [MoreRows]);\r\n\r\n  // console.log('userAccessRole->', userAccessRole);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        className=\"menu-layout-color\"\r\n        style={{ paddingInline: keepPadding ? '.3em' : '' }}\r\n      >\r\n        {refreshInterface ? (\r\n          <>\r\n            <Stack spacing={6}>\r\n              <div\r\n                style={{\r\n                  marginRight:\r\n                    screenWidth > 1024\r\n                      ? userAccessRole.includes(\r\n                          'Patient'\r\n                        ) && userAccessRole?.length === 1\r\n                        ? '12em'\r\n                        : '20em'\r\n                      : '',\r\n                }}\r\n              >\r\n                {screenWidth > 1024 ? <Outlet /> : <></>}\r\n              </div>\r\n              <MainTopProfileSummary\r\n                setDrawerOpen={setDrawerOpen}\r\n                setRefreshForImage={setRefreshForImage}\r\n                screenWidth={screenWidth}\r\n              />\r\n              <MainMenu />\r\n            </Stack>\r\n\r\n            <MainMenuDrawer\r\n              IsDrawerOpen={IsDrawerOpen}\r\n              setDrawerOpen={setDrawerOpen}\r\n              setRefreshInterface={setRefreshInterface}\r\n              setRefreshForImage={setRefreshForImage}\r\n            />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Stack spacing={6}>\r\n              <div\r\n                style={{\r\n                  marginRight:\r\n                    screenWidth > 1024\r\n                      ? userAccessRole.includes(\r\n                          'Patient'\r\n                        ) && userAccessRole?.length === 1\r\n                        ? '12em'\r\n                        : '20em'\r\n                      : '',\r\n                }}\r\n              >\r\n                {screenWidth > 1024 ? <Outlet /> : <></>}\r\n              </div>\r\n              <MainTopProfileSummary\r\n                setDrawerOpen={setDrawerOpen}\r\n                screenWidth={screenWidth}\r\n              />\r\n              <MainMenu />\r\n            </Stack>\r\n\r\n            <MainMenuDrawer\r\n              IsDrawerOpen={IsDrawerOpen}\r\n              setDrawerOpen={setDrawerOpen}\r\n              setRefreshInterface={setRefreshInterface}\r\n              setRefreshForImage={setRefreshForImage}\r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UserInterface;\r\n","import React from 'react';\r\nimport useGetProfileImageOnMount from './Hooks/useGetProfileImageOnMount';\r\nimport UserInterface from './UserInterface';\r\nimport { useAtom } from 'jotai';\r\nimport { ImageAtom } from './ImageAtom';\r\nimport { env } from 'env';\r\nimport Cookies from 'js-cookie';\r\nconst MainPage = () => {\r\n  const [RefreshForImage, setRefreshForImage] =\r\n    useAtom(ImageAtom);\r\n  useGetProfileImageOnMount(setRefreshForImage);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {RefreshForImage ? (\r\n        <UserInterface\r\n          setRefreshForImage={setRefreshForImage}\r\n        />\r\n      ) : (\r\n        <UserInterface\r\n          setRefreshForImage={setRefreshForImage}\r\n        />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n"],"names":["setRefreshForImage","Data","Cookies","JSON","parse","React","GetUserImage","then","response","localStorage","setItem","stringify","data","prev","sideBarLinks","atom","_ref","Links","AccessRoles","setSideBarLinks","useAtom","useEffect","map","option","i","_AccessRoles$map","_AccessRoles$map2","role","toLowerCase","includes","Route","substring","filtered_Routes","filter","_AccessRoles$map3","_AccessRoles$map4","_jsx","children","ComponentMemoizer","element","_AccessRoles$map5","_AccessRoles$map6","_jsxs","className","styles","Link","to","replace","src","Picture","alt","Title","loading","style","background","cursor","backgroundPosition","backgroundSize","width","height","fontSize","dependecies","getItem","useInfiniteCarouselSlide","images","carouselRef","_images$List$","_images$List$$imageLi","slideLocation","setSlideLocation","useState","listLength","List","imageList","length","timeOut","setTimeout","startNumber","delay","counter","timer","setInterval","current","goTo","clearInterval","countdownTimer","clearTimeout","useNavigate","console","log","marginInline","image","index","_image$imageList$","FrameCard","cardProps","borderRadius","marginBlock","padding","jsx","backgroundColor","onClick","window","open","linkAddress","Base64Image","Description","textAlign","ArabicToPersian","Header","Id","paddingBlock","_images$List$filter","useRef","Stack","Carousel","ref","initialActiveIndex","breakPoints","itemsToShow","itemsToScroll","renderArrow","myArrow","_Fragment","enableAutoPlay","autoPlaySpeed","onChange","val","fl","ShowInBanner","el","ShowInBannerDetail","position","bottom","right","objectFit","margin","ImageLink","useCallCarouselFetcher","setCarouselImages","async","Post","concat","process","MobileOrPc","OutOrInLogin","PatientOrPerson","GetCarouselImage","DesktopLinks","icons","IconAtom","cachedIcons","IdPatient","currentPatientTitle","FindLangKey","patientsListTitle","newReferralTitle","performanceReportTitle","uploadFileTitle","wageTitle","getAppointmentTitle","appointmentsTitle","labTestResultTitle","freezeContractTitle","invoiceReceiptTitle","quarteringTitle","labActionsTitle","patologoyLabTitle","MenueIcon","screenWidth","_JSON$parse","sidebarLinks","userCookie","userAccessRole","AccessRole","navigate","_sidebarLinks$","pathname","_images$List","paddingRight","MainMenu","_useContext","_useContext2","GlobalConstants","useContext","GlobalContext","rootPaths","lnks","roles","useCheckScreenWidth","allLinks","get_appointment","appointments","lab_test_result","FreezeContract","isOnlyPatient","pathName","location","useSetDefaultMenuSelection","overflow","maxHeight","paddingTop","marginTop","display","justifyContent","ImageCarousel","Box","sx","gridTemplateColumns","MoreColumns","_lnks$map","link","MenuLinksCreator","NonCarousel","direction","gap","DesktopCarousel","source","paragraph","accessroleneeded","isScore","alignItems","spacing","Rating","name","value","readOnly","dir","_userName$AdditionalI","_userName$AccessRole","_userName$AdditionalI2","userName","svgHeader","mt","ImageTitleStack","GeneralIcon","AdditionalInfo","Speciality","NationalCode","Score","undefined","userImage","color","themeColors","AccountCircle","FullName","ImageTitlePack","setDrawerOpen","LogUserOut","useLogOutUser","flexDirection","ExitToApp","fileSelector","format","setRefreshInterface","operationDoneMsg","operatingMsg","e","file","target","files","type","reader","FileReader","readAsDataURL","onload","base64","SwalAlert","IdPerson","idUser","parseInt","base64Image","r","resCode","removeItem","reload","resMessage","catch","err","error","UploadUserImage","result","onerror","fileInputRef","accept","hidden","click","Upload","UserGuidFetchButton","downloadingManualMsg","ReturnHelpFile","Base64Downloader","GetUserManual","HelpCenter","isUnAuth","_useContext3","setSettingDrawerOpen","about_us","contact_us","CssBaseline","ImageUploader","DrawerMenuLinkCreator","FactCheck","DriveFolderUpload","AccountBalance","Wallet","LockReset","Settings","Info","ContactEmergency","LogOutButton","IsDrawerOpen","Drawer","variant","anchor","classes","paper","hideBackdrop","PaperProps","paddingLeft","ArrowForwardIos","p","m","Container","pb","MenuDrawerSummary","MainMenuDrawerOptions","InterfaceAtom","ImageAtom","DesktopSideBar","overflowX","sideBarIconStyles","bigWidth","AppBar","Toolbar","minHeight","paddingInline","HandleOpenDrawer","settingDrawerOpen","paddingX","lg","IconButton","Menu","mr","fill","AppBarCustom","marginRight","overflowY","OptionsDrawer","Search","refreshInterface","keepPadding","setKeepPadding","MoreRows","setTrigger","getPrefrenceTrigger","sessionStorage","rows","Outlet","MainTopProfileSummary","MainMenuDrawer","MainPage","RefreshForImage","useGetProfileImageOnMount","UserInterface"],"sourceRoot":""}