{"version":3,"file":"static/js/608.88232cf5.chunk.js","mappings":"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","sources":["Global/Components/ReadOnlyComponents/ReadOnlyTextField.js","Routes/Protected/CompleteProfileUser/Adapters/SubmitUserInformation.js","Routes/Protected/CompleteProfileUser/Functions/HandleFormSubmit.js","Routes/Protected/CompleteProfileUser/Adapters/GetUserInformation.js","Routes/Protected/CompleteProfileUser/Hooks/useGatherUserInformation.js","Routes/Protected/CompleteProfileUser/Variables/CompleteUserProfileDataArray.js","Routes/Protected/CompleteProfileUser/Variables/CompleteUserProfileDefaultValues.js","Routes/Protected/CompleteProfileUser/CompleteProfileUser.js"],"sourcesContent":["import React from \"react\";\r\nimport { Stack, TextField } from \"@mui/material\";\r\n\r\nconst ReadOnlyTextField = ({ label, value, onChange, isEnglish = false }) => {\r\n  React.useEffect(() => {\r\n    onChange && onChange(value);\r\n  }, [value]);\r\n  return (\r\n    <React.Fragment>\r\n      <Stack alignItems=\"flex-end\" width=\"100%\">\r\n        <sub\r\n          style={{\r\n            width: \"100%\",\r\n            textAlign: isEnglish ? \"left\" : \"right\",\r\n          }}\r\n          dir={isEnglish ? \"ltr\" : \"rtl\"}\r\n        >\r\n          {label}\r\n        </sub>\r\n        <TextField\r\n          fullWidth\r\n          color=\"colorPrimer\"\r\n          disabled\r\n          value={value === \"\" ? \"داده ای ثبت نشده\" : value ?? \"\"}\r\n          size=\"small\"\r\n        />\r\n      </Stack>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ReadOnlyTextField;\r\n","import SwalAlert from 'Global/Components/CommonComponents/SwalAlert/SwalAlert';\r\nimport { Post } from 'Xhr/Xhr';\r\nimport { env } from 'env';\r\n\r\nexport const SubmitUserInformation = async (data) => {\r\n  return Post(\r\n    'POST',\r\n    `${process.env.REACT_APP_API_URL_API_UPDATE_USER_PROFILE}`,\r\n    true,\r\n    {\r\n      ...data,\r\n    }\r\n  ).then((response) => {\r\n    if (response.data.resCode === 1) {\r\n      SwalAlert('success', response.data.resMessage, false);\r\n    } else {\r\n      SwalAlert('error', response.data.resMessage, false);\r\n    }\r\n  });\r\n};\r\n","import { SubmitUserInformation } from \"../Adapters/SubmitUserInformation\";\r\n\r\nexport const HandleFormSubmit = (data, profileInfo) => {\r\n  for (let key in data) {\r\n    if (data[key] === \"\" || data[key] === null || data[key] === undefined) {\r\n      data[key] = profileInfo[key];\r\n    }\r\n  }\r\n  SubmitUserInformation(data);\r\n};\r\n","import SwalAlert from 'Global/Components/CommonComponents/SwalAlert/SwalAlert';\r\nimport Cookies from 'js-cookie';\r\nimport { Post } from 'Xhr/Xhr';\r\nimport { env } from 'env';\r\n\r\nexport const GetUserInformation = async (\r\n  setUserInformation\r\n) => {\r\n  const Id =\r\n    Cookies.get('user') &&\r\n    JSON.parse(Cookies.get('user'))?.Id;\r\n  return Post(\r\n    'POST',\r\n    `${process.env.REACT_APP_API_URL_API_GET_USER_PROFILE_INFO}`,\r\n    true,\r\n    {\r\n      Id,\r\n    }\r\n  ).then((response) => {\r\n    if (response.data.resCode === 1) {\r\n      setUserInformation(response.data.Data);\r\n    } else {\r\n      SwalAlert('error', response.data.resMessage, false);\r\n    }\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport { GetUserInformation } from \"../Adapters/GetUserInformation\";\r\n\r\nconst useGatherUserInformation = () => {\r\n  const [userInformation, setUserInformation] = React.useState({});\r\n  React.useEffect(() => {\r\n    GetUserInformation(setUserInformation);\r\n  }, []);\r\n  return { userInformation };\r\n};\r\n\r\nexport default useGatherUserInformation;\r\n","import EditableCustomizableSelect from 'Global/Components/EditableComponents/EditableCustomizableSelect/EditableCustomizableSelect';\r\nimport EditablePersianSupportTextField from 'Global/Components/EditableComponents/EditablePersianSupportTextField/EditablePersianSupportTextField';\r\nimport ReadOnlyTextField from 'Global/Components/ReadOnlyComponents/ReadOnlyTextField';\r\nimport FindLangKey from 'Global/Functions/FindLangKey/FindLangKey';\r\nimport Cookies from 'js-cookie';\r\nimport { ArabicToPersian } from 'utils/ConvertToPersianTextFromArabic';\r\n\r\nexport const CompleteUserProfileDataArray = (\r\n  userInformation,\r\n  languageArray,\r\n  i18n,\r\n  enableEdit\r\n) => {\r\n  // const user = JSON.parse(Cookies.get(\"user\") || \"\");\r\n\r\n  const completeUserProfileDataArray = [\r\n    {\r\n      element: (\r\n        <EditablePersianSupportTextField\r\n          disabled={enableEdit}\r\n          label={FindLangKey(\r\n            'complete-user-input-first-name',\r\n            languageArray\r\n          )}\r\n          Initialvalue={ArabicToPersian(\r\n            userInformation.FirstName\r\n          )}\r\n          isEnglish={i18n?.language === 'en'}\r\n        />\r\n      ),\r\n      name: 'FirstName',\r\n    },\r\n    {\r\n      element: (\r\n        <EditablePersianSupportTextField\r\n          disabled={enableEdit}\r\n          label={FindLangKey(\r\n            'complete-user-input-last-name',\r\n            languageArray\r\n          )}\r\n          Initialvalue={ArabicToPersian(\r\n            userInformation.LastName\r\n          )}\r\n          isEnglish={i18n?.language === 'en'}\r\n        />\r\n      ),\r\n      name: 'LastName',\r\n    },\r\n    {\r\n      element: (\r\n        <EditablePersianSupportTextField\r\n          disabled={enableEdit}\r\n          label={FindLangKey(\r\n            'complete-user-information-input-father-name',\r\n            languageArray\r\n          )}\r\n          Initialvalue={ArabicToPersian(\r\n            userInformation.FatherName\r\n          )}\r\n          isEnglish={i18n?.language === 'en'}\r\n        />\r\n      ),\r\n      name: 'FatherName',\r\n    },\r\n    {\r\n      element: (\r\n        <EditablePersianSupportTextField\r\n          disabled={enableEdit}\r\n          label={FindLangKey(\r\n            'general-public-mobile-number',\r\n            languageArray\r\n          )}\r\n          Initialvalue={userInformation.Mobile}\r\n          isEnglish={i18n?.language === 'en'}\r\n        />\r\n      ),\r\n      name: 'Mobile',\r\n    },\r\n    {\r\n      element: (\r\n        <EditablePersianSupportTextField\r\n          disabled={enableEdit}\r\n          label={FindLangKey(\r\n            'signup-input-email',\r\n            languageArray\r\n          )}\r\n          Initialvalue={userInformation.Email}\r\n          isEnglish={i18n?.language === 'en'}\r\n        />\r\n      ),\r\n      name: 'Email',\r\n    },\r\n    {\r\n      element: (\r\n        <EditablePersianSupportTextField\r\n          disabled={enableEdit}\r\n          label={FindLangKey(\r\n            'complete-user-information-input-birth-day',\r\n            languageArray\r\n          )}\r\n          Initialvalue={userInformation.BirthDate}\r\n          isEnglish={i18n?.language === 'en'}\r\n        />\r\n      ),\r\n      name: 'BirthDate',\r\n    },\r\n    {\r\n      element: (\r\n        // <EditablePersianSupportTextField\r\n        //   label={FindLangKey(\r\n        //     \"complete-user-information-input-city-born\",\r\n        //     languageArray\r\n        //   )}\r\n        //   Initialvalue={userInformation.nameCityTavalod}\r\n        //   isEnglish={i18n?.language === \"en\"}\r\n        // />\r\n        <EditableCustomizableSelect\r\n          disabled={enableEdit}\r\n          isSingle={true}\r\n          label={FindLangKey(\r\n            'complete-user-information-input-city-born',\r\n            languageArray\r\n          )}\r\n          initialData={[\r\n            {\r\n              ItemValue: userInformation.nameCityTavalod,\r\n              ItemContent: userInformation.nameCityTavalod,\r\n            },\r\n          ]}\r\n          SelectableDataArray={[\r\n            {\r\n              ItemValue: userInformation.idCityTavalod,\r\n              ItemContent: userInformation.nameCityTavalod,\r\n            },\r\n          ]}\r\n        />\r\n      ),\r\n      name: 'nameCityTavalod',\r\n    },\r\n    {\r\n      element: (\r\n        // <EditablePersianSupportTextField\r\n        //   label={FindLangKey(\r\n        //     \"complete-user-information-input-city-live\",\r\n        //     languageArray\r\n        //   )}\r\n        //   Initialvalue={userInformation.nameCitySokonat}\r\n        //   isEnglish={i18n?.language === \"en\"}\r\n        // />\r\n\r\n        // <EditableCustomizableSelect\r\n        //   disabled={true}\r\n        //   isSingle={true}\r\n        //   label={FindLangKey(\r\n        //     \"complete-user-information-input-city-live\",\r\n        //     languageArray\r\n        //   )}\r\n        //   initialData={[\r\n        //     {\r\n        //       ItemValue: userInformation.nameCitySokonat,\r\n        //       ItemContent: userInformation.nameCitySokonat,\r\n        //     },\r\n        //   ]}\r\n        //   SelectableDataArray={[\r\n        //     {\r\n        //       ItemValue: userInformation.idCitySokonat,\r\n        //       ItemContent: userInformation.nameCitySokonat,\r\n        //     },\r\n        //   ]}\r\n        // />\r\n        <></>\r\n      ),\r\n      name: 'nameCitySokonat',\r\n    },\r\n\r\n    {\r\n      element: (\r\n        <EditablePersianSupportTextField\r\n          label={FindLangKey(\r\n            'general-public-address',\r\n            languageArray\r\n          )}\r\n          Initialvalue={ArabicToPersian(\r\n            userInformation.Address\r\n          )}\r\n          isEnglish={i18n?.language === 'en'}\r\n        />\r\n      ),\r\n      name: 'Address',\r\n      required: true,\r\n    },\r\n    {\r\n      element: (\r\n        <EditablePersianSupportTextField\r\n          label={FindLangKey(\r\n            'complete-user-information-input-telephone',\r\n            languageArray\r\n          )}\r\n          Initialvalue={userInformation.Telephon}\r\n          isEnglish={i18n?.language === 'en'}\r\n        />\r\n      ),\r\n      name: 'Telephon',\r\n      required: true,\r\n    },\r\n  ];\r\n  return completeUserProfileDataArray;\r\n};\r\n","export const CompleteUserProfileDefaultValues = (userInformation) => {\r\n  const completeProfileDefaultValues = {\r\n    FirstName: userInformation?.FirstName,\r\n    LastName: userInformation?.LastName,\r\n    FatherName: userInformation?.FatherName,\r\n    BirthDate: userInformation?.BirthDate,\r\n    NationalCode: userInformation?.NationalCode,\r\n    Address: userInformation?.Address,\r\n    Telephon: userInformation?.Telephon,\r\n    Mobile: userInformation?.Mobile,\r\n    FullName: userInformation?.FullName,\r\n    Email: userInformation?.Email,\r\n    Id: userInformation?.Id,\r\n    IdGender: userInformation?.IdGender,\r\n    NameGender: userInformation?.NameGender,\r\n    idCitySokonat: userInformation?.idCitySokonat,\r\n    idCityTavalod: userInformation?.idCityTavalod,\r\n  };\r\n  return completeProfileDefaultValues;\r\n};\r\n","import { Container, Stack } from '@mui/material';\r\nimport SubmitButton from 'Global/Components/UnEditableComponents/SubmitButton/SubmitButton';\r\nimport ReactHookFormGenerator from 'Global/ReactHookFormGenerator/ReactHookFormGenerator';\r\nimport React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { HandleFormSubmit } from './Functions/HandleFormSubmit';\r\nimport useGatherUserInformation from './Hooks/useGatherUserInformation';\r\nimport { CompleteUserProfileDataArray } from './Variables/CompleteUserProfileDataArray';\r\nimport { CompleteUserProfileDefaultValues } from './Variables/CompleteUserProfileDefaultValues';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useContext } from 'react';\r\nimport { GlobalContext } from 'Global/Context/GlobalContextProvider';\r\nimport FindLangKey from 'Global/Functions/FindLangKey/FindLangKey';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst CompleteProfileUser = () => {\r\n  const { userInformation } = useGatherUserInformation();\r\n  const { control, formState, handleSubmit } = useForm({\r\n    defaultValues:\r\n      CompleteUserProfileDefaultValues(userInformation),\r\n  });\r\n  const { t, i18n } = useTranslation();\r\n  const languageArray =\r\n    useContext(GlobalContext)?.LanguageArray;\r\n  const roles = useContext(GlobalContext).roles;\r\n\r\n  const user_cookie = JSON.parse(Cookies.get('user'));\r\n  const enableEdit = user_cookie?.CommitedHisInfo;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container maxWidth=\"md\">\r\n        <form\r\n          onSubmit={handleSubmit((data) => {\r\n            HandleFormSubmit(data, userInformation);\r\n          })}\r\n        >\r\n          <Stack\r\n            marginTop=\"1em\"\r\n            sx={{\r\n              gap: '.5em',\r\n            }}\r\n          >\r\n            <ReactHookFormGenerator\r\n              control={control}\r\n              formState={formState}\r\n              DataArray={CompleteUserProfileDataArray(\r\n                userInformation,\r\n                languageArray,\r\n                i18n,\r\n                enableEdit\r\n              )}\r\n            />\r\n            <SubmitButton\r\n              label={FindLangKey('general-public-btn-save')}\r\n            />\r\n            <br />\r\n          </Stack>\r\n        </form>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CompleteProfileUser;\r\n"],"names":["_ref","label","value","onChange","isEnglish","React","_jsx","children","_jsxs","Stack","alignItems","width","style","textAlign","dir","TextField","fullWidth","color","disabled","size","HandleFormSubmit","data","profileInfo","key","undefined","async","Post","concat","process","then","response","resCode","SwalAlert","resMessage","SubmitUserInformation","useGatherUserInformation","userInformation","setUserInformation","_JSON$parse","Id","Cookies","JSON","parse","Data","GetUserInformation","CompleteUserProfileDataArray","languageArray","i18n","enableEdit","element","EditablePersianSupportTextField","FindLangKey","Initialvalue","ArabicToPersian","FirstName","language","name","LastName","FatherName","Mobile","Email","BirthDate","EditableCustomizableSelect","isSingle","initialData","ItemValue","nameCityTavalod","ItemContent","SelectableDataArray","idCityTavalod","_Fragment","Address","required","Telephon","CompleteUserProfileDefaultValues","NationalCode","FullName","IdGender","NameGender","idCitySokonat","CompleteProfileUser","_useContext","control","formState","handleSubmit","useForm","defaultValues","t","useTranslation","useContext","GlobalContext","LanguageArray","user_cookie","roles","CommitedHisInfo","Container","maxWidth","onSubmit","marginTop","sx","gap","ReactHookFormGenerator","DataArray","SubmitButton"],"sourceRoot":""}